package fql_lib.examples;

public class Patrick21Example extends Example {
	
	@Override
	public boolean isPatrick() {
		return true;
	}

	@Override
	public String getName() {
		return "P NIST 3";
	}

	@Override
	public String getText() {
		return s;
	}
	
	String s = "adom : type"
			+ "\n"
			+ "\nGlassCeramics: adom"
			+ "\nGlass: adom"
			+ "\nCrystalline: adom"
			+ "\nNonCrystalline: adom"
			+ "\nCeramic: adom"
			+ "\nComposite: adom"
			+ "\nMetal: adom"
			+ "\nFerrous: adom"
			+ "\nCastIron: adom"
			+ "\nDieSteel: adom"
			+ "\nSteel: adom"
			+ "\nToolSteel: adom"
			+ "\nStainlessSteel: adom"
			+ "\nNonFerrous: adom"
			+ "\nSuperAlloy: adom"
			+ "\nStellite : adom"
			+ "\nIconel: adom"
			+ "\nHastelloy: adom"
			+ "\nElastomer: adom"
			+ "\nPlastic: adom"
			+ "\nPolymer: adom"
			+ "\nHermoset: adom"
			+ "\nThermoPlastic: adom"
			+ "\nNylon: adom"
			+ "\nPVC: adom"
			+ "\nPolyester: adom"
			+ "\nMaterial: adom"
			+ "\n\"Stainless Steel\":adom"
			+ "\n\"Tool Steel\":adom"
			+ "\n\"Plastics\":adom"
			+ "\n\"4140 Alloy Steels\":adom"
			+ "\n\"300 Stainless Steel\":adom"
			+ "\n\"Stainless Steel 302\":adom"
			+ "\n\"304 Stainless Steel\":adom"
			+ "\n\"316 Stainless Steel\":adom"
			+ "\n\"15-4 Stainless Steel\":adom"
			+ "\n\"17-4 Stainless Steel\":adom"
			+ "\n"
			+ "\n///////////////////////////////////////"
			+ "\n"
			+ "\nisa_preschema = schema {"
			+ "\n	nodes B;"
			+ "\n	edges f : B -> B, name : B -> adom;"
			+ "\n	equations f.f.f.f.f = f.f.f.f;"
			+ "\n}"
			+ "\n"
			+ "\nisa_pre = instance {"
			+ "\n	variables"
			+ "\n	vGlassCeramics"
			+ "\n	vGlass"
			+ "\n	vCrystalline"
			+ "\n	vNonCrystalline"
			+ "\n	vCeramic"
			+ "\n	vComposite"
			+ "\n	vMetal"
			+ "\n	vFerrous"
			+ "\n	vCastIron"
			+ "\n	vDieSteel"
			+ "\n	vSteel"
			+ "\n	vToolSteel"
			+ "\n	vStainlessSteel"
			+ "\n	vNonFerrous"
			+ "\n	vSuperAlloy"
			+ "\n	vStellite "
			+ "\n	vIconel"
			+ "\n	vHastelloy"
			+ "\n	vElastomer"
			+ "\n	vPlastic"
			+ "\n	vPolymer"
			+ "\n	vHermoset"
			+ "\n	vThermoPlastic"
			+ "\n	vNylon"
			+ "\n	vPVC"
			+ "\n	vPolyester"
			+ "\n	vMaterial: B;"
			+ "\n	equations"
			+ "\n	vGlassCeramics.name = GlassCeramics,"
			+ "\n	vGlass.name = Glass,"
			+ "\n	vCrystalline.name = Crystalline,"
			+ "\n	vNonCrystalline.name = NonCrystalline,"
			+ "\n	vCeramic.name = Ceramic,"
			+ "\n	vComposite.name = Composite,"
			+ "\n	vMetal.name = Metal,"
			+ "\n	vFerrous.name = Ferrous,"
			+ "\n	vCastIron.name = CastIron,"
			+ "\n	vDieSteel.name = DieSteel, "
			+ "\n	vSteel.name = Steel,"
			+ "\n	vToolSteel.name = ToolSteel,"
			+ "\n	vStainlessSteel.name = StainlessSteel,"
			+ "\n	vNonFerrous.name = NonFerrous,"
			+ "\n	vSuperAlloy.name = SuperAlloy,"
			+ "\n	vStellite.name = Stellite,"
			+ "\n	vIconel.name = Iconel,"
			+ "\n	vHastelloy.name = Hastelloy,"
			+ "\n	vElastomer.name = Elastomer,"
			+ "\n	vPlastic.name = Plastic,"
			+ "\n	vPolymer.name = Polymer,"
			+ "\n	vHermoset.name = Hermoset,"
			+ "\n	vThermoPlastic.name = ThermoPlastic,"
			+ "\n	vNylon.name = Nylon,"
			+ "\n	vPVC.name = PVC,"
			+ "\n	vPolyester.name = Polyester,"
			+ "\n	vMaterial.name = Material,"
			+ "\n	vGlassCeramics.f = vNonCrystalline, "
			+ "\n	vGlass.f = vNonCrystalline, "
			+ "\n	vCrystalline.f = vCeramic, "
			+ "\n	vNonCrystalline.f = vCeramic, "
			+ "\n	vCeramic.f = vMaterial, "
			+ "\n	vComposite.f = vMaterial, "
			+ "\n	vMetal.f = vMaterial, "
			+ "\n	vFerrous.f = vMetal, "
			+ "\n	vNonFerrous.f = vMetal, "
			+ "\n	vSuperAlloy.f = vMetal, "
			+ "\n	vCastIron.f = vFerrous, "
			+ "\n	vDieSteel.f = vFerrous,"
			+ "\n	vSteel.f = vFerrous, "
			+ "\n	vToolSteel.f = vFerrous,"
			+ "\n	vStainlessSteel.f = vSteel,"
			+ "\n	vNonFerrous.f = vMetal, "
			+ "\n	vSuperAlloy.f = vMetal,"
			+ "\n	vStellite.f = vSuperAlloy, "
			+ "\n	vIconel.f = vSuperAlloy, "
			+ "\n	vHastelloy.f = vSuperAlloy,"
			+ "\n	vElastomer.f = vPolymer, "
			+ "\n	vPlastic.f = vPolymer, "
			+ "\n	vPolymer.f = vMaterial,"
			+ "\n	vHermoset.f = vPlastic, "
			+ "\n	vThermoPlastic.f = vPlastic,"
			+ "\n	vNylon.f = vThermoPlastic, "
			+ "\n	vPVC.f = vThermoPlastic, "
			+ "\n	vPolyester.f = vThermoPlastic,"
			+ "\n	vMaterial.f = vMaterial;"
			+ "\n} : isa_preschema"
			+ "\n"
			+ "\nisa_schema = schema {"
			+ "\n	nodes A, B;"
			+ "\n	edges l : A -> B, r : A -> B, name : B -> adom;"
			+ "\n	equations;"
			+ "\n}"
			+ "\n"
			+ "\n//////////////////////////////////////////////////////"
			+ "\n"
			+ "\nisa = INSTANCE {"
			+ "\n	variables v1 v2 v3 v4 v5 v6 v7 v8 v11 v12 v13 v14 v15 v16 v17 v18 v19 v20 v21 v22 v23 v24 v25 v26 v27 v28 v29 : A,"
			+ "\n	vGlassCeramics"
			+ "\n	vGlass"
			+ "\n	vCrystalline"
			+ "\n	vNonCrystalline"
			+ "\n	vCeramic"
			+ "\n	vComposite"
			+ "\n	vMetal"
			+ "\n	vFerrous"
			+ "\n	vCastIron"
			+ "\n	vDieSteel"
			+ "\n	vSteel"
			+ "\n	vToolSteel"
			+ "\n	vStainlessSteel"
			+ "\n	vNonFerrous"
			+ "\n	vSuperAlloy"
			+ "\n	vStellite "
			+ "\n	vIconel"
			+ "\n	vHastelloy"
			+ "\n	vElastomer"
			+ "\n	vPlastic"
			+ "\n	vPolymer"
			+ "\n	vHermoset"
			+ "\n	vThermoPlastic"
			+ "\n	vNylon"
			+ "\n	vPVC"
			+ "\n	vPolyester"
			+ "\n	vMaterial: B;"
			+ "\n	equations"
			+ "\n	vGlassCeramics.name = GlassCeramics,"
			+ "\n	vGlass.name = Glass,"
			+ "\n	vCrystalline.name = Crystalline,"
			+ "\n	vNonCrystalline.name = NonCrystalline,"
			+ "\n	vCeramic.name = Ceramic,"
			+ "\n	vComposite.name = Composite,"
			+ "\n	vMetal.name = Metal,"
			+ "\n	vFerrous.name = Ferrous,"
			+ "\n	vCastIron.name = CastIron,"
			+ "\n	vDieSteel.name = DieSteel, "
			+ "\n	vSteel.name = Steel,"
			+ "\n	vToolSteel.name = ToolSteel,"
			+ "\n	vStainlessSteel.name = StainlessSteel,"
			+ "\n	vNonFerrous.name = NonFerrous,"
			+ "\n	vSuperAlloy.name = SuperAlloy,"
			+ "\n	vStellite.name = Stellite,"
			+ "\n	vIconel.name = Iconel,"
			+ "\n	vHastelloy.name = Hastelloy,"
			+ "\n	vElastomer.name = Elastomer,"
			+ "\n	vPlastic.name = Plastic,"
			+ "\n	vPolymer.name = Polymer,"
			+ "\n	vHermoset.name = Hermoset,"
			+ "\n	vThermoPlastic.name = ThermoPlastic,"
			+ "\n	vNylon.name = Nylon,"
			+ "\n	vPVC.name = PVC,"
			+ "\n	vPolyester.name = Polyester,"
			+ "\n	vMaterial.name = Material,"
			+ "\n	v1.l = vGlassCeramics, v1.r = vNonCrystalline, "
			+ "\n	v2.l = vGlass, v2.r = vNonCrystalline, "
			+ "\n	v3.l = vCrystalline, v3.r = vCeramic, "
			+ "\n	v4.l = vNonCrystalline, v4.r = vCeramic, "
			+ "\n	v5.l = vCeramic, v5.r = vMaterial, "
			+ "\n	v6.l = vComposite, v6.r = vMaterial, "
			+ "\n	v7.l = vMetal, v7.r = vMaterial, "
			+ "\n	v8.l = vFerrous, v8.r = vMetal, "
			+ "\n	v11.l= vCastIron, v11.r = vFerrous, "
			+ "\n	v12.l= vDieSteel, v12.r = vFerrous,"
			+ "\n	v13.l= vSteel, v13.r = vFerrous, "
			+ "\n	v14.l= vToolSteel, v14.r = vFerrous,"
			+ "\n	v15.l= vStainlessSteel, v15.r = vSteel,"
			+ "\n	v16.l= vNonFerrous, v16.r = vMetal, "
			+ "\n	v17.l= vSuperAlloy, v17.r = vMetal,"
			+ "\n	v18.l= vStellite, v18.r = vSuperAlloy, "
			+ "\n	v19.l= vIconel, v19.r = vSuperAlloy, "
			+ "\n	v20.l= vHastelloy, v20.r = vSuperAlloy,"
			+ "\n	v21.l= vElastomer, v21.r = vPolymer, "
			+ "\n	v22.l= vPlastic, v22.r = vPolymer, "
			+ "\n	v23.l= vPolymer, v23.r = vMaterial,"
			+ "\n	v24.l= vHermoset, v24.r = vPlastic, "
			+ "\n	v25.l= vThermoPlastic, v25.r = vPlastic,"
			+ "\n	v26.l= vNylon, v26.r = vThermoPlastic, "
			+ "\n	v27.l= vPVC, v27.r = vThermoPlastic, "
			+ "\n	v28.l= vPolyester, v28.r = vThermoPlastic,"
			+ "\n	v29.l= vMaterial, v29.r = vMaterial;"
			+ "\n} : isa_schema"
			+ "\n"
			+ "\n//////////"
			+ "\n"
			+ "\nisa_schema_small = schema {"
			+ "\n	nodes A;"
			+ "\n	edges l : A -> adom, r : A -> adom;"
			+ "\n	equations;"
			+ "\n}"
			+ "\n"
			+ "\nM = mapping {"
			+ "\n	nodes A -> A;"
			+ "\n	edges l -> l.name, r -> r.name;"
			+ "\n} : isa_schema_small -> isa_schema "
			+ "\n"
			+ "\nisa_small = delta M isa"
			+ "\n"
			+ "\n//////////"
			+ "\n"
			+ "\nL0 = mapping {"
			+ "\n	nodes A -> B, B -> B;"
			+ "\n	edges l -> B, r -> B, name -> name;"
			+ "\n} : isa_schema -> isa_preschema"
			+ "\n"
			+ "\n"
			+ "\nL1 = mapping {"
			+ "\n	nodes A -> B, B -> B;"
			+ "\n	edges l -> B, r -> f, name -> name;"
			+ "\n} : isa_schema -> isa_preschema"
			+ "\n"
			+ "\nL2 = mapping {"
			+ "\n	nodes A -> B, B -> B;"
			+ "\n	edges l -> B, r -> f.f, name -> name;"
			+ "\n} : isa_schema -> isa_preschema"
			+ "\n"
			+ "\nL3 = mapping {"
			+ "\n	nodes A -> B, B -> B;"
			+ "\n	edges l -> B, r -> f.f.f, name -> name;"
			+ "\n} : isa_schema -> isa_preschema"
			+ "\n"
			+ "\nisa_rt0 = delta L0 isa_pre"
			+ "\nisa_rt1 = delta L1 isa_pre "
			+ "\nisa_rt2 = delta L2 isa_pre"
			+ "\nisa_rt3 = delta L3 isa_pre"
			+ "\n"
			+ "\nisa_rt = relationalize (isa_rt0 + (isa_rt1 + (isa_rt2 + isa_rt3)))"
			+ "\n"
			+ "\n///////////"
			+ "\n"
			+ "\nisa_rt_small = delta M isa_rt"
			+ "\n"
			+ "\n//////////"
			+ "\n"
			+ "\n"
			+ "\nsyn_schema = schema {"
			+ "\n	nodes A2, B2;"
			+ "\n	edges l2 : A2 -> B2, r2 : A2 -> B2, name2 : B2 -> adom;"
			+ "\n	equations;"
			+ "\n}"
			+ "\n"
			+ "\ncombined = schema {"
			+ "\n	nodes A, B, A2, B2;"
			+ "\n	edges l:A -> B, r: A-> B, name:B -> adom, l2 : A2 -> B2, r2 : A2 -> B2, name2 : B2 -> adom;"
			+ "\n	equations;"
			+ "\n}"
			+ "\n"
			+ "\ninc1 = polynomial {"
			+ "\n	q1 = { for v:A; where; attributes; edges l={v=v.l}:q2, r={v=v.r}:q2; } : A,"
			+ "\n	q2 = { for v:B; where; attributes name=v.name; edges; } : B"
			+ "\n} : isa_schema -> combined"
			+ "\n"
			+ "\ninc2 = polynomial {"
			+ "\n	q1 = { for v:A2; where; attributes; edges l2={v=v.l2}:q2, r2={v=v.r2}:q2; } : A2,"
			+ "\n	q2 = { for v:B2; where; attributes name2=v.name2; edges; } : B2"
			+ "\n} : syn_schema -> combined"
			+ "\n"
			+ "\nsyn_inst = INSTANCE {"
			+ "\n	variables v5 v7 v19 v1 v31 v32 v33 v34 v35 v36:A2,"
			+ "\n               vStainlessSteel vToolSteel vPlastic vAlloySteel "
			+ "\n               vStainlessSteel2 vToolSteel2 vPlastics "
			+ "\n               v4140 v300 v302 v304 v316 v154 v174: B2;	"
			+ "\n	equations"
			+ "\n	          v5.l2 = vStainlessSteel, v5.r2 = vStainlessSteel2,"
			+ "\n	          v7.l2 = vToolSteel, v7.r2 = vToolSteel2,"
			+ "\n	          v19.l2= vPlastic, v19.r2 = vPlastics,"
			+ "\n	          v1.l2= vAlloySteel, v1.r2 = v4140,"
			+ "\n	          v31.l2= vStainlessSteel, v31.r2= v300,"
			+ "\n	          v32.l2= vStainlessSteel, v32.r2= v302,"
			+ "\n	          v33.l2= vStainlessSteel, v33.r2= v304,"
			+ "\n	          v34.l2= vStainlessSteel, v34.r2= v316,"
			+ "\n	          v35.l2= vStainlessSteel, v35.r2= v154,"
			+ "\n	          v36.l2= vStainlessSteel, v36.r2= v174,	          "
			+ "\n	          vStainlessSteel.name2 = StainlessSteel,"
			+ "\n	          vToolSteel.name2 = ToolSteel,"
			+ "\n	          vPlastic.name2 = Plastic,"
			+ "\n	          vAlloySteel.name2 = SuperAlloy,"
			+ "\n               vStainlessSteel2.name2 = \"Stainless Steel\","
			+ "\n               vToolSteel2.name2 = \"Tool Steel\","
			+ "\n               vPlastics.name2 = Plastics,"
			+ "\n               v4140.name2 = \"4140 Alloy Steels\","
			+ "\n               v300.name2 = \"300 Stainless Steel\","
			+ "\n               v302.name2 = \"Stainless Steel 302\","
			+ "\n               v304.name2 = \"304 Stainless Steel\","
			+ "\n               v316.name2 = \"316 Stainless Steel\","
			+ "\n               v154.name2 = \"15-4 Stainless Steel\","
			+ "\n               v174.name2 =\"17-4 Stainless Steel\"; "
			+ "\n}: syn_schema"
			+ "\n"
			+ "\n/*(5, \"Stainless Steel\") and StainlessSteel"
			+ "\n  (7, \"Tool Steel\") and ToolSteel"
			+ "\n  (19, \"Plastics\") and Plastic"
			+ "\n  (20, \"Ferrous\") and Ferrous"
			+ "\n  (1, \"4140 Alloy Steels\") and AlloySteel"
			+ "\n"
			+ "\n  (31, \"300 Stainless Steel\"), "
			+ "\n  (32, \"Stainless Steel 302\"), "
			+ "\n  (33, \"304 Stainless Steel\"), "
			+ "\n  (34, \"316 Stainless Steel\"), "
			+ "\n  (35, \"15-4 Stainless Steel\"), "
			+ "\n  (36, \"17-4 Stainless Steel\") and Stainless Steel"
			+ "\n */"
			+ "\n"
			+ "\ninst1 = apply inc1 isa_rt"
			+ "\ninst2 = apply inc2 syn_inst"
			+ "\nxxx = (inst1 + inst2)"
			+ "\n"
			+ "\n//combined = schema {"
			+ "\n//	nodes A, B, A2, B2;"
			+ "\n//	edges l:A -> B, r: A-> B, name:B -> adom, l2 : A2 -> B2, r2 : A2 -> B2, name2 : B2 -> adom;"
			+ "\n//	equations;"
			+ "\n//}"
			+ "\n/*SELECT s1.d as col1, s2.d as col2"
			+ "\nFROM R as r, S as s1, S as S2"
			+ "\nWHERE r.a = s1.c AND r.b = s2.c*/"
			+ "\n//l, r, name"
			+ "\nfq = polynomial {"
			+ "\n q1 = {for a:A, x:A2, y:A2; "
			+ "\n       where a.l.name=x.l2.name2, a.r.name=y.l2.name2;"
			+ "\n       attributes;"
			+ "\n       edges l = {x=x.r2} : q3,"
			+ "\n             r = {x=y.r2} : q3;"
			+ "\n       } : A,"
			+ "\n //q2 = {for x:B ; where; attributes name=x.name ; edges; } : B,"
			+ "\n q3 = {for x:B2; where; attributes name=x.name2; edges; } : B"
			+ "\n} : combined -> isa_schema"
			+ "\n"
			+ "\nfgx = apply fq xxx"
			+ "\n"
			+ "\nfgx_small = relationalize delta M fgx"
			+ "\n";



}
