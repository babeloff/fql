[@0,0:6='options',<'options'>,1:0]
[@1,7:8='\n\t',<WS>,channel=2,1:7]
[@2,9:29='prepend_entity_on_ids',<'prepend_entity_on_ids'>,2:1]
[@3,30:30=' ',<WS>,channel=2,2:22]
[@4,31:31='=',<EQUAL>,2:23]
[@5,32:32=' ',<WS>,channel=2,2:24]
[@6,33:37='false',<'false'>,2:25]
[@7,38:39='\n\n',<WS>,channel=2,2:30]
[@8,40:49='html { (* ',<HTML>,4:0]
[@9,50:434='"\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> \n <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\">\n <head>\n <link rel=\"stylesheet\" type=\"text/css\" href=\"https://categoricaldata.net/css/simple.css\" />\n <script src=\"https://categoricaldata.net/js/simple.js\"></script>\n </head>\n <body>\n"',<HTML_MULTI_STRING>,4:10]
[@10,435:439=' *) }',<HTML_END>,12:1]
[@11,440:441='\n\n',<WS>,channel=2,12:6]
[@12,442:449='md { (* ',<MARKDOWN>,14:0]
[@13,450:506='"\n\n# AQL Tutorial\n**Tasks <-> Skills <-> People**\n\n---\n\n"',<MD_MULTI_STRING>,14:8]
[@14,507:511=' *) }',<MD_END>,21:1]
[@15,512:513='\n\n',<WS>,channel=2,21:6]
[@16,514:521='md { (* ',<MARKDOWN>,23:0]
[@17,522:863='"\n## PREFACE - AQL and SQL\n\nThis AQL file interacts with a MySQL database running on <a href=\"http://catinf.com\">catinf.com</a>.  To run the tutorial, it\nis necessary to <a href=\"https://dev.mysql.com/downloads/connector/j/5.1.html\">download the\nMySQL JDBC driver</a> and place it on the java classpath as described in the AQL manual. \n\t"',<MD_MULTI_STRING>,23:8]
[@18,864:868=' *) }',<MD_END>,29:2]
[@19,869:871='\n\n\n',<WS>,channel=2,29:7]
[@20,872:879='md { (* ',<MARKDOWN>,32:0]
[@21,880:6121='"\n## INTRODUCTION\n\nThis file contains a sequence of models intended to illustrate the use of Algebraic Query\nLanguage (AQL) to formalize database concepts in a mathematically verifiable way. Each AQL file \nin this sequence will build on previous ideas, introducing AQL features in the context of\nconceptual models relating skills to tasks and people.\n\nThe following is a brief outline of the sequence of models and what the reader should take away\t\nfrom reviewing each model in the sequence.\n\nThis file introduces a series of AQL constructions and compares those constructions with\nanalogous relational constructions where appropriate. We begin with a set of independent schemas\nand produce a single schema that is an integrated assembly of the three source schemas. The\nfollowing is a table of contents describing the structure of the sequence of AQL constructions\nand concepts developed in this file. The reader should not expect to understand this list at this\npoint. Several passes through the tutorial may be required to fully grasp all that is presented. \nThis file is an executable which when run will generate an execution graphical user interface \nwhere the results can be viewed. Similarly this file will be published to a series of web pages\nwhere the results of each construction will be displayed.\n\n  1. typeside -- User defined kind for customization of data types.\n  2. schema -- Extends the type side to define objects of kind schema.\n  3. category -- Polymorphic abstraction that unifies many AQL concepts and constructions.\n  4. schema as category -- Schemas interpreted through the abstract lens of categories.\n  5. instance -- Extends the schema kind. Instance kinds can be thought of as the data that \n     \"fills\" the schema.\n  6. instance as category -- Instances interpreted through the abstract lens of categories.\n  7. transform -- map from one instance to another of the same schema.\n  8. the category of instances of a schema -- Instance kinds all typed by the same schema\n     related by transforms as arrows.\n  9. instance coproduct -- Universal construction that \"adds\" multiple instances associated \n     with a schema. \n 10. instance coequalizer -- Universal construction that uses a linking instance and a pair\n     of transforms to merge records records within an instance.\n 11. schema mappings, queries and the category of schemas -- Schema mappings define the\n     arrows in the category of schemas. Queries generalize schema mappings and provide \n     functionality similar to SQL queries.\n 12. schema colimits -- A kind that unifies coproducts and coequalizers but in the context of\n     the category of schemas rather than the category of instances of a schema. Generally\n     formalizes a diagram of schemas connected by mappings that can be used to assemble\n     source schemas into a single target schema.\n 13. jdbc pragmas, imports and exports -- Integration of AQL with external data sources and \n     targets. Pragmas are a kind that allows commands to be submitted to a JDBC driver to be \n     executed against an external repository. Imports and exports are features that provide a \n     mechanism for translating between traditional data repositories and AQL semantics.\n 14. Migrating data between schemas -- This is the problem of Extracting - Transforming -\n     Loading or ETL. This is where we tackle problems that involve moving data between \n     schemas and the larger problem of bringing multiple source schemas together and \n     integrating them.\n 15. sigma --| delta --| pi -- The machinery AQL uses to move data around the enterprise. \n     These mappings are the building blocks of the eval construction that moves data through \n     AQL queries.\n\nAs we proceed we will draw analogies to relational constructions that may be more familiar to\npracticing database engineers. We open with a brief review of the essential features of\nrelational algebra as they are related to AQL features.\n\nThe structural element that forms the foundation of relational algebra is the relvar. A relvar is\na mathematical definition that roughly corresponds to the structure of a single table. Commercial\nimplementations of relvars are table definitions based on a set of fixed types provided by the \nrelational database management system (RDBMS) that define the domain over which each column of \nthe table is allowed to vary. Having defined one or more table structures, constraints can be\nadded to further restrict the values over which a particular column may vary. \n\nIn contrast, AQL provides a declarative structure that allows the user to define an algebraic\ndefinition of the type side. In its current implementation AQL defines this algebra by wrapping\na selection of Java types and functions. In this sequence of files we will restrict the type side\nto a string type compatible with a MySQL Varchar. This will allow us to label records in a way\nthat will provide human readable output associated with the sequence of models we produce. This \nwill also allow us to integrate with an external RDBMS by exporting and importing various AQL \nconstructions.\n\nAQL models always begin with a type side declaration. The type side defines a foundation that can \nthen be extended to define schemas.\n"',<MD_MULTI_STRING>,32:8]
[@22,6122:6126=' *) }',<MD_END>,107:1]
[@23,6127:6128='\n\n',<WS>,channel=2,107:6]
[@24,6129:6136='md { (* ',<MARKDOWN>,109:0]
[@25,6137:6969='"\n---\n\n## Type Sides\n\nType sides are an AQL construction that extends the built in types typically found in RDBMSs and\nprovides the possibility of introducing programming language features that can be used to enhance \nthe power of a database. These features are roughly analogous to stored functions that can be \ninvoked inline within an SQL statement. To illustrate how this capability works we will create a \ntype side that exposes a string type which we label Varchar in anticipation of later integration \nwith an external RDBMS. To this we add the Java string matches method to illustrate how Java \nfunctions can be exposed to the AQL framework. For more details we refer the reader to the \nexamples available by selecting the dropdown in the upper right hand corner of the application. \nSpecifically, the AQL Tutorial example.\n"',<MD_MULTI_STRING>,109:8]
[@26,6970:6974=' *) }',<MD_END>,123:1]
[@27,6975:6976='\n\n',<WS>,channel=2,123:6]
[@28,6977:6984='typeside',<'typeside'>,125:0]
[@29,6985:6985=' ',<WS>,channel=2,125:8]
[@30,6986:6993='TypeSide',<UPPER_ID>,125:9]
[@31,6994:6994=' ',<WS>,channel=2,125:17]
[@32,6995:6995='=',<EQUAL>,125:18]
[@33,6996:6996=' ',<WS>,channel=2,125:19]
[@34,6997:7003='literal',<'literal'>,125:20]
[@35,7004:7004=' ',<WS>,channel=2,125:27]
[@36,7005:7005='{',<LBRACE>,125:28]
[@37,7006:7010='\n    ',<WS>,channel=2,125:29]
[@38,7011:7020='java_types',<'java_types'>,126:4]
[@39,7021:7029='\n        ',<WS>,channel=2,126:14]
[@40,7030:7036='Varchar',<UPPER_ID>,127:8]
[@41,7037:7037=' ',<WS>,channel=2,127:15]
[@42,7038:7038='=',<EQUAL>,127:16]
[@43,7039:7039=' ',<WS>,channel=2,127:17]
[@44,7040:7057='"java.lang.String"',<STRING>,127:18]
[@45,7058:7066='\n        ',<WS>,channel=2,127:36]
[@46,7067:7070='Bool',<UPPER_ID>,128:8]
[@47,7071:7071=' ',<WS>,channel=2,128:12]
[@48,7072:7072='=',<EQUAL>,128:13]
[@49,7073:7073=' ',<WS>,channel=2,128:14]
[@50,7074:7092='"java.lang.Boolean"',<STRING>,128:15]
[@51,7093:7097='\n    ',<WS>,channel=2,128:34]
[@52,7098:7111='java_constants',<'java_constants'>,129:4]
[@53,7112:7120='\n        ',<WS>,channel=2,129:18]
[@54,7121:7127='Varchar',<UPPER_ID>,130:8]
[@55,7128:7128=' ',<WS>,channel=2,130:15]
[@56,7129:7129='=',<EQUAL>,130:16]
[@57,7130:7130=' ',<WS>,channel=2,130:17]
[@58,7131:7147='"return input[0]"',<STRING>,130:18]
[@59,7148:7156='\n        ',<WS>,channel=2,130:35]
[@60,7157:7160='Bool',<UPPER_ID>,131:8]
[@61,7161:7161=' ',<WS>,channel=2,131:12]
[@62,7162:7162='=',<EQUAL>,131:13]
[@63,7163:7163=' ',<WS>,channel=2,131:14]
[@64,7164:7212='"return java.lang.Boolean.parseBoolean(input[0])"',<STRING>,131:15]
[@65,7213:7217='\n    ',<WS>,channel=2,131:64]
[@66,7218:7231='java_functions',<'java_functions'>,132:4]
[@67,7232:7240='\n        ',<WS>,channel=2,132:18]
[@68,7241:7247='Matches',<UPPER_ID>,133:8]
[@69,7248:7248=' ',<WS>,channel=2,133:15]
[@70,7249:7249=':',<COLON>,133:16]
[@71,7250:7250=' ',<WS>,channel=2,133:17]
[@72,7251:7257='Varchar',<UPPER_ID>,133:18]
[@73,7258:7258=',',<COMMA>,133:25]
[@74,7259:7259=' ',<WS>,channel=2,133:26]
[@75,7260:7266='Varchar',<UPPER_ID>,133:27]
[@76,7267:7267=' ',<WS>,channel=2,133:34]
[@77,7268:7269='->',<RARROW>,133:35]
[@78,7270:7270=' ',<WS>,channel=2,133:37]
[@79,7271:7274='Bool',<UPPER_ID>,133:38]
[@80,7275:7275=' ',<WS>,channel=2,133:42]
[@81,7276:7276='=',<EQUAL>,133:43]
[@82,7277:7277=' ',<WS>,channel=2,133:44]
[@83,7278:7312='"return input[0].matches(input[1])"',<STRING>,133:45]
[@84,7313:7313='\n',<WS>,channel=2,133:80]
[@85,7314:7314='}',<RBRACE>,134:0]
[@86,7315:7317='\n\n\n',<WS>,channel=2,134:1]
[@87,7318:7325='md { (* ',<MARKDOWN>,137:0]
[@88,7326:8926='"\n---\n\n## SCHEMAS\n\nAs mentioned above the schema is declared as an extension of the type side. Notice that in\ncontrast with relational algebra there is no notion of an entity or relvar in isolation. The\nclosest analog to a relvar in AQL is a schema with a single entity. With that in mind we proceed\nby creating a pair of schemas, each with a single entity, followed by the schema with a pair of\nentities connected by a foreign key.\n\nThe first schema we create is minimal in that it contains a single entity Task with a single\nattribute that allows us to label a task. AQL contains a variety of constructions that build on \non previously defined constructions. Following the programming language literature we will refer \nto such constructions as kinds. In AQL a kind is either a typeside, schema, instance, (schema) \nmapping, (instance) transform, query, graph, pragma, schema\_colimit, or constraints.\n\nBy convention we prefix the schema name with the letter \"s\" to remind the reader when that name \nis encountered in the construction of a dependent kind that the object is of kind schema. \n\nBy clicking on the run button AQL will construct a runtime viewing window that has a list of each\nof the constructions created in this model in a pane on the left hand side of the window. A view\nof each construction is available by clicking on the construction of interest in the left hand\npane.\n\nSimilarly this editor has a pane on the right hand side containing an outline of the\nconstructions contained in this file. One can navigate to a construction by clicking on that\nconstruction in the outline.\n"',<MD_MULTI_STRING>,137:8]
[@89,8927:8931=' *) }',<MD_END>,165:1]
[@90,8932:8933='\n\n',<WS>,channel=2,165:6]
[@91,8934:8939='schema',<'schema'>,167:0]
[@92,8940:8940=' ',<WS>,channel=2,167:6]
[@93,8941:8942='sT',<LOWER_ID>,167:7]
[@94,8943:8943=' ',<WS>,channel=2,167:9]
[@95,8944:8944='=',<EQUAL>,167:10]
[@96,8945:8945=' ',<WS>,channel=2,167:11]
[@97,8946:8952='literal',<'literal'>,167:12]
[@98,8953:8953=' ',<WS>,channel=2,167:19]
[@99,8954:8954=':',<COLON>,167:20]
[@100,8955:8955=' ',<WS>,channel=2,167:21]
[@101,8956:8963='TypeSide',<UPPER_ID>,167:22]
[@102,8964:8964=' ',<WS>,channel=2,167:30]
[@103,8965:8965='{',<LBRACE>,167:31]
[@104,8966:8970='\n    ',<WS>,channel=2,167:32]
[@105,8971:8978='entities',<'entities'>,168:4]
[@106,8979:8987='\n        ',<WS>,channel=2,168:12]
[@107,8988:8991='Task',<UPPER_ID>,169:8]
[@108,8992:8996='\n    ',<WS>,channel=2,169:12]
[@109,8997:9006='attributes',<'attributes'>,170:4]
[@110,9007:9015='\n        ',<WS>,channel=2,170:14]
[@111,9016:9020='TName',<UPPER_ID>,171:8]
[@112,9021:9021=' ',<WS>,channel=2,171:13]
[@113,9022:9022=':',<COLON>,171:14]
[@114,9023:9023=' ',<WS>,channel=2,171:15]
[@115,9024:9027='Task',<UPPER_ID>,171:16]
[@116,9028:9028=' ',<WS>,channel=2,171:20]
[@117,9029:9030='->',<RARROW>,171:21]
[@118,9031:9031=' ',<WS>,channel=2,171:23]
[@119,9032:9038='Varchar',<UPPER_ID>,171:24]
[@120,9039:9039='\n',<WS>,channel=2,171:31]
[@121,9040:9040='}',<RBRACE>,172:0]
[@122,9041:9042='\n\n',<WS>,channel=2,172:1]
[@123,9043:9050='md { (* ',<MARKDOWN>,174:0]
[@124,9051:9196='"\nNow we create a slightly more interesting schema. This schema still consists of only one entity,\nbut that entity now has a pair of attributes.\n"',<MD_MULTI_STRING>,174:8]
[@125,9197:9201=' *) }',<MD_END>,177:1]
[@126,9202:9203='\n\n',<WS>,channel=2,177:6]
[@127,9204:9209='schema',<'schema'>,179:0]
[@128,9210:9210=' ',<WS>,channel=2,179:6]
[@129,9211:9214='sSnT',<LOWER_ID>,179:7]
[@130,9215:9215=' ',<WS>,channel=2,179:11]
[@131,9216:9216='=',<EQUAL>,179:12]
[@132,9217:9217=' ',<WS>,channel=2,179:13]
[@133,9218:9224='literal',<'literal'>,179:14]
[@134,9225:9225=' ',<WS>,channel=2,179:21]
[@135,9226:9226=':',<COLON>,179:22]
[@136,9227:9227=' ',<WS>,channel=2,179:23]
[@137,9228:9235='TypeSide',<UPPER_ID>,179:24]
[@138,9236:9236=' ',<WS>,channel=2,179:32]
[@139,9237:9237='{',<LBRACE>,179:33]
[@140,9238:9242='\n    ',<WS>,channel=2,179:34]
[@141,9243:9250='entities',<'entities'>,180:4]
[@142,9251:9257='\n      ',<WS>,channel=2,180:12]
[@143,9258:9275='SkillNeededForTask',<UPPER_ID>,181:6]
[@144,9276:9280='\n    ',<WS>,channel=2,181:24]
[@145,9281:9290='attributes',<'attributes'>,182:4]
[@146,9291:9297='\n      ',<WS>,channel=2,182:14]
[@147,9298:9302='skill',<LOWER_ID>,183:6]
[@148,9303:9303=' ',<WS>,channel=2,183:11]
[@149,9304:9304=':',<COLON>,183:12]
[@150,9305:9305=' ',<WS>,channel=2,183:13]
[@151,9306:9323='SkillNeededForTask',<UPPER_ID>,183:14]
[@152,9324:9324=' ',<WS>,channel=2,183:32]
[@153,9325:9326='->',<RARROW>,183:33]
[@154,9327:9327=' ',<WS>,channel=2,183:35]
[@155,9328:9334='Varchar',<UPPER_ID>,183:36]
[@156,9335:9341='\n      ',<WS>,channel=2,183:43]
[@157,9342:9345='task',<LOWER_ID>,184:6]
[@158,9346:9346=' ',<WS>,channel=2,184:10]
[@159,9347:9347=':',<COLON>,184:11]
[@160,9348:9348=' ',<WS>,channel=2,184:12]
[@161,9349:9366='SkillNeededForTask',<UPPER_ID>,184:13]
[@162,9367:9367=' ',<WS>,channel=2,184:31]
[@163,9368:9369='->',<RARROW>,184:32]
[@164,9370:9370=' ',<WS>,channel=2,184:34]
[@165,9371:9377='Varchar',<UPPER_ID>,184:35]
[@166,9378:9378='\n',<WS>,channel=2,184:42]
[@167,9379:9379='}',<RBRACE>,185:0]
[@168,9380:9382='\n\n\n',<WS>,channel=2,185:1]
[@169,9383:9390='md { (* ',<MARKDOWN>,188:0]
[@170,9391:15315='"\n---\n\n## CATEGORIES INTRODUCED\n**Schemas as Categories**\n\nThe third schema we introduce has two entities, `Skill` and `SkillClass` that define a simple two\nlevel taxonomy for skills. This brings into play additional sections as part of the declarative\nstructure of a schema. First the `foreign_keys` section. In AQL, schemas as first class objects come\nequipped with all of the machinery for defining a schema as a kind. This includes declaration of\ndependencies between entities. These dependencies are given the name foreign key so as to be\nconsistent with relational nomenclature.\n\nFinally we have a third section that has no analog in SQL systems, the observation_equations section.\nTo understand this section we must take time for a brief digression to introduce the abstract \nnotion of a category. \n\nAQL is motivated by a branch of mathematics known as category theory. The reader who is interested \nin a systematic development of category theory should refer to any one of a number of excellent\nintroductions. Here are several such references:\n\n  * _Category Theory_ by Steve Awodey\n  * _Category Theory for Computing Science_ by Michael Barr and Charles Wells\n  * _Category Theory for the Sciences_ By David Spivak\n  * _Conceptual Mathematics: A first introduction to categories_ by F. William Lawvere and Stephen\n    H. Schanuel.\n\nWe begin with an intuitive description of categories and identify specific concrete examples as \nthey relate to AQL. This is followed by a formal description of a category.\n\nA category consists of a set of objects connected by arrows. As such, a category is related to a\ndirected graph where the objects are nodes and arrows are edges with direction indicated by their\nassociated arrow. In addition to the properties of a directed graph each object of a category is\nrequired to have a distinguished arrow that identifies that object and whose source and target are\nequal to the object it identifies.\n\nLet's consider the three schemas we have so far constructed, but with an empty type side (i.e. no\nattributes). Each such schema could be viewed as an abstract category where the set of objects is\nthe set of entities and its arrows are foreign keys. Hence schemas are the first example of an AQL \nconstruction that can be interpreted as a category.\n\nWith this in mind `sT` and `sSnT` are both one object categories. By virtue of the fact that the set \nof identity arrows and the set of objects are essentially the same set (technically isomorphic\nto each other) we can unambiguously refer to each identity arrow using the same label as its\ncorresponding entity. Similarly `sS` (again neglecting attributes) is a two object category with\none non-identity arrow, the foreign key `fk_HasClass`. This category is sometimes called the \"arrow\ncategory\". In future examples we will see that more generally schemas with empty type sides are\nnot strictly speaking categories, but rather presentations of categories. This means they have\nall the information necessary to generate a category through a process known as saturation.\n\nAbstract categories are by design devoid of attachments to any specific context. In order to\nleverage the context free nature of category theory we need a mechanism by which we can anchor\na category into a computational environment. Functional programming languages such as Haskell\nprovide one strategy for doing this. AQL provides another strategy that is motivated by the\ncapabilities of modern database management systems, so AQL extends the basic notion of an\nabstract category with a type side. We will rely on the above intuitive motivation and will not\nformally develop this idea here. The interested reader is referred to the research paper upon \nwhich the AQL implementation is based:\n\n[https://arxiv.org/abs/1602.03501](https://arxiv.org/abs/1602.03501)\n\nThere is an additional feature of categories that is critical to this discussion and that lies\nat the heart of the expressive power of category theory. This the notion of a path. A category\nby definition contains all paths that can be generated by composing arrows head to tail. This\nprocess of generating all paths implied by arrow composition is the aforementioned saturation.\n\nThe order in which one chooses to compose arrows has no effect on the result so AQL provides a\nconvenient syntax for indicating a path using the dot notation (elaborated below). Having added\nadditional arrows for each path we now have the ability to declare two paths that begin and end \non the same object to be equal and so the declarative structure of a category includes equations.\n\nPath equations can be used to complete an intuitive explanation of the properties of identity \narrows. Any path that includes an identity arrow is equal to the path obtained when that identity \narrow is omitted. Considering arrow composition as analogous to addition we can think of identity\narrows as analogous to zero, but rather than having one zero we have one for each object in the\ncategory. Category theorists make this analogy by saying that identity arrows are paths of length\nzero. To further strengthen this analogy it can be shown that the counting numbers under the\nbinary operation of addition define a one object category. Each arrow of the category is a\ncounting number. Zero is the identity arrow. Addition is arrow composition.\n\n\n**Category Definition**\n\nHere is a formal definition of a category following the presentation in Category Theory for \nComputing Sciences chapter 2.\n\nWe begin with a formal definition of a directed graph:\nA directed graph `C` is a pair of functions source: `C_1` -> `C_0` and target: `C_1` -> `C_0`. The elements\nof `C_0` we call nodes/objects and the elements of `C_1` we call edges/arrows. An arrow path of\nlength `n` in `C` is a sequence of arrows arranged head to tail as follows:\n\n         f_n    f_n-1    ...     f_2     f_1\n      . ----> . ----> .  ...  . ----> . ----> . \n\n"',<MD_MULTI_STRING>,188:8]
[@171,15316:15320=' *) }',<MD_END>,282:1]
[@172,15321:15322='\n\n',<WS>,channel=2,282:6]
[@173,15323:15499='/* Rendered using Javascript:\nhtml { (* "\n$$\n\\begin{CD}\n \\cdot     @>f_n>> \\cdot  @>f_{n-1}>> \\cdot @. \\ldots @. \\cdot @>f_2>> \\cdot @>f_1>> \\cdot\n\\end{CD}\n$$\n" *)\n}\n*/',<BLOCK_COMMENT>,channel=4,284:0]
[@174,15500:15501='\n\n',<WS>,channel=2,293:2]
[@175,15502:15509='md { (* ',<MARKDOWN>,295:0]
[@176,15510:17501='"\nFor any adjacent pair of arrows in such a path we must have `target(f_k)` = `source(f_k-1)`. Such\nadjacent pairs we call composable pairs. In such a graph one can define sets of paths of length `n`\nwhich we designate `C_n`.\n\nThe definition of a category extends the definition of a directed graph:\nA category is a graph `C` together with two functions `c: C_2` -> `C_1` and `u: C_0 -> C_1` with\nproperties `C-1` through `C-4` below. The function `c` we call composition, and if `(f, g)` is a\ncomposable pair, `c(f,g)` is written `f.g` and is called the composite of `f` followed by `g`. \nIf `A` is an object of `C`, `u(A)` is denoted `id_A` or just `A`, which is called the identity of\nthe object `A`.\n\n  * C-1 The source of `f.g` is the source of `f` and the target of `f.g` is the target of `g`.\n  * C-2 `(f.g).h = f.(g.h)` whenever either is defined.\n  * C-3 The source and target of `id_A` are both `A`.\n  * C-4 If `f: A -> B`, `id_A.f = f.id_B = f` (alternatively `A.f = f.B = f`).\n\nWe now introduce the fourth section in the schema declaration below, the `observation_equations` \nsection. The `observation_equations` section is an example of a path equation. Notice that \n`SCNameOnSkill` is an arrow from `Skill` to `Varchar`. As such it is a path of length one. Similarly\nthere is a path from `Skill` to `Varchar` that is a path of length two obtained by composing the \nforeign key arrow `fk_HasClass` with the attribute arrow `SCName`. The observation equation is a \ndeclaration that those two paths are equal.\n\nThe practical significance of this is far reaching, but in this case it provides us with a\nmechanism to denormalize our schema while guaranteeing that no inconsistencies will be allowed. \n\nMuch of the power of category theory comes from its polymorphic nature. Many different contexts\ncan be interpreted through the abstract lens of category theory. We will see in the coming\ndiscussion that many of the kinds supported by AQL can be interpreted using category theory.\n"',<MD_MULTI_STRING>,295:8]
[@177,17502:17506=' *) }',<MD_END>,325:1]
[@178,17507:17508='\n\n',<WS>,channel=2,325:6]
[@179,17509:17514='schema',<'schema'>,327:0]
[@180,17515:17515=' ',<WS>,channel=2,327:6]
[@181,17516:17517='sS',<LOWER_ID>,327:7]
[@182,17518:17518=' ',<WS>,channel=2,327:9]
[@183,17519:17519='=',<EQUAL>,327:10]
[@184,17520:17520=' ',<WS>,channel=2,327:11]
[@185,17521:17527='literal',<'literal'>,327:12]
[@186,17528:17528=' ',<WS>,channel=2,327:19]
[@187,17529:17529=':',<COLON>,327:20]
[@188,17530:17530=' ',<WS>,channel=2,327:21]
[@189,17531:17538='TypeSide',<UPPER_ID>,327:22]
[@190,17539:17539=' ',<WS>,channel=2,327:30]
[@191,17540:17540='{',<LBRACE>,327:31]
[@192,17541:17545='\n    ',<WS>,channel=2,327:32]
[@193,17546:17553='entities',<'entities'>,328:4]
[@194,17554:17562='\n        ',<WS>,channel=2,328:12]
[@195,17563:17567='Skill',<UPPER_ID>,329:8]
[@196,17568:17568=' ',<WS>,channel=2,329:13]
[@197,17569:17578='SkillClass',<UPPER_ID>,329:14]
[@198,17579:17583='\n    ',<WS>,channel=2,329:24]
[@199,17584:17595='foreign_keys',<'foreign_keys'>,330:4]
[@200,17596:17604='\n        ',<WS>,channel=2,330:16]
[@201,17605:17615='fk_HasClass',<LOWER_ID>,331:8]
[@202,17616:17616=' ',<WS>,channel=2,331:19]
[@203,17617:17617=':',<COLON>,331:20]
[@204,17618:17618=' ',<WS>,channel=2,331:21]
[@205,17619:17623='Skill',<UPPER_ID>,331:22]
[@206,17624:17624=' ',<WS>,channel=2,331:27]
[@207,17625:17626='->',<RARROW>,331:28]
[@208,17627:17627=' ',<WS>,channel=2,331:30]
[@209,17628:17637='SkillClass',<UPPER_ID>,331:31]
[@210,17638:17642='\n    ',<WS>,channel=2,331:41]
[@211,17643:17652='attributes',<'attributes'>,332:4]
[@212,17653:17661='\n        ',<WS>,channel=2,332:14]
[@213,17662:17666='SName',<UPPER_ID>,333:8]
[@214,17667:17667=' ',<WS>,channel=2,333:13]
[@215,17668:17668=':',<COLON>,333:14]
[@216,17669:17669=' ',<WS>,channel=2,333:15]
[@217,17670:17674='Skill',<UPPER_ID>,333:16]
[@218,17675:17675=' ',<WS>,channel=2,333:21]
[@219,17676:17677='->',<RARROW>,333:22]
[@220,17678:17678=' ',<WS>,channel=2,333:24]
[@221,17679:17685='Varchar',<UPPER_ID>,333:25]
[@222,17686:17694='\n        ',<WS>,channel=2,333:32]
[@223,17695:17705='SCNameOnSkl',<UPPER_ID>,334:8]
[@224,17706:17706=' ',<WS>,channel=2,334:19]
[@225,17707:17707=':',<COLON>,334:20]
[@226,17708:17708=' ',<WS>,channel=2,334:21]
[@227,17709:17713='Skill',<UPPER_ID>,334:22]
[@228,17714:17714=' ',<WS>,channel=2,334:27]
[@229,17715:17716='->',<RARROW>,334:28]
[@230,17717:17717=' ',<WS>,channel=2,334:30]
[@231,17718:17724='Varchar',<UPPER_ID>,334:31]
[@232,17725:17733='\n        ',<WS>,channel=2,334:38]
[@233,17734:17739='SCName',<UPPER_ID>,335:8]
[@234,17740:17740=' ',<WS>,channel=2,335:14]
[@235,17741:17741=':',<COLON>,335:15]
[@236,17742:17742=' ',<WS>,channel=2,335:16]
[@237,17743:17752='SkillClass',<UPPER_ID>,335:17]
[@238,17753:17753=' ',<WS>,channel=2,335:27]
[@239,17754:17755='->',<RARROW>,335:28]
[@240,17756:17756=' ',<WS>,channel=2,335:30]
[@241,17757:17763='Varchar',<UPPER_ID>,335:31]
[@242,17764:17768='\n    ',<WS>,channel=2,335:38]
[@243,17769:17789='observation_equations',<'observation_equations'>,336:4]
[@244,17790:17798='\n        ',<WS>,channel=2,336:25]
[@245,17799:17809='SCNameOnSkl',<UPPER_ID>,337:8]
[@246,17810:17810=' ',<WS>,channel=2,337:19]
[@247,17811:17811='=',<EQUAL>,337:20]
[@248,17812:17812=' ',<WS>,channel=2,337:21]
[@249,17813:17823='fk_HasClass',<LOWER_ID>,337:22]
[@250,17824:17824='.',<DOT>,337:33]
[@251,17825:17830='SCName',<UPPER_ID>,337:34]
[@252,17831:17831='\n',<WS>,channel=2,337:40]
[@253,17832:17832='}',<RBRACE>,338:0]
[@254,17833:17835='\n\n\n',<WS>,channel=2,338:1]
[@255,17836:17843='md { (* ',<MARKDOWN>,341:0]
[@256,17844:19706='"\n---\n\n## INSTANCES\n\nAs schemas extend the type side so instances extend schemas. An AQL instance can be\nconceptualized as the data that \"fills\" a schema. Minimally, an instance consists of a set of \ngenerators for each entity in the schema. A generator is a string used by AQL that serves to\nidentify a particular record in an entity. The user can optionally create equational definitions \nwhich associate the generator of one entity with that of another or a generator with an attribute \nvalue. In the absence of such an association AQL will create what is called a Skolem term. Skolem \nterms are essential for creating a database instance that can be formally defined and verified as \nconsistent. Skolem terms at a type are referred to as a labeled null. Skolem terms at an entity \nare referred to as a meaningless identifier. Notice that labeled nulls are very different than \nnulls in currently available RDBMSs.\n\nEvery null in AQL is typed by its associated generator and the path to the location in a schema \nwhere a value is missing. For example, in the instance definition below we failed to provide any \ngenerators for skill classes and so AQL created a Skolem term for each unknown skill class \nbeginning with a skill generator followed by the foreign key path. So for the Math skill there \nis an unknown generator `s0.fk_HasClass` whose unknown name is `s0.fk_HasClass.SCName`.\n\nThe following is a representative instance of skills. The way to think about this representative\nis that it is one member of a universe of possible instances all of which are derived from the\nsame schema type `sS`. To summarize, so far we have introduced the idea that AQL constructions are \norganized around the kind hierarchy:\n\ntypeside <- schema <- instance.\n\nRunning this file and selecting an instance below will display a tabular representation of each\ninstance.\n"',<MD_MULTI_STRING>,341:8]
[@257,19707:19711=' *) }',<MD_END>,372:1]
[@258,19712:19712='\n',<WS>,channel=2,372:6]
[@259,19713:19720='instance',<'instance'>,373:0]
[@260,19721:19721=' ',<WS>,channel=2,373:8]
[@261,19722:19725='iSkl',<LOWER_ID>,373:9]
[@262,19726:19726=' ',<WS>,channel=2,373:13]
[@263,19727:19727='=',<EQUAL>,373:14]
[@264,19728:19728=' ',<WS>,channel=2,373:15]
[@265,19729:19735='literal',<'literal'>,373:16]
[@266,19736:19736=' ',<WS>,channel=2,373:23]
[@267,19737:19737=':',<COLON>,373:24]
[@268,19738:19738=' ',<WS>,channel=2,373:25]
[@269,19739:19740='sS',<LOWER_ID>,373:26]
[@270,19741:19741=' ',<WS>,channel=2,373:28]
[@271,19742:19742='{',<LBRACE>,373:29]
[@272,19743:19747='\n    ',<WS>,channel=2,373:30]
[@273,19748:19757='generators',<'generators'>,374:4]
[@274,19758:19766='\n        ',<WS>,channel=2,374:14]
[@275,19767:19768='s0',<LOWER_ID>,375:8]
[@276,19769:19769=' ',<WS>,channel=2,375:10]
[@277,19770:19771='s1',<LOWER_ID>,375:11]
[@278,19772:19772=' ',<WS>,channel=2,375:13]
[@279,19773:19774='s2',<LOWER_ID>,375:14]
[@280,19775:19775=' ',<WS>,channel=2,375:16]
[@281,19776:19777='s3',<LOWER_ID>,375:17]
[@282,19778:19778=' ',<WS>,channel=2,375:19]
[@283,19779:19780='s4',<LOWER_ID>,375:20]
[@284,19781:19781=' ',<WS>,channel=2,375:22]
[@285,19782:19783='s5',<LOWER_ID>,375:23]
[@286,19784:19784=' ',<WS>,channel=2,375:25]
[@287,19785:19786='s6',<LOWER_ID>,375:26]
[@288,19787:19787=' ',<WS>,channel=2,375:28]
[@289,19788:19789='s7',<LOWER_ID>,375:29]
[@290,19790:19790=' ',<WS>,channel=2,375:31]
[@291,19791:19792='s8',<LOWER_ID>,375:32]
[@292,19793:19793=' ',<WS>,channel=2,375:34]
[@293,19794:19795='s9',<LOWER_ID>,375:35]
[@294,19796:19796=' ',<WS>,channel=2,375:37]
[@295,19797:19797=':',<COLON>,375:38]
[@296,19798:19798=' ',<WS>,channel=2,375:39]
[@297,19799:19803='Skill',<UPPER_ID>,375:40]
[@298,19804:19808='\n    ',<WS>,channel=2,375:45]
[@299,19809:19823='multi_equations',<'multi_equations'>,376:4]
[@300,19824:19832='\n        ',<WS>,channel=2,376:19]
[@301,19833:19837='SName',<UPPER_ID>,377:8]
[@302,19838:19838=' ',<WS>,channel=2,377:13]
[@303,19839:19840='->',<RARROW>,377:14]
[@304,19841:19841=' ',<WS>,channel=2,377:16]
[@305,19842:19842='{',<LBRACE>,377:17]
[@306,19843:19844='s0',<LOWER_ID>,377:18]
[@307,19845:19845=' ',<WS>,channel=2,377:20]
[@308,19846:19859='CategoryTheory',<UPPER_ID>,377:21]
[@309,19860:19860=',',<COMMA>,377:35]
[@310,19861:19861=' ',<WS>,channel=2,377:36]
[@311,19862:19863='s1',<LOWER_ID>,377:37]
[@312,19864:19864=' ',<WS>,channel=2,377:39]
[@313,19865:19871='CompSci',<UPPER_ID>,377:40]
[@314,19872:19872=',',<COMMA>,377:47]
[@315,19873:19873=' ',<WS>,channel=2,377:48]
[@316,19874:19875='s2',<LOWER_ID>,377:49]
[@317,19876:19876=' ',<WS>,channel=2,377:51]
[@318,19877:19879='DBA',<UPPER_ID>,377:52]
[@319,19880:19880=',',<COMMA>,377:55]
[@320,19881:19881=' ',<WS>,channel=2,377:56]
[@321,19882:19883='s3',<LOWER_ID>,377:57]
[@322,19884:19884=' ',<WS>,channel=2,377:59]
[@323,19885:19890='Pharma',<UPPER_ID>,377:60]
[@324,19891:19891=',',<COMMA>,377:66]
[@325,19892:19892=' ',<WS>,channel=2,377:67]
[@326,19893:19894='s4',<LOWER_ID>,377:68]
[@327,19895:19895=' ',<WS>,channel=2,377:70]
[@328,19896:19906='Programming',<UPPER_ID>,377:71]
[@329,19907:19907=',',<COMMA>,377:82]
[@330,19908:19908=' ',<WS>,channel=2,377:83]
[@331,19909:19910='s5',<LOWER_ID>,377:84]
[@332,19911:19911=' ',<WS>,channel=2,377:86]
[@333,19912:19920='Lecturing',<UPPER_ID>,377:87]
[@334,19921:19921=',',<COMMA>,377:96]
[@335,19922:19941=' \n                  ',<WS>,channel=2,377:97]
[@336,19942:19943='s6',<LOWER_ID>,378:18]
[@337,19944:19944=' ',<WS>,channel=2,378:20]
[@338,19945:19956='GrantWriting',<UPPER_ID>,378:21]
[@339,19957:19957=',',<COMMA>,378:33]
[@340,19958:19958=' ',<WS>,channel=2,378:34]
[@341,19959:19960='s7',<LOWER_ID>,378:35]
[@342,19961:19961=' ',<WS>,channel=2,378:37]
[@343,19962:19968='Finance',<UPPER_ID>,378:38]
[@344,19969:19969=',',<COMMA>,378:45]
[@345,19970:19970=' ',<WS>,channel=2,378:46]
[@346,19971:19972='s8',<LOWER_ID>,378:47]
[@347,19973:19973=' ',<WS>,channel=2,378:49]
[@348,19974:19983='Management',<UPPER_ID>,378:50]
[@349,19984:19984=',',<COMMA>,378:60]
[@350,19985:19985=' ',<WS>,channel=2,378:61]
[@351,19986:19987='s9',<LOWER_ID>,378:62]
[@352,19988:19988=' ',<WS>,channel=2,378:64]
[@353,19989:20000='PaperWriting',<UPPER_ID>,378:65]
[@354,20001:20001='}',<RBRACE>,378:77]
[@355,20002:20002='\n',<WS>,channel=2,378:78]
[@356,20003:20003='}',<RBRACE>,379:0]
[@357,20004:20005='\n\n',<WS>,channel=2,379:1]
[@358,20006:20013='md { (* ',<MARKDOWN>,381:0]
[@359,20014:20102='"\nAnalogous to the skills instance above we create a representative instance for tasks.\n"',<MD_MULTI_STRING>,381:8]
[@360,20103:20107=' *) }',<MD_END>,383:1]
[@361,20108:20109='\n\n',<WS>,channel=2,383:6]
[@362,20110:20117='instance',<'instance'>,385:0]
[@363,20118:20118=' ',<WS>,channel=2,385:8]
[@364,20119:20122='iTsk',<LOWER_ID>,385:9]
[@365,20123:20123=' ',<WS>,channel=2,385:13]
[@366,20124:20124='=',<EQUAL>,385:14]
[@367,20125:20125=' ',<WS>,channel=2,385:15]
[@368,20126:20132='literal',<'literal'>,385:16]
[@369,20133:20133=' ',<WS>,channel=2,385:23]
[@370,20134:20134=':',<COLON>,385:24]
[@371,20135:20135=' ',<WS>,channel=2,385:25]
[@372,20136:20137='sT',<LOWER_ID>,385:26]
[@373,20138:20138=' ',<WS>,channel=2,385:28]
[@374,20139:20139='{',<LBRACE>,385:29]
[@375,20140:20144='\n    ',<WS>,channel=2,385:30]
[@376,20145:20154='generators',<'generators'>,386:4]
[@377,20155:20163='\n        ',<WS>,channel=2,386:14]
[@378,20164:20165='t1',<LOWER_ID>,387:8]
[@379,20166:20166=' ',<WS>,channel=2,387:10]
[@380,20167:20168='t2',<LOWER_ID>,387:11]
[@381,20169:20169=' ',<WS>,channel=2,387:13]
[@382,20170:20171='t3',<LOWER_ID>,387:14]
[@383,20172:20172=' ',<WS>,channel=2,387:16]
[@384,20173:20174='t4',<LOWER_ID>,387:17]
[@385,20175:20175=' ',<WS>,channel=2,387:19]
[@386,20176:20177='t5',<LOWER_ID>,387:20]
[@387,20178:20178=' ',<WS>,channel=2,387:22]
[@388,20179:20180='t6',<LOWER_ID>,387:23]
[@389,20181:20181=' ',<WS>,channel=2,387:25]
[@390,20182:20183='t7',<LOWER_ID>,387:26]
[@391,20184:20184=' ',<WS>,channel=2,387:28]
[@392,20185:20186='t8',<LOWER_ID>,387:29]
[@393,20187:20187=' ',<WS>,channel=2,387:31]
[@394,20188:20189='t9',<LOWER_ID>,387:32]
[@395,20190:20190=' ',<WS>,channel=2,387:34]
[@396,20191:20193='t10',<LOWER_ID>,387:35]
[@397,20194:20194=' ',<WS>,channel=2,387:38]
[@398,20195:20195=':',<COLON>,387:39]
[@399,20196:20196=' ',<WS>,channel=2,387:40]
[@400,20197:20200='Task',<UPPER_ID>,387:41]
[@401,20201:20205='\n    ',<WS>,channel=2,387:45]
[@402,20206:20220='multi_equations',<'multi_equations'>,388:4]
[@403,20221:20225='\n    ',<WS>,channel=2,388:19]
[@404,20226:20230='TName',<UPPER_ID>,389:4]
[@405,20231:20231=' ',<WS>,channel=2,389:9]
[@406,20232:20233='->',<RARROW>,389:10]
[@407,20234:20234=' ',<WS>,channel=2,389:12]
[@408,20235:20235='{',<LBRACE>,389:13]
[@409,20236:20237='t1',<LOWER_ID>,389:14]
[@410,20238:20238=' ',<WS>,channel=2,389:16]
[@411,20239:20253='LaunchCIStartup',<UPPER_ID>,389:17]
[@412,20254:20254=',',<COMMA>,389:32]
[@413,20255:20255=' ',<WS>,channel=2,389:33]
[@414,20256:20257='t2',<LOWER_ID>,389:34]
[@415,20258:20258=' ',<WS>,channel=2,389:36]
[@416,20259:20266='BuildAQL',<UPPER_ID>,389:37]
[@417,20267:20267=',',<COMMA>,389:45]
[@418,20268:20268=' ',<WS>,channel=2,389:46]
[@419,20269:20270='t3',<LOWER_ID>,389:47]
[@420,20271:20271=' ',<WS>,channel=2,389:49]
[@421,20272:20287='WriteAQLTutorial',<UPPER_ID>,389:50]
[@422,20288:20288=',',<COMMA>,389:66]
[@423,20289:20289=' ',<WS>,channel=2,389:67]
[@424,20290:20291='t4',<LOWER_ID>,389:68]
[@425,20292:20292=' ',<WS>,channel=2,389:70]
[@426,20293:20306='BuildPhrmColim',<UPPER_ID>,389:71]
[@427,20307:20307=',',<COMMA>,389:85]
[@428,20308:20308=' ',<WS>,channel=2,389:86]
[@429,20309:20310='t5',<LOWER_ID>,389:87]
[@430,20311:20311=' ',<WS>,channel=2,389:89]
[@431,20312:20324='BuildFncColim',<UPPER_ID>,389:90]
[@432,20325:20325=',',<COMMA>,389:103]
[@433,20326:20340='\n              ',<WS>,channel=2,389:104]
[@434,20341:20342='t6',<LOWER_ID>,390:14]
[@435,20343:20343=' ',<WS>,channel=2,390:16]
[@436,20344:20355='WriteCTPaper',<UPPER_ID>,390:17]
[@437,20356:20356=',',<COMMA>,390:29]
[@438,20357:20357=' ',<WS>,channel=2,390:30]
[@439,20358:20359='t7',<LOWER_ID>,390:31]
[@440,20360:20360=' ',<WS>,channel=2,390:33]
[@441,20361:20367='TeachCT',<UPPER_ID>,390:34]
[@442,20368:20368=',',<COMMA>,390:41]
[@443,20369:20369=' ',<WS>,channel=2,390:42]
[@444,20370:20371='t8',<LOWER_ID>,390:43]
[@445,20372:20372=' ',<WS>,channel=2,390:45]
[@446,20373:20379='TeachCS',<UPPER_ID>,390:46]
[@447,20380:20380=',',<COMMA>,390:53]
[@448,20381:20381=' ',<WS>,channel=2,390:54]
[@449,20382:20383='t9',<LOWER_ID>,390:55]
[@450,20384:20384=' ',<WS>,channel=2,390:57]
[@451,20385:20401='RunPhrmIntProject',<UPPER_ID>,390:58]
[@452,20402:20402=',',<COMMA>,390:75]
[@453,20403:20403=' ',<WS>,channel=2,390:76]
[@454,20404:20406='t10',<LOWER_ID>,390:77]
[@455,20407:20407=' ',<WS>,channel=2,390:80]
[@456,20408:20423='RunFncIntProject',<UPPER_ID>,390:81]
[@457,20424:20424='}',<RBRACE>,390:97]
[@458,20425:20425='\n',<WS>,channel=2,390:98]
[@459,20426:20426='}',<RBRACE>,391:0]
[@460,20427:20428='\n\n',<WS>,channel=2,391:1]
[@461,20429:20436='md { (* ',<MARKDOWN>,393:0]
[@462,20437:20666='"\nThe definition of an entity with a pair of attributes provides us with the ability to create an\ninstance that associates each such pair with the same generator. Here we illustrate this idea\nwith such a representative instance.\n"',<MD_MULTI_STRING>,393:8]
[@463,20667:20671=' *) }',<MD_END>,397:1]
[@464,20672:20672='\n',<WS>,channel=2,397:6]
[@465,20673:20680='instance',<'instance'>,398:0]
[@466,20681:20681=' ',<WS>,channel=2,398:8]
[@467,20682:20685='iSnT',<LOWER_ID>,398:9]
[@468,20686:20686=' ',<WS>,channel=2,398:13]
[@469,20687:20687='=',<EQUAL>,398:14]
[@470,20688:20688=' ',<WS>,channel=2,398:15]
[@471,20689:20695='literal',<'literal'>,398:16]
[@472,20696:20696=' ',<WS>,channel=2,398:23]
[@473,20697:20697=':',<COLON>,398:24]
[@474,20698:20698=' ',<WS>,channel=2,398:25]
[@475,20699:20702='sSnT',<LOWER_ID>,398:26]
[@476,20703:20703=' ',<WS>,channel=2,398:30]
[@477,20704:20704='{',<LBRACE>,398:31]
[@478,20705:20709='\n    ',<WS>,channel=2,398:32]
[@479,20710:20719='generators',<'generators'>,399:4]
[@480,20720:20728='\n        ',<WS>,channel=2,399:14]
[@481,20729:20731='st1',<LOWER_ID>,400:8]
[@482,20732:20732=' ',<WS>,channel=2,400:11]
[@483,20733:20735='st2',<LOWER_ID>,400:12]
[@484,20736:20736=' ',<WS>,channel=2,400:15]
[@485,20737:20739='st3',<LOWER_ID>,400:16]
[@486,20740:20740=' ',<WS>,channel=2,400:19]
[@487,20741:20743='st4',<LOWER_ID>,400:20]
[@488,20744:20744=' ',<WS>,channel=2,400:23]
[@489,20745:20747='st5',<LOWER_ID>,400:24]
[@490,20748:20748=' ',<WS>,channel=2,400:27]
[@491,20749:20751='st6',<LOWER_ID>,400:28]
[@492,20752:20752=' ',<WS>,channel=2,400:31]
[@493,20753:20755='st7',<LOWER_ID>,400:32]
[@494,20756:20756=' ',<WS>,channel=2,400:35]
[@495,20757:20759='st8',<LOWER_ID>,400:36]
[@496,20760:20760=' ',<WS>,channel=2,400:39]
[@497,20761:20763='st9',<LOWER_ID>,400:40]
[@498,20764:20764=' ',<WS>,channel=2,400:43]
[@499,20765:20768='st10',<LOWER_ID>,400:44]
[@500,20769:20777='\n        ',<WS>,channel=2,400:48]
[@501,20778:20781='st11',<LOWER_ID>,401:8]
[@502,20782:20782=' ',<WS>,channel=2,401:12]
[@503,20783:20786='st12',<LOWER_ID>,401:13]
[@504,20787:20787=' ',<WS>,channel=2,401:17]
[@505,20788:20791='st13',<LOWER_ID>,401:18]
[@506,20792:20792=' ',<WS>,channel=2,401:22]
[@507,20793:20796='st14',<LOWER_ID>,401:23]
[@508,20797:20797=' ',<WS>,channel=2,401:27]
[@509,20798:20801='st15',<LOWER_ID>,401:28]
[@510,20802:20802=' ',<WS>,channel=2,401:32]
[@511,20803:20806='st16',<LOWER_ID>,401:33]
[@512,20807:20807=' ',<WS>,channel=2,401:37]
[@513,20808:20811='st17',<LOWER_ID>,401:38]
[@514,20812:20812=' ',<WS>,channel=2,401:42]
[@515,20813:20816='st18',<LOWER_ID>,401:43]
[@516,20817:20817=' ',<WS>,channel=2,401:47]
[@517,20818:20821='st19',<LOWER_ID>,401:48]
[@518,20822:20822=' ',<WS>,channel=2,401:52]
[@519,20823:20826='st20',<LOWER_ID>,401:53]
[@520,20827:20835='\n        ',<WS>,channel=2,401:57]
[@521,20836:20839='st21',<LOWER_ID>,402:8]
[@522,20840:20840=' ',<WS>,channel=2,402:12]
[@523,20841:20844='st22',<LOWER_ID>,402:13]
[@524,20845:20845=' ',<WS>,channel=2,402:17]
[@525,20846:20849='st23',<LOWER_ID>,402:18]
[@526,20850:20850=' ',<WS>,channel=2,402:22]
[@527,20851:20854='st24',<LOWER_ID>,402:23]
[@528,20855:20855=':',<COLON>,402:27]
[@529,20856:20856=' ',<WS>,channel=2,402:28]
[@530,20857:20874='SkillNeededForTask',<UPPER_ID>,402:29]
[@531,20875:20879='\n    ',<WS>,channel=2,402:47]
[@532,20880:20894='multi_equations',<'multi_equations'>,403:4]
[@533,20895:20903='\n        ',<WS>,channel=2,403:19]
[@534,20904:20908='skill',<LOWER_ID>,404:8]
[@535,20909:20909=' ',<WS>,channel=2,404:13]
[@536,20910:20911='->',<RARROW>,404:14]
[@537,20912:20912=' ',<WS>,channel=2,404:16]
[@538,20913:20913='{',<LBRACE>,404:17]
[@539,20914:20916='st1',<LOWER_ID>,404:18]
[@540,20917:20917=' ',<WS>,channel=2,404:21]
[@541,20918:20924='CompSci',<UPPER_ID>,404:22]
[@542,20925:20925=',',<COMMA>,404:29]
[@543,20926:20937='            ',<WS>,channel=2,404:30]
[@544,20938:20940='st2',<LOWER_ID>,404:42]
[@545,20941:20941=' ',<WS>,channel=2,404:45]
[@546,20942:20952='Programming',<UPPER_ID>,404:46]
[@547,20953:20953=',',<COMMA>,404:57]
[@548,20954:20959='      ',<WS>,channel=2,404:58]
[@549,20960:20962='st3',<LOWER_ID>,404:64]
[@550,20963:20963=' ',<WS>,channel=2,404:67]
[@551,20964:20975='GrantWriting',<UPPER_ID>,404:68]
[@552,20976:20976=',',<COMMA>,404:80]
[@553,20977:20980='    ',<WS>,channel=2,404:81]
[@554,20981:20983='st4',<LOWER_ID>,404:85]
[@555,20984:20984=' ',<WS>,channel=2,404:88]
[@556,20985:20996='PaperWriting',<UPPER_ID>,404:89]
[@557,20997:20997=',',<COMMA>,404:101]
[@558,20998:21016='\n                  ',<WS>,channel=2,404:102]
[@559,21017:21019='st5',<LOWER_ID>,405:18]
[@560,21020:21020=' ',<WS>,channel=2,405:21]
[@561,21021:21027='CompSci',<UPPER_ID>,405:22]
[@562,21028:21028=',',<COMMA>,405:29]
[@563,21029:21040='            ',<WS>,channel=2,405:30]
[@564,21041:21043='st6',<LOWER_ID>,405:42]
[@565,21044:21044=' ',<WS>,channel=2,405:45]
[@566,21045:21055='Programming',<UPPER_ID>,405:46]
[@567,21056:21056=',',<COMMA>,405:57]
[@568,21057:21062='      ',<WS>,channel=2,405:58]
[@569,21063:21065='st7',<LOWER_ID>,405:64]
[@570,21066:21066=' ',<WS>,channel=2,405:67]
[@571,21067:21076='Management',<UPPER_ID>,405:68]
[@572,21077:21077=',',<COMMA>,405:78]
[@573,21078:21096='\n                  ',<WS>,channel=2,405:79]
[@574,21097:21099='st8',<LOWER_ID>,406:18]
[@575,21100:21100=' ',<WS>,channel=2,406:21]
[@576,21101:21111='Programming',<UPPER_ID>,406:22]
[@577,21112:21112=',',<COMMA>,406:33]
[@578,21113:21120='        ',<WS>,channel=2,406:34]
[@579,21121:21123='st9',<LOWER_ID>,406:42]
[@580,21124:21124=' ',<WS>,channel=2,406:45]
[@581,21125:21133='Lecturing',<UPPER_ID>,406:46]
[@582,21134:21134=',',<COMMA>,406:55]
[@583,21135:21142='        ',<WS>,channel=2,406:56]
[@584,21143:21146='st10',<LOWER_ID>,406:64]
[@585,21147:21147=' ',<WS>,channel=2,406:68]
[@586,21148:21159='PaperWriting',<UPPER_ID>,406:69]
[@587,21160:21160=',',<COMMA>,406:81]
[@588,21161:21179='\n                  ',<WS>,channel=2,406:82]
[@589,21180:21183='st11',<LOWER_ID>,407:18]
[@590,21184:21184=' ',<WS>,channel=2,407:22]
[@591,21185:21190='Pharma',<UPPER_ID>,407:23]
[@592,21191:21191=',',<COMMA>,407:29]
[@593,21192:21203='            ',<WS>,channel=2,407:30]
[@594,21204:21207='st12',<LOWER_ID>,407:42]
[@595,21208:21208=' ',<WS>,channel=2,407:46]
[@596,21209:21219='Programming',<UPPER_ID>,407:47]
[@597,21220:21220=',',<COMMA>,407:58]
[@598,21221:21239='\n                  ',<WS>,channel=2,407:59]
[@599,21240:21243='st13',<LOWER_ID>,408:18]
[@600,21244:21244=' ',<WS>,channel=2,408:22]
[@601,21245:21251='Finance',<UPPER_ID>,408:23]
[@602,21252:21252=',',<COMMA>,408:30]
[@603,21253:21263='           ',<WS>,channel=2,408:31]
[@604,21264:21267='st14',<LOWER_ID>,408:42]
[@605,21268:21268=' ',<WS>,channel=2,408:46]
[@606,21269:21279='Programming',<UPPER_ID>,408:47]
[@607,21280:21280=',',<COMMA>,408:58]
[@608,21281:21299='\n                  ',<WS>,channel=2,408:59]
[@609,21300:21303='st15',<LOWER_ID>,409:18]
[@610,21304:21304=' ',<WS>,channel=2,409:22]
[@611,21305:21318='CategoryTheory',<UPPER_ID>,409:23]
[@612,21319:21319=',',<COMMA>,409:37]
[@613,21320:21323='    ',<WS>,channel=2,409:38]
[@614,21324:21327='st16',<LOWER_ID>,409:42]
[@615,21328:21328=' ',<WS>,channel=2,409:46]
[@616,21329:21340='PaperWriting',<UPPER_ID>,409:47]
[@617,21341:21341=',',<COMMA>,409:59]
[@618,21342:21360='\n                  ',<WS>,channel=2,409:60]
[@619,21361:21364='st17',<LOWER_ID>,410:18]
[@620,21365:21365=' ',<WS>,channel=2,410:22]
[@621,21366:21379='CategoryTheory',<UPPER_ID>,410:23]
[@622,21380:21380=',',<COMMA>,410:37]
[@623,21381:21384='    ',<WS>,channel=2,410:38]
[@624,21385:21388='st18',<LOWER_ID>,410:42]
[@625,21389:21389=' ',<WS>,channel=2,410:46]
[@626,21390:21398='Lecturing',<UPPER_ID>,410:47]
[@627,21399:21399=',',<COMMA>,410:56]
[@628,21400:21418='\n                  ',<WS>,channel=2,410:57]
[@629,21419:21422='st19',<LOWER_ID>,411:18]
[@630,21423:21423=' ',<WS>,channel=2,411:22]
[@631,21424:21429='Pharma',<UPPER_ID>,411:23]
[@632,21430:21430=',',<COMMA>,411:29]
[@633,21431:21442='            ',<WS>,channel=2,411:30]
[@634,21443:21446='st20',<LOWER_ID>,411:42]
[@635,21447:21447=' ',<WS>,channel=2,411:46]
[@636,21448:21457='Management',<UPPER_ID>,411:47]
[@637,21458:21458=',',<COMMA>,411:57]
[@638,21459:21477='\n                  ',<WS>,channel=2,411:58]
[@639,21478:21481='st21',<LOWER_ID>,412:18]
[@640,21482:21482=' ',<WS>,channel=2,412:22]
[@641,21483:21489='Finance',<UPPER_ID>,412:23]
[@642,21490:21490=',',<COMMA>,412:30]
[@643,21491:21501='           ',<WS>,channel=2,412:31]
[@644,21502:21505='st22',<LOWER_ID>,412:42]
[@645,21506:21506=' ',<WS>,channel=2,412:46]
[@646,21507:21516='Management',<UPPER_ID>,412:47]
[@647,21517:21517=',',<COMMA>,412:57]
[@648,21518:21536='\n                  ',<WS>,channel=2,412:58]
[@649,21537:21540='st23',<LOWER_ID>,413:18]
[@650,21541:21541=' ',<WS>,channel=2,413:22]
[@651,21542:21548='CompSci',<UPPER_ID>,413:23]
[@652,21549:21549=',',<COMMA>,413:30]
[@653,21550:21560='           ',<WS>,channel=2,413:31]
[@654,21561:21564='st24',<LOWER_ID>,413:42]
[@655,21565:21565=' ',<WS>,channel=2,413:46]
[@656,21566:21574='Lecturing',<UPPER_ID>,413:47]
[@657,21575:21575='}',<RBRACE>,413:56]
[@658,21576:21584='\n        ',<WS>,channel=2,413:57]
[@659,21585:21588='task',<LOWER_ID>,414:8]
[@660,21589:21589=' ',<WS>,channel=2,414:12]
[@661,21590:21591='->',<RARROW>,414:13]
[@662,21592:21593='  ',<WS>,channel=2,414:15]
[@663,21594:21594='{',<LBRACE>,414:17]
[@664,21595:21597='st1',<LOWER_ID>,414:18]
[@665,21598:21598=' ',<WS>,channel=2,414:21]
[@666,21599:21613='LaunchCIStartup',<UPPER_ID>,414:22]
[@667,21614:21614=',',<COMMA>,414:37]
[@668,21615:21618='    ',<WS>,channel=2,414:38]
[@669,21619:21621='st2',<LOWER_ID>,414:42]
[@670,21622:21622=' ',<WS>,channel=2,414:45]
[@671,21623:21637='LaunchCIStartup',<UPPER_ID>,414:46]
[@672,21638:21638=',',<COMMA>,414:61]
[@673,21639:21640='  ',<WS>,channel=2,414:62]
[@674,21641:21643='st3',<LOWER_ID>,414:64]
[@675,21644:21644=' ',<WS>,channel=2,414:67]
[@676,21645:21659='LaunchCIStartup',<UPPER_ID>,414:68]
[@677,21660:21660=',',<COMMA>,414:83]
[@678,21661:21661=' ',<WS>,channel=2,414:84]
[@679,21662:21664='st4',<LOWER_ID>,414:85]
[@680,21665:21665=' ',<WS>,channel=2,414:88]
[@681,21666:21680='LaunchCIStartup',<UPPER_ID>,414:89]
[@682,21681:21681=',',<COMMA>,414:104]
[@683,21682:21700='\n                  ',<WS>,channel=2,414:105]
[@684,21701:21703='st5',<LOWER_ID>,415:18]
[@685,21704:21704=' ',<WS>,channel=2,415:21]
[@686,21705:21712='BuildAQL',<UPPER_ID>,415:22]
[@687,21713:21713=',',<COMMA>,415:30]
[@688,21714:21724='           ',<WS>,channel=2,415:31]
[@689,21725:21727='st6',<LOWER_ID>,415:42]
[@690,21728:21728=' ',<WS>,channel=2,415:45]
[@691,21729:21736='BuildAQL',<UPPER_ID>,415:46]
[@692,21737:21737=',',<COMMA>,415:54]
[@693,21738:21746='         ',<WS>,channel=2,415:55]
[@694,21747:21749='st7',<LOWER_ID>,415:64]
[@695,21750:21750=' ',<WS>,channel=2,415:67]
[@696,21751:21758='BuildAQL',<UPPER_ID>,415:68]
[@697,21759:21759=',',<COMMA>,415:76]
[@698,21760:21778='\n                  ',<WS>,channel=2,415:77]
[@699,21779:21781='st8',<LOWER_ID>,416:18]
[@700,21782:21782=' ',<WS>,channel=2,416:21]
[@701,21783:21798='WriteAQLTutorial',<UPPER_ID>,416:22]
[@702,21799:21799=',',<COMMA>,416:38]
[@703,21800:21802='   ',<WS>,channel=2,416:39]
[@704,21803:21805='st9',<LOWER_ID>,416:42]
[@705,21806:21806=' ',<WS>,channel=2,416:45]
[@706,21807:21822='WriteAQLTutorial',<UPPER_ID>,416:46]
[@707,21823:21823=',',<COMMA>,416:62]
[@708,21824:21824=' ',<WS>,channel=2,416:63]
[@709,21825:21828='st10',<LOWER_ID>,416:64]
[@710,21829:21829=' ',<WS>,channel=2,416:68]
[@711,21830:21845='WriteAQLTutorial',<UPPER_ID>,416:69]
[@712,21846:21846=',',<COMMA>,416:85]
[@713,21847:21865='\n                  ',<WS>,channel=2,416:86]
[@714,21866:21869='st11',<LOWER_ID>,417:18]
[@715,21870:21870=' ',<WS>,channel=2,417:22]
[@716,21871:21884='BuildPhrmColim',<UPPER_ID>,417:23]
[@717,21885:21885=',',<COMMA>,417:37]
[@718,21886:21889='    ',<WS>,channel=2,417:38]
[@719,21890:21893='st12',<LOWER_ID>,417:42]
[@720,21894:21894=' ',<WS>,channel=2,417:46]
[@721,21895:21908='BuildPhrmColim',<UPPER_ID>,417:47]
[@722,21909:21909=',',<COMMA>,417:61]
[@723,21910:21928='\n                  ',<WS>,channel=2,417:62]
[@724,21929:21932='st13',<LOWER_ID>,418:18]
[@725,21933:21933=' ',<WS>,channel=2,418:22]
[@726,21934:21946='BuildFncColim',<UPPER_ID>,418:23]
[@727,21947:21947=',',<COMMA>,418:36]
[@728,21948:21952='     ',<WS>,channel=2,418:37]
[@729,21953:21956='st14',<LOWER_ID>,418:42]
[@730,21957:21957=' ',<WS>,channel=2,418:46]
[@731,21958:21970='BuildFncColim',<UPPER_ID>,418:47]
[@732,21971:21971=',',<COMMA>,418:60]
[@733,21972:21990='\n                  ',<WS>,channel=2,418:61]
[@734,21991:21994='st15',<LOWER_ID>,419:18]
[@735,21995:21995=' ',<WS>,channel=2,419:22]
[@736,21996:22007='WriteCTPaper',<UPPER_ID>,419:23]
[@737,22008:22008=',',<COMMA>,419:35]
[@738,22009:22014='      ',<WS>,channel=2,419:36]
[@739,22015:22018='st16',<LOWER_ID>,419:42]
[@740,22019:22019=' ',<WS>,channel=2,419:46]
[@741,22020:22031='WriteCTPaper',<UPPER_ID>,419:47]
[@742,22032:22032=',',<COMMA>,419:59]
[@743,22033:22051='\n                  ',<WS>,channel=2,419:60]
[@744,22052:22055='st17',<LOWER_ID>,420:18]
[@745,22056:22056=' ',<WS>,channel=2,420:22]
[@746,22057:22063='TeachCT',<UPPER_ID>,420:23]
[@747,22064:22064=',',<COMMA>,420:30]
[@748,22065:22075='           ',<WS>,channel=2,420:31]
[@749,22076:22079='st18',<LOWER_ID>,420:42]
[@750,22080:22080=' ',<WS>,channel=2,420:46]
[@751,22081:22087='TeachCT',<UPPER_ID>,420:47]
[@752,22088:22088=',',<COMMA>,420:54]
[@753,22089:22107='\n                  ',<WS>,channel=2,420:55]
[@754,22108:22111='st19',<LOWER_ID>,421:18]
[@755,22112:22112=' ',<WS>,channel=2,421:22]
[@756,22113:22129='RunPhrmIntProject',<UPPER_ID>,421:23]
[@757,22130:22130=',',<COMMA>,421:40]
[@758,22131:22131=' ',<WS>,channel=2,421:41]
[@759,22132:22135='st20',<LOWER_ID>,421:42]
[@760,22136:22136=' ',<WS>,channel=2,421:46]
[@761,22137:22153='RunPhrmIntProject',<UPPER_ID>,421:47]
[@762,22154:22154=',',<COMMA>,421:64]
[@763,22155:22173='\n                  ',<WS>,channel=2,421:65]
[@764,22174:22177='st21',<LOWER_ID>,422:18]
[@765,22178:22178=' ',<WS>,channel=2,422:22]
[@766,22179:22194='RunFncIntProject',<UPPER_ID>,422:23]
[@767,22195:22195=',',<COMMA>,422:39]
[@768,22196:22197='  ',<WS>,channel=2,422:40]
[@769,22198:22201='st22',<LOWER_ID>,422:42]
[@770,22202:22202=' ',<WS>,channel=2,422:46]
[@771,22203:22218='RunFncIntProject',<UPPER_ID>,422:47]
[@772,22219:22219=',',<COMMA>,422:63]
[@773,22220:22238='\n                  ',<WS>,channel=2,422:64]
[@774,22239:22242='st23',<LOWER_ID>,423:18]
[@775,22243:22243=' ',<WS>,channel=2,423:22]
[@776,22244:22250='TeachCS',<UPPER_ID>,423:23]
[@777,22251:22251=',',<COMMA>,423:30]
[@778,22252:22262='           ',<WS>,channel=2,423:31]
[@779,22263:22266='st24',<LOWER_ID>,423:42]
[@780,22267:22267=' ',<WS>,channel=2,423:46]
[@781,22268:22274='TeachCS',<UPPER_ID>,423:47]
[@782,22275:22275='}',<RBRACE>,423:54]
[@783,22276:22276='\n',<WS>,channel=2,423:55]
[@784,22277:22277='}',<RBRACE>,424:0]
[@785,22278:22280='\n\n\n',<WS>,channel=2,424:1]
[@786,22281:22288='md { (* ',<MARKDOWN>,427:0]
[@787,22289:24916='"\n**Instance Categories**\n\nLike schemas, instances can also be viewed as categories. To make this clearer consider these\nalternative syntaxes for declaring an instance using the equations keyword. The following are\nboth equivalent to the `iSkl` declaration above:\n\n    instance iSkl = literal : sS {\n        generators\n            s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 : Skill\n        equations\n          s0.SName = CategoryTheory    s1.SName = CompSci        s2.SName = DBA\n          s3.SName = Pharma            s4.SName = Programming    s5.SName = Lecturing\n          s6.SName = GrantWriting      s7.SName = Finance        s8.SName = Management\n          s9.SName = PaperWriting\n    }\n    instance iSkl = literal : sS {\n        generators\n            s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 : Skill\n        equations\n          SName(s0) = CategoryTheory    SName(s1) = CompSci        SName(s2) = DBA\n          SName(s3) = Pharma            SName(s4) = Programming    SName(s5) = Lecturing\n          SName(s6) = GrantWriting      SName(s7) = Finance        SName(s8) = Management\n          SName(s9) = PaperWriting\n    }\n\nThe objects of an instance category are the generators plus the Skolem terms produced by those\ngenerators. The arrows are either a foreign key evaluated at a generator/Skolem term or an \nattribute evaluated at a generator/Skolem term. Like a schema the literal declaration of an \ninstance is a presentation of an instance category. As you will see when you run an AQL model \nwith a literal instance declaration AQL will fill Skolem terms as implied by the schema and the \nprovided generators.\n\nNotice these equations declare instance arrows in a way that is closely analogous to an RDF \ntriple. The subject of a triple is a generator/Skolem term, the object of a triple is either a \nliteral (value on the type side) or another generator/Skolem term and the predicate is the type \non the arrow as determined by the underlying schema. As such AQL instances are closely related to \ngraph databases although they are very strongly typed by their underlying schema.\n\nIn order to extend the instance `iSkl` to include classes we need to decide how we want to\npartition the skills we have into broad equivalence classes (we list the generators for \nconvenience):\n\n  * Class 1: CategoryTheory, CompSci, DBA, Programming (s0, s1, s2, s4)\n  * Class 2: Pharma, Lecturing, Finance, Management (s3, s5, s7, s8)\n  * Class 3: GrantWriting, PaperWriting (s6, s9)\n  \nAQL provides the ability to extend any construction by importing a construction already in place,\nso using the path dot notation we extend the `iSkl` instance as follows:\n"',<MD_MULTI_STRING>,427:8]
[@788,24917:24921=' *) }',<MD_END>,476:1]
[@789,24922:24923='\n\n',<WS>,channel=2,476:6]
[@790,24924:24931='instance',<'instance'>,478:0]
[@791,24932:24932=' ',<WS>,channel=2,478:8]
[@792,24933:24939='iSklExt',<LOWER_ID>,478:9]
[@793,24940:24940=' ',<WS>,channel=2,478:16]
[@794,24941:24941='=',<EQUAL>,478:17]
[@795,24942:24942=' ',<WS>,channel=2,478:18]
[@796,24943:24949='literal',<'literal'>,478:19]
[@797,24950:24950=' ',<WS>,channel=2,478:26]
[@798,24951:24951=':',<COLON>,478:27]
[@799,24952:24952=' ',<WS>,channel=2,478:28]
[@800,24953:24954='sS',<LOWER_ID>,478:29]
[@801,24955:24955=' ',<WS>,channel=2,478:31]
[@802,24956:24956='{',<LBRACE>,478:32]
[@803,24957:24961='\n    ',<WS>,channel=2,478:33]
[@804,24962:24968='imports',<'imports'>,479:4]
[@805,24969:24976='\n       ',<WS>,channel=2,479:11]
[@806,24977:24980='iSkl',<LOWER_ID>,480:7]
[@807,24981:24985='\n    ',<WS>,channel=2,480:11]
[@808,24986:24994='equations',<'equations'>,481:4]
[@809,24995:25002='\n       ',<WS>,channel=2,481:13]
[@810,25003:25004='s0',<LOWER_ID>,482:7]
[@811,25005:25005='.',<DOT>,482:9]
[@812,25006:25016='fk_HasClass',<LOWER_ID>,482:10]
[@813,25017:25017=' ',<WS>,channel=2,482:21]
[@814,25018:25018='=',<EQUAL>,482:22]
[@815,25019:25019=' ',<WS>,channel=2,482:23]
[@816,25020:25021='s1',<LOWER_ID>,482:24]
[@817,25022:25022='.',<DOT>,482:26]
[@818,25023:25033='fk_HasClass',<LOWER_ID>,482:27]
[@819,25034:25041='\n       ',<WS>,channel=2,482:38]
[@820,25042:25043='s0',<LOWER_ID>,483:7]
[@821,25044:25044='.',<DOT>,483:9]
[@822,25045:25055='fk_HasClass',<LOWER_ID>,483:10]
[@823,25056:25056=' ',<WS>,channel=2,483:21]
[@824,25057:25057='=',<EQUAL>,483:22]
[@825,25058:25058=' ',<WS>,channel=2,483:23]
[@826,25059:25060='s2',<LOWER_ID>,483:24]
[@827,25061:25061='.',<DOT>,483:26]
[@828,25062:25072='fk_HasClass',<LOWER_ID>,483:27]
[@829,25073:25080='\n       ',<WS>,channel=2,483:38]
[@830,25081:25082='s0',<LOWER_ID>,484:7]
[@831,25083:25083='.',<DOT>,484:9]
[@832,25084:25094='fk_HasClass',<LOWER_ID>,484:10]
[@833,25095:25095=' ',<WS>,channel=2,484:21]
[@834,25096:25096='=',<EQUAL>,484:22]
[@835,25097:25097=' ',<WS>,channel=2,484:23]
[@836,25098:25099='s4',<LOWER_ID>,484:24]
[@837,25100:25100='.',<DOT>,484:26]
[@838,25101:25111='fk_HasClass',<LOWER_ID>,484:27]
[@839,25112:25119='\n       ',<WS>,channel=2,484:38]
[@840,25120:25121='s3',<LOWER_ID>,485:7]
[@841,25122:25122='.',<DOT>,485:9]
[@842,25123:25133='fk_HasClass',<LOWER_ID>,485:10]
[@843,25134:25134=' ',<WS>,channel=2,485:21]
[@844,25135:25135='=',<EQUAL>,485:22]
[@845,25136:25136=' ',<WS>,channel=2,485:23]
[@846,25137:25138='s5',<LOWER_ID>,485:24]
[@847,25139:25139='.',<DOT>,485:26]
[@848,25140:25150='fk_HasClass',<LOWER_ID>,485:27]
[@849,25151:25158='\n       ',<WS>,channel=2,485:38]
[@850,25159:25160='s3',<LOWER_ID>,486:7]
[@851,25161:25161='.',<DOT>,486:9]
[@852,25162:25172='fk_HasClass',<LOWER_ID>,486:10]
[@853,25173:25173=' ',<WS>,channel=2,486:21]
[@854,25174:25174='=',<EQUAL>,486:22]
[@855,25175:25175=' ',<WS>,channel=2,486:23]
[@856,25176:25177='s7',<LOWER_ID>,486:24]
[@857,25178:25178='.',<DOT>,486:26]
[@858,25179:25189='fk_HasClass',<LOWER_ID>,486:27]
[@859,25190:25197='\n       ',<WS>,channel=2,486:38]
[@860,25198:25199='s3',<LOWER_ID>,487:7]
[@861,25200:25200='.',<DOT>,487:9]
[@862,25201:25211='fk_HasClass',<LOWER_ID>,487:10]
[@863,25212:25212=' ',<WS>,channel=2,487:21]
[@864,25213:25213='=',<EQUAL>,487:22]
[@865,25214:25214=' ',<WS>,channel=2,487:23]
[@866,25215:25216='s8',<LOWER_ID>,487:24]
[@867,25217:25217='.',<DOT>,487:26]
[@868,25218:25228='fk_HasClass',<LOWER_ID>,487:27]
[@869,25229:25236='\n       ',<WS>,channel=2,487:38]
[@870,25237:25238='s6',<LOWER_ID>,488:7]
[@871,25239:25239='.',<DOT>,488:9]
[@872,25240:25250='fk_HasClass',<LOWER_ID>,488:10]
[@873,25251:25251=' ',<WS>,channel=2,488:21]
[@874,25252:25252='=',<EQUAL>,488:22]
[@875,25253:25253=' ',<WS>,channel=2,488:23]
[@876,25254:25255='s9',<LOWER_ID>,488:24]
[@877,25256:25256='.',<DOT>,488:26]
[@878,25257:25267='fk_HasClass',<LOWER_ID>,488:27]
[@879,25268:25268='\n',<WS>,channel=2,488:38]
[@880,25269:25269='}',<RBRACE>,489:0]
[@881,25270:25271='\n\n',<WS>,channel=2,489:1]
[@882,25272:25279='md { (* ',<MARKDOWN>,491:0]
[@883,25280:25718='"\nNotice that each of the paths in the equations above have a direct correspondence with a Skolem \nterm. Hence, in contrast with traditional database NULL values, Skolem terms can be manipulated \nin the same way any other value can be manipulated. If you compare `iSkl` and `iSklExt` in the \nruntime GUI you will note that the number of Skolem terms has decreased from ten (one for each \nskill) to three (one for each equivalence class).\n"',<MD_MULTI_STRING>,491:8]
[@884,25719:25723=' *) }',<MD_END>,497:1]
[@885,25724:25725='\n\n',<WS>,channel=2,497:6]
[@886,25726:25733='md { (* ',<MARKDOWN>,499:0]
[@887,25734:26416='"\n**The Category of Instances of a Schema**\n\nNow lets see if we can give these skill class labeled nulls labels. To do this we have to\nintroduce another example of a category, the universe of possible instances that are all based on \na particular schema. For example all instances of `sS` define a category. The objects are instances \nof `sS` and we already have two examples, `iSkl` and `iSklExt`. The arrows are transforms from one\ninstance of `sS` to another instance of `sS`. A transform is an instance map that preserves the \nstructure of the instance. We will return to transforms in a moment, but for now lets create a\nthird instance with labels for our three skill classes.\n"',<MD_MULTI_STRING>,499:8]
[@888,26417:26421=' *) }',<MD_END>,509:1]
[@889,26422:26423='\n\n',<WS>,channel=2,509:6]
[@890,26424:26431='instance',<'instance'>,511:0]
[@891,26432:26432=' ',<WS>,channel=2,511:8]
[@892,26433:26439='iSklCls',<LOWER_ID>,511:9]
[@893,26440:26440=' ',<WS>,channel=2,511:16]
[@894,26441:26441='=',<EQUAL>,511:17]
[@895,26442:26442=' ',<WS>,channel=2,511:18]
[@896,26443:26449='literal',<'literal'>,511:19]
[@897,26450:26450=' ',<WS>,channel=2,511:26]
[@898,26451:26451=':',<COLON>,511:27]
[@899,26452:26452=' ',<WS>,channel=2,511:28]
[@900,26453:26454='sS',<LOWER_ID>,511:29]
[@901,26455:26455=' ',<WS>,channel=2,511:31]
[@902,26456:26456='{',<LBRACE>,511:32]
[@903,26457:26461='\n    ',<WS>,channel=2,511:33]
[@904,26462:26471='generators',<'generators'>,512:4]
[@905,26472:26480='\n        ',<WS>,channel=2,512:14]
[@906,26481:26483='sc0',<LOWER_ID>,513:8]
[@907,26484:26484=' ',<WS>,channel=2,513:11]
[@908,26485:26487='sc1',<LOWER_ID>,513:12]
[@909,26488:26488=' ',<WS>,channel=2,513:15]
[@910,26489:26491='sc2',<LOWER_ID>,513:16]
[@911,26492:26492=' ',<WS>,channel=2,513:19]
[@912,26493:26493=':',<COLON>,513:20]
[@913,26494:26494=' ',<WS>,channel=2,513:21]
[@914,26495:26504='SkillClass',<UPPER_ID>,513:22]
[@915,26505:26509='\n    ',<WS>,channel=2,513:32]
[@916,26510:26518='equations',<'equations'>,514:4]
[@917,26519:26527='\n        ',<WS>,channel=2,514:13]
[@918,26528:26530='sc0',<LOWER_ID>,515:8]
[@919,26531:26531='.',<DOT>,515:11]
[@920,26532:26537='SCName',<UPPER_ID>,515:12]
[@921,26538:26538=' ',<WS>,channel=2,515:18]
[@922,26539:26539='=',<EQUAL>,515:19]
[@923,26540:26540=' ',<WS>,channel=2,515:20]
[@924,26541:26549='Cognitive',<UPPER_ID>,515:21]
[@925,26550:26558='\n        ',<WS>,channel=2,515:30]
[@926,26559:26561='sc1',<LOWER_ID>,516:8]
[@927,26562:26562='.',<DOT>,516:11]
[@928,26563:26568='SCName',<UPPER_ID>,516:12]
[@929,26569:26569=' ',<WS>,channel=2,516:18]
[@930,26570:26570='=',<EQUAL>,516:19]
[@931,26571:26571=' ',<WS>,channel=2,516:20]
[@932,26572:26577='Social',<UPPER_ID>,516:21]
[@933,26578:26586='\n        ',<WS>,channel=2,516:27]
[@934,26587:26589='sc2',<LOWER_ID>,517:8]
[@935,26590:26590='.',<DOT>,517:11]
[@936,26591:26596='SCName',<UPPER_ID>,517:12]
[@937,26597:26597=' ',<WS>,channel=2,517:18]
[@938,26598:26598='=',<EQUAL>,517:19]
[@939,26599:26599=' ',<WS>,channel=2,517:20]
[@940,26600:26610='Psychomotor',<UPPER_ID>,517:21]
[@941,26611:26611='\n',<WS>,channel=2,517:32]
[@942,26612:26612='}',<RBRACE>,518:0]
[@943,26613:26614='\n\n',<WS>,channel=2,518:1]
[@944,26615:26622='md { (* ',<MARKDOWN>,520:0]
[@945,26623:28754='"\nAn important idea in category theory is the notion of a universal construction. We now introduce\nthe AQL implementation of such a construction. The idea is that given a particular structure\ndefined by a diagram one can consider all possible examples of that structure in a particular\ncategory. By that we mean all examples that have the same shape as the diagram in question. Let's\nconsider a diagram called a cospan. It has this shape: `t1: A --> X <-- B :t2`. As we were \ncurrently talking about the category of instances of the schema `sS`, the objects `A`, `X`, and `B`\nare instances and the two arrows are transforms. A cospan in this category is any valid collection\nof three instances of `sS` that are related to one another via a pair of transforms.\n\nGiven a choice of instances say `iSklExt` and `iSklCls` we can consider all possible ways of \ncombining `iSklExt` and `iSklCls` with a pair of transforms to get a third instance `X`. The\nuniversal way of combining `iSklExt` and `iSklCls` to get an `X` is the one to which all others can\nbe related in a unique way. That is to say, for any `X` and any pair of valid transforms `t1` and\n`t2` the universal cospan `iA: iSklExt --> iSklCP <-- iSklCls :iB` is the cospan such that there\nexists a unique transform:\n\n    t(t1,t2): iSklCP --> X such that\n    iA.t(t1,t2) = t1 and\n    iB.t(t1,t2) = t2\n\nfor any `X` and any pair of transforms `(t1, t2)`. What this means is that the pair of arrows `t1`\nand `t2` can be replaced with the single arrow `t(t1,t2)`.\n\nConceptually this construction is a generalization of the SQL \"UNION ALL\" statement. It is a \ngeneralization in that it applies to a pair of instances of a schema rather than a pair of \nrelations of a relvar. This construction is known as a coproduct. We say that `iA` and `iB` are \ninjections of the instances `iSklExt` and `iSklCls` into the coproduct. You can see the effect of\nthis construction by running this file and selecting `iSklCP` in the viewer. Notice the result is\nan instance `sS` that is the disjoint union of the records of `iSklExt` and `iSklCls` that has\nrespected the foreign key `fk_HasClass`.\n"',<MD_MULTI_STRING>,520:8]
[@946,28755:28759=' *) }',<MD_END>,551:1]
[@947,28760:28760='\n',<WS>,channel=2,551:6]
[@948,28761:28768='instance',<'instance'>,552:0]
[@949,28769:28769=' ',<WS>,channel=2,552:8]
[@950,28770:28775='iSklCP',<LOWER_ID>,552:9]
[@951,28776:28776=' ',<WS>,channel=2,552:15]
[@952,28777:28777='=',<EQUAL>,552:16]
[@953,28778:28778=' ',<WS>,channel=2,552:17]
[@954,28779:28783='union',<'union'>,552:18]
[@955,28784:28784=' ',<WS>,channel=2,552:23]
[@956,28785:28791='iSklExt',<LOWER_ID>,552:24]
[@957,28792:28792=' ',<WS>,channel=2,552:31]
[@958,28793:28793='+',<PLUS>,552:32]
[@959,28794:28794=' ',<WS>,channel=2,552:33]
[@960,28795:28801='iSklCls',<LOWER_ID>,552:34]
[@961,28802:28802=' ',<WS>,channel=2,552:41]
[@962,28803:28803=':',<COLON>,552:42]
[@963,28804:28804=' ',<WS>,channel=2,552:43]
[@964,28805:28806='sS',<LOWER_ID>,552:44]
[@965,28807:28808='\n\n',<WS>,channel=2,552:46]
[@966,28809:28816='md { (* ',<MARKDOWN>,554:0]
[@967,28817:29323='"\nNow that we have all of the desired records in the same instance we want to identify the\ngenerators that came from `iSklCls` with the Skolem terms that came from the `iSklExt` instance. To \nachieve this result we would like to declare that each of the Skolem terms from `iSklExt` should be \nmerged with the appropriate generator coming from `iSklCls`. Recall we have already done this by \nimporting an existing instance into a new instance and adding equations. Here is the solution\nusing that approach.\n"',<MD_MULTI_STRING>,554:8]
[@968,29324:29328=' *) }',<MD_END>,561:1]
[@969,29329:29330='\n\n',<WS>,channel=2,561:6]
[@970,29331:29338='instance',<'instance'>,563:0]
[@971,29339:29339=' ',<WS>,channel=2,563:8]
[@972,29340:29350='iSklSklCls1',<LOWER_ID>,563:9]
[@973,29351:29351=' ',<WS>,channel=2,563:20]
[@974,29352:29352='=',<EQUAL>,563:21]
[@975,29353:29353=' ',<WS>,channel=2,563:22]
[@976,29354:29360='literal',<'literal'>,563:23]
[@977,29361:29361=' ',<WS>,channel=2,563:30]
[@978,29362:29362=':',<COLON>,563:31]
[@979,29363:29363=' ',<WS>,channel=2,563:32]
[@980,29364:29365='sS',<LOWER_ID>,563:33]
[@981,29366:29366=' ',<WS>,channel=2,563:35]
[@982,29367:29367='{',<LBRACE>,563:36]
[@983,29368:29372='\n    ',<WS>,channel=2,563:37]
[@984,29373:29379='imports',<'imports'>,564:4]
[@985,29380:29386='\n      ',<WS>,channel=2,564:11]
[@986,29387:29392='iSklCP',<LOWER_ID>,565:6]
[@987,29393:29397='\n    ',<WS>,channel=2,565:12]
[@988,29398:29406='equations',<'equations'>,566:4]
[@989,29407:29413='\n      ',<WS>,channel=2,566:13]
[@990,29414:29415='s0',<LOWER_ID>,567:6]
[@991,29416:29416='.',<DOT>,567:8]
[@992,29417:29427='fk_HasClass',<LOWER_ID>,567:9]
[@993,29428:29428=' ',<WS>,channel=2,567:20]
[@994,29429:29429='=',<EQUAL>,567:21]
[@995,29430:29430=' ',<WS>,channel=2,567:22]
[@996,29431:29433='sc0',<LOWER_ID>,567:23]
[@997,29434:29440='\n      ',<WS>,channel=2,567:26]
[@998,29441:29442='s3',<LOWER_ID>,568:6]
[@999,29443:29443='.',<DOT>,568:8]
[@1000,29444:29454='fk_HasClass',<LOWER_ID>,568:9]
[@1001,29455:29455=' ',<WS>,channel=2,568:20]
[@1002,29456:29456='=',<EQUAL>,568:21]
[@1003,29457:29457=' ',<WS>,channel=2,568:22]
[@1004,29458:29460='sc1',<LOWER_ID>,568:23]
[@1005,29461:29467='\n      ',<WS>,channel=2,568:26]
[@1006,29468:29469='s6',<LOWER_ID>,569:6]
[@1007,29470:29470='.',<DOT>,569:8]
[@1008,29471:29481='fk_HasClass',<LOWER_ID>,569:9]
[@1009,29482:29482=' ',<WS>,channel=2,569:20]
[@1010,29483:29483='=',<EQUAL>,569:21]
[@1011,29484:29484=' ',<WS>,channel=2,569:22]
[@1012,29485:29487='sc2',<LOWER_ID>,569:23]
[@1013,29488:29488='\n',<WS>,channel=2,569:26]
[@1014,29489:29489='}',<RBRACE>,570:0]
[@1015,29490:29491='\n\n',<WS>,channel=2,570:1]
[@1016,29492:29499='md { (* ',<MARKDOWN>,572:0]
[@1017,29500:30313='"\nThere is an alternative construction that is universal. First we create an instance `iSLnk` with a \ngenerator for each of the skill classes. We then create two instance transforms, the first \nmapping each link generator to a `iSklExt` Skolem term and the second mapping each link generator \nto our `iSklCls` generators. The new universal construction is known as a coequalizer. An instance \ncoequalizer uses a pair of transforms to define collections of records that are identified as \nequal. This approach has the advantage that linking instances and transforms can be imported from \nan external database using SQL queries.\n\nThis construction is a generalization of the notion of partitioning a set into equivalence\nclasses. Later we will see how these constructions can be applied to other categories in AQL.\n"',<MD_MULTI_STRING>,572:8]
[@1018,30314:30318=' *) }',<MD_END>,583:1]
[@1019,30319:30320='\n\n',<WS>,channel=2,583:6]
[@1020,30321:30328='instance',<'instance'>,585:0]
[@1021,30329:30329=' ',<WS>,channel=2,585:8]
[@1022,30330:30334='iSLnk',<LOWER_ID>,585:9]
[@1023,30335:30335=' ',<WS>,channel=2,585:14]
[@1024,30336:30336='=',<EQUAL>,585:15]
[@1025,30337:30337=' ',<WS>,channel=2,585:16]
[@1026,30338:30344='literal',<'literal'>,585:17]
[@1027,30345:30345=' ',<WS>,channel=2,585:24]
[@1028,30346:30346=':',<COLON>,585:25]
[@1029,30347:30347=' ',<WS>,channel=2,585:26]
[@1030,30348:30349='sS',<LOWER_ID>,585:27]
[@1031,30350:30350=' ',<WS>,channel=2,585:29]
[@1032,30351:30351='{',<LBRACE>,585:30]
[@1033,30352:30356='\n    ',<WS>,channel=2,585:31]
[@1034,30357:30366='generators',<'generators'>,586:4]
[@1035,30367:30375='\n        ',<WS>,channel=2,586:14]
[@1036,30376:30381='scLnk0',<LOWER_ID>,587:8]
[@1037,30382:30382=' ',<WS>,channel=2,587:14]
[@1038,30383:30388='scLnk1',<LOWER_ID>,587:15]
[@1039,30389:30389=' ',<WS>,channel=2,587:21]
[@1040,30390:30395='scLnk2',<LOWER_ID>,587:22]
[@1041,30396:30396=' ',<WS>,channel=2,587:28]
[@1042,30397:30397=':',<COLON>,587:29]
[@1043,30398:30398=' ',<WS>,channel=2,587:30]
[@1044,30399:30408='SkillClass',<UPPER_ID>,587:31]
[@1045,30409:30409='\n',<WS>,channel=2,587:41]
[@1046,30410:30410='}',<RBRACE>,588:0]
[@1047,30411:30411='\n',<WS>,channel=2,588:1]
[@1048,30412:30420='transform',<'transform'>,589:0]
[@1049,30421:30421=' ',<WS>,channel=2,589:9]
[@1050,30422:30424='tS1',<LOWER_ID>,589:10]
[@1051,30425:30425=' ',<WS>,channel=2,589:13]
[@1052,30426:30426='=',<EQUAL>,589:14]
[@1053,30427:30427=' ',<WS>,channel=2,589:15]
[@1054,30428:30434='literal',<'literal'>,589:16]
[@1055,30435:30435=' ',<WS>,channel=2,589:23]
[@1056,30436:30436=':',<COLON>,589:24]
[@1057,30437:30437=' ',<WS>,channel=2,589:25]
[@1058,30438:30442='iSLnk',<LOWER_ID>,589:26]
[@1059,30443:30443=' ',<WS>,channel=2,589:31]
[@1060,30444:30445='->',<RARROW>,589:32]
[@1061,30446:30446=' ',<WS>,channel=2,589:34]
[@1062,30447:30452='iSklCP',<LOWER_ID>,589:35]
[@1063,30453:30453=' ',<WS>,channel=2,589:41]
[@1064,30454:30454='{',<LBRACE>,589:42]
[@1065,30455:30459='\n    ',<WS>,channel=2,589:43]
[@1066,30460:30469='generators',<'generators'>,590:4]
[@1067,30470:30478='\n        ',<WS>,channel=2,590:14]
[@1068,30479:30484='scLnk0',<LOWER_ID>,591:8]
[@1069,30485:30485=' ',<WS>,channel=2,591:14]
[@1070,30486:30487='->',<RARROW>,591:15]
[@1071,30488:30488=' ',<WS>,channel=2,591:17]
[@1072,30489:30490='s0',<LOWER_ID>,591:18]
[@1073,30491:30491='.',<DOT>,591:20]
[@1074,30492:30502='fk_HasClass',<LOWER_ID>,591:21]
[@1075,30503:30511='\n        ',<WS>,channel=2,591:32]
[@1076,30512:30517='scLnk1',<LOWER_ID>,592:8]
[@1077,30518:30518=' ',<WS>,channel=2,592:14]
[@1078,30519:30520='->',<RARROW>,592:15]
[@1079,30521:30521=' ',<WS>,channel=2,592:17]
[@1080,30522:30523='s3',<LOWER_ID>,592:18]
[@1081,30524:30524='.',<DOT>,592:20]
[@1082,30525:30535='fk_HasClass',<LOWER_ID>,592:21]
[@1083,30536:30544='\n        ',<WS>,channel=2,592:32]
[@1084,30545:30550='scLnk2',<LOWER_ID>,593:8]
[@1085,30551:30551=' ',<WS>,channel=2,593:14]
[@1086,30552:30553='->',<RARROW>,593:15]
[@1087,30554:30554=' ',<WS>,channel=2,593:17]
[@1088,30555:30556='s6',<LOWER_ID>,593:18]
[@1089,30557:30557='.',<DOT>,593:20]
[@1090,30558:30568='fk_HasClass',<LOWER_ID>,593:21]
[@1091,30569:30569='\n',<WS>,channel=2,593:32]
[@1092,30570:30570='}',<RBRACE>,594:0]
[@1093,30571:30571='\n',<WS>,channel=2,594:1]
[@1094,30572:30580='transform',<'transform'>,595:0]
[@1095,30581:30581=' ',<WS>,channel=2,595:9]
[@1096,30582:30584='tS2',<LOWER_ID>,595:10]
[@1097,30585:30585=' ',<WS>,channel=2,595:13]
[@1098,30586:30586='=',<EQUAL>,595:14]
[@1099,30587:30587=' ',<WS>,channel=2,595:15]
[@1100,30588:30594='literal',<'literal'>,595:16]
[@1101,30595:30595=' ',<WS>,channel=2,595:23]
[@1102,30596:30596=':',<COLON>,595:24]
[@1103,30597:30597=' ',<WS>,channel=2,595:25]
[@1104,30598:30602='iSLnk',<LOWER_ID>,595:26]
[@1105,30603:30603=' ',<WS>,channel=2,595:31]
[@1106,30604:30605='->',<RARROW>,595:32]
[@1107,30606:30606=' ',<WS>,channel=2,595:34]
[@1108,30607:30612='iSklCP',<LOWER_ID>,595:35]
[@1109,30613:30613=' ',<WS>,channel=2,595:41]
[@1110,30614:30614='{',<LBRACE>,595:42]
[@1111,30615:30619='\n    ',<WS>,channel=2,595:43]
[@1112,30620:30629='generators',<'generators'>,596:4]
[@1113,30630:30638='\n        ',<WS>,channel=2,596:14]
[@1114,30639:30644='scLnk0',<LOWER_ID>,597:8]
[@1115,30645:30645=' ',<WS>,channel=2,597:14]
[@1116,30646:30647='->',<RARROW>,597:15]
[@1117,30648:30648=' ',<WS>,channel=2,597:17]
[@1118,30649:30651='sc0',<LOWER_ID>,597:18]
[@1119,30652:30660='\n        ',<WS>,channel=2,597:21]
[@1120,30661:30666='scLnk1',<LOWER_ID>,598:8]
[@1121,30667:30667=' ',<WS>,channel=2,598:14]
[@1122,30668:30669='->',<RARROW>,598:15]
[@1123,30670:30670=' ',<WS>,channel=2,598:17]
[@1124,30671:30673='sc1',<LOWER_ID>,598:18]
[@1125,30674:30682='\n        ',<WS>,channel=2,598:21]
[@1126,30683:30688='scLnk2',<LOWER_ID>,599:8]
[@1127,30689:30689=' ',<WS>,channel=2,599:14]
[@1128,30690:30691='->',<RARROW>,599:15]
[@1129,30692:30692=' ',<WS>,channel=2,599:17]
[@1130,30693:30695='sc2',<LOWER_ID>,599:18]
[@1131,30696:30696='\n',<WS>,channel=2,599:21]
[@1132,30697:30697='}',<RBRACE>,600:0]
[@1133,30698:30698='\n',<WS>,channel=2,600:1]
[@1134,30699:30706='instance',<'instance'>,601:0]
[@1135,30707:30707=' ',<WS>,channel=2,601:8]
[@1136,30708:30718='iSklSklCls2',<LOWER_ID>,601:9]
[@1137,30719:30719=' ',<WS>,channel=2,601:20]
[@1138,30720:30720='=',<EQUAL>,601:21]
[@1139,30721:30721=' ',<WS>,channel=2,601:22]
[@1140,30722:30731='coequalize',<'coequalize'>,601:23]
[@1141,30732:30732=' ',<WS>,channel=2,601:33]
[@1142,30733:30735='tS1',<LOWER_ID>,601:34]
[@1143,30736:30736=' ',<WS>,channel=2,601:37]
[@1144,30737:30739='tS2',<LOWER_ID>,601:38]
[@1145,30740:30741='\n\n',<WS>,channel=2,601:41]
[@1146,30742:30749='md { (* ',<MARKDOWN>,603:0]
[@1147,30750:31012='"\nNotice we can summarize the sequence of constructions above as follows:\n \n    s0.fk_HasClass <- scLnk0 -> sc0\n    s3.fk_HasClass <- scLnk1 -> sc1\n    s6.fk_HasClass <- scLnk2 -> sc2,\n\nwhich in turn is structurally equivalent to the equations in `iSklSklCls1`.\n"',<MD_MULTI_STRING>,603:8]
[@1148,31013:31017=' *) }',<MD_END>,611:1]
[@1149,31018:31019='\n\n',<WS>,channel=2,611:6]
[@1150,31020:31027='md { (* ',<MARKDOWN>,613:0]
[@1151,31028:33143='"\n---\n\n## AQL QUERIES\n**And the Category of Schemas**\n\nThe next example of a category we need is the category of schemas. Since a schema can be viewed\nas a presentation of a category the category of schemas is closely related to the category of\ncategories. The objects of the category of schemas are of course schemas and the arrows are\nreferred to in AQL as mappings. There is a syntax for the literal declaration of a mapping that \nis provided by AQL, but we will not elaborate on that syntax as you will see that most\napplications of mappings are either implicit in other constructions or generalizations to\nmappings as in the case of queries which we introduce in this section.\n\nConceptually mappings preserve the structure of a schema, that is, they map entities and foreign\nkeys/attributes in a consistent way. For the interested reader the name given mappings in the\nmathematical literature is functor, as a functor can be viewed as a generalized function. Queries\nfurther generalize mappings in the same way that a cospan `A -> B <- C` generalizes a single arrow \n`A -> C`.\n\nAQL queries can be used to extract some part of a schema instance as well as to calculate derived \nresults. This construction is the query kind. We illustrate in our first example a simple form of \nan AQL query that is very similar to an SQL query.\n\n  * The from clause: like SQL lists the entities from which the query is constructed. AQL differs\n    in that each entity must be provided with a variable that serves as a representative generator\n    for that entity. This is syntactically similar to an SQL alias though not optional.\n  * The where clause: Again similar to the where clause in SQL in that it provides a means for\n    filtering records and joining entities.\n  * The attributes clause: The attributes clause is analogous to the select clause in SQL and defines what\n    the query output is.\n  \nWe make use of the Java string method \"matches\" we have exposed through the type side. This\nmethod allows us to pass a regular expression that can be used as a filter for any skill name \nending in the string \"Writing\".\n"',<MD_MULTI_STRING>,613:8]
[@1152,33144:33148=' *) }',<MD_END>,648:1]
[@1153,33149:33150='\n\n',<WS>,channel=2,648:6]
[@1154,33151:33155='query',<'query'>,650:0]
[@1155,33156:33156=' ',<WS>,channel=2,650:5]
[@1156,33157:33166='qWrtngSklS',<LOWER_ID>,650:6]
[@1157,33167:33167=' ',<WS>,channel=2,650:16]
[@1158,33168:33168='=',<EQUAL>,650:17]
[@1159,33169:33169=' ',<WS>,channel=2,650:18]
[@1160,33170:33175='simple',<'simple'>,650:19]
[@1161,33176:33176=' ',<WS>,channel=2,650:25]
[@1162,33177:33177=':',<COLON>,650:26]
[@1163,33178:33178=' ',<WS>,channel=2,650:27]
[@1164,33179:33180='sS',<LOWER_ID>,650:28]
[@1165,33181:33181=' ',<WS>,channel=2,650:30]
[@1166,33182:33182='{',<LBRACE>,650:31]
[@1167,33183:33187='\n    ',<WS>,channel=2,650:32]
[@1168,33188:33191='from',<'from'>,651:4]
[@1169,33192:33198='\n      ',<WS>,channel=2,651:8]
[@1170,33199:33199='s',<LOWER_ID>,652:6]
[@1171,33200:33200=':',<COLON>,652:7]
[@1172,33201:33201=' ',<WS>,channel=2,652:8]
[@1173,33202:33206='Skill',<UPPER_ID>,652:9]
[@1174,33207:33211='\n    ',<WS>,channel=2,652:14]
[@1175,33212:33216='where',<'where'>,653:4]
[@1176,33217:33223='\n      ',<WS>,channel=2,653:9]
[@1177,33224:33230='Matches',<UPPER_ID>,654:6]
[@1178,33231:33231='(',<LPAREN>,654:13]
[@1179,33232:33232='s',<LOWER_ID>,654:14]
[@1180,33233:33233='.',<DOT>,654:15]
[@1181,33234:33238='SName',<UPPER_ID>,654:16]
[@1182,33239:33239=',',<COMMA>,654:21]
[@1183,33240:33240=' ',<WS>,channel=2,654:22]
[@1184,33241:33251='".*Writing"',<STRING>,654:23]
[@1185,33252:33252=')',<RPAREN>,654:34]
[@1186,33253:33253=' ',<WS>,channel=2,654:35]
[@1187,33254:33254='=',<EQUAL>,654:36]
[@1188,33255:33255=' ',<WS>,channel=2,654:37]
[@1189,33256:33259='true',<'true'>,654:38]
[@1190,33260:33264='\n    ',<WS>,channel=2,654:42]
[@1191,33265:33274='attributes',<'attributes'>,655:4]
[@1192,33275:33281='\n      ',<WS>,channel=2,655:14]
[@1193,33282:33291='Skill_Name',<UPPER_ID>,656:6]
[@1194,33292:33292=' ',<WS>,channel=2,656:16]
[@1195,33293:33294='->',<RARROW>,656:17]
[@1196,33295:33295=' ',<WS>,channel=2,656:19]
[@1197,33296:33296='s',<LOWER_ID>,656:20]
[@1198,33297:33297='.',<DOT>,656:21]
[@1199,33298:33302='SName',<UPPER_ID>,656:22]
[@1200,33303:33309='\n      ',<WS>,channel=2,656:27]
[@1201,33310:33325='Skill_Class_Name',<UPPER_ID>,657:6]
[@1202,33326:33326=' ',<WS>,channel=2,657:22]
[@1203,33327:33328='->',<RARROW>,657:23]
[@1204,33329:33329=' ',<WS>,channel=2,657:25]
[@1205,33330:33330='s',<LOWER_ID>,657:26]
[@1206,33331:33331='.',<DOT>,657:27]
[@1207,33332:33342='SCNameOnSkl',<UPPER_ID>,657:28]
[@1208,33343:33343='\n',<WS>,channel=2,657:39]
[@1209,33344:33344='}',<RBRACE>,658:0]
[@1210,33345:33346='\n\n',<WS>,channel=2,658:1]
[@1211,33347:33354='md { (* ',<MARKDOWN>,660:0]
[@1212,33355:33682='"\nBy virtue of AQL's ability to define multiple instances associated with a schema, to execute a\nquery it must be evaluated on an instance to define a new instance. When queries are of the\nsimple type as in this example the schema is implicitly defined as having a single entity with\nattributes as listed in the return clause.\n"',<MD_MULTI_STRING>,660:8]
[@1213,33683:33687=' *) }',<MD_END>,665:1]
[@1214,33688:33688='\n',<WS>,channel=2,665:6]
[@1215,33689:33696='instance',<'instance'>,666:0]
[@1216,33697:33697=' ',<WS>,channel=2,666:8]
[@1217,33698:33707='iWrtngSklS',<LOWER_ID>,666:9]
[@1218,33708:33708=' ',<WS>,channel=2,666:19]
[@1219,33709:33709='=',<EQUAL>,666:20]
[@1220,33710:33710=' ',<WS>,channel=2,666:21]
[@1221,33711:33714='eval',<'eval'>,666:22]
[@1222,33715:33715=' ',<WS>,channel=2,666:26]
[@1223,33716:33725='qWrtngSklS',<LOWER_ID>,666:27]
[@1224,33726:33726=' ',<WS>,channel=2,666:37]
[@1225,33727:33730='iSkl',<LOWER_ID>,666:38]
[@1226,33731:33732='\n\n',<WS>,channel=2,666:42]
[@1227,33733:33740='md { (* ',<MARKDOWN>,668:0]
[@1228,33741:34024='"\nTo illustrate the more complete query syntax we must explicitly declare a target schema. Below\nwe rewrite `qWrtngSklS` to illustrate the more complete syntax. First we define the target schema\nwith a single entity `tSkill` and the two attributes listed in the return clause above:\n"',<MD_MULTI_STRING>,668:8]
[@1229,34025:34029=' *) }',<MD_END>,672:1]
[@1230,34030:34030='\n',<WS>,channel=2,672:6]
[@1231,34031:34036='schema',<'schema'>,673:0]
[@1232,34037:34037=' ',<WS>,channel=2,673:6]
[@1233,34038:34041='sSkl',<LOWER_ID>,673:7]
[@1234,34042:34042=' ',<WS>,channel=2,673:11]
[@1235,34043:34043='=',<EQUAL>,673:12]
[@1236,34044:34044=' ',<WS>,channel=2,673:13]
[@1237,34045:34051='literal',<'literal'>,673:14]
[@1238,34052:34052=' ',<WS>,channel=2,673:21]
[@1239,34053:34053=':',<COLON>,673:22]
[@1240,34054:34054=' ',<WS>,channel=2,673:23]
[@1241,34055:34062='TypeSide',<UPPER_ID>,673:24]
[@1242,34063:34063=' ',<WS>,channel=2,673:32]
[@1243,34064:34064='{',<LBRACE>,673:33]
[@1244,34065:34069='\n    ',<WS>,channel=2,673:34]
[@1245,34070:34077='entities',<'entities'>,674:4]
[@1246,34078:34084='\n      ',<WS>,channel=2,674:12]
[@1247,34085:34090='tSkill',<LOWER_ID>,675:6]
[@1248,34091:34095='\n    ',<WS>,channel=2,675:12]
[@1249,34096:34105='attributes',<'attributes'>,676:4]
[@1250,34106:34112='\n      ',<WS>,channel=2,676:14]
[@1251,34113:34122='Skill_Name',<UPPER_ID>,677:6]
[@1252,34123:34123=' ',<WS>,channel=2,677:16]
[@1253,34124:34124=':',<COLON>,677:17]
[@1254,34125:34125=' ',<WS>,channel=2,677:18]
[@1255,34126:34131='tSkill',<LOWER_ID>,677:19]
[@1256,34132:34132=' ',<WS>,channel=2,677:25]
[@1257,34133:34134='->',<RARROW>,677:26]
[@1258,34135:34135=' ',<WS>,channel=2,677:28]
[@1259,34136:34142='Varchar',<UPPER_ID>,677:29]
[@1260,34143:34149='\n      ',<WS>,channel=2,677:36]
[@1261,34150:34165='Skill_Class_Name',<UPPER_ID>,678:6]
[@1262,34166:34166=' ',<WS>,channel=2,678:22]
[@1263,34167:34167=':',<COLON>,678:23]
[@1264,34168:34168=' ',<WS>,channel=2,678:24]
[@1265,34169:34174='tSkill',<LOWER_ID>,678:25]
[@1266,34175:34175=' ',<WS>,channel=2,678:31]
[@1267,34176:34177='->',<RARROW>,678:32]
[@1268,34178:34178=' ',<WS>,channel=2,678:34]
[@1269,34179:34185='Varchar',<UPPER_ID>,678:35]
[@1270,34186:34186='\n',<WS>,channel=2,678:42]
[@1271,34187:34187='}',<RBRACE>,679:0]
[@1272,34188:34189='\n\n',<WS>,channel=2,679:1]
[@1273,34190:34197='md { (* ',<MARKDOWN>,681:0]
[@1274,34198:34678='"\nNext we create a query whose kind is an arrow from the source schema `sS` to the target schema\n`sSkl`. This complete syntax requires a query sub-section for each entity in the target schema. \nAdditionally the complete syntax requires an assignment for all attributes defined in the target \nschema. The query `qWrtngSklC` is functionally equivalent to `qWrtngSklS`. If you run this model you \nwill notice that the instance `iWrtngSklS` is identical to the instance `iWrtngSklC`.\n"',<MD_MULTI_STRING>,681:8]
[@1275,34679:34683=' *) }',<MD_END>,687:1]
[@1276,34684:34684='\n',<WS>,channel=2,687:6]
[@1277,34685:34689='query',<'query'>,688:0]
[@1278,34690:34690=' ',<WS>,channel=2,688:5]
[@1279,34691:34700='qWrtngSklC',<LOWER_ID>,688:6]
[@1280,34701:34701=' ',<WS>,channel=2,688:16]
[@1281,34702:34702='=',<EQUAL>,688:17]
[@1282,34703:34703=' ',<WS>,channel=2,688:18]
[@1283,34704:34710='literal',<'literal'>,688:19]
[@1284,34711:34711=' ',<WS>,channel=2,688:26]
[@1285,34712:34712=':',<COLON>,688:27]
[@1286,34713:34713=' ',<WS>,channel=2,688:28]
[@1287,34714:34715='sS',<LOWER_ID>,688:29]
[@1288,34716:34716=' ',<WS>,channel=2,688:31]
[@1289,34717:34718='->',<RARROW>,688:32]
[@1290,34719:34719=' ',<WS>,channel=2,688:34]
[@1291,34720:34723='sSkl',<LOWER_ID>,688:35]
[@1292,34724:34724=' ',<WS>,channel=2,688:39]
[@1293,34725:34725='{',<LBRACE>,688:40]
[@1294,34726:34730='\n    ',<WS>,channel=2,688:41]
[@1295,34731:34736='entity',<'entity'>,689:4]
[@1296,34737:34743='\n      ',<WS>,channel=2,689:10]
[@1297,34744:34749='tSkill',<LOWER_ID>,690:6]
[@1298,34750:34750=' ',<WS>,channel=2,690:12]
[@1299,34751:34752='->',<RARROW>,690:13]
[@1300,34753:34753=' ',<WS>,channel=2,690:15]
[@1301,34754:34754='{',<LBRACE>,690:16]
[@1302,34755:34765='\n          ',<WS>,channel=2,690:17]
[@1303,34766:34769='from',<'from'>,691:10]
[@1304,34770:34782='\n            ',<WS>,channel=2,691:14]
[@1305,34783:34783='s',<LOWER_ID>,692:12]
[@1306,34784:34784=':',<COLON>,692:13]
[@1307,34785:34785=' ',<WS>,channel=2,692:14]
[@1308,34786:34790='Skill',<UPPER_ID>,692:15]
[@1309,34791:34801='\n          ',<WS>,channel=2,692:20]
[@1310,34802:34806='where',<'where'>,693:10]
[@1311,34807:34817='\n          ',<WS>,channel=2,693:15]
[@1312,34818:34824='Matches',<UPPER_ID>,694:10]
[@1313,34825:34825='(',<LPAREN>,694:17]
[@1314,34826:34826='s',<LOWER_ID>,694:18]
[@1315,34827:34827='.',<DOT>,694:19]
[@1316,34828:34832='SName',<UPPER_ID>,694:20]
[@1317,34833:34833=',',<COMMA>,694:25]
[@1318,34834:34834=' ',<WS>,channel=2,694:26]
[@1319,34835:34845='".*Writing"',<STRING>,694:27]
[@1320,34846:34846=')',<RPAREN>,694:38]
[@1321,34847:34847=' ',<WS>,channel=2,694:39]
[@1322,34848:34848='=',<EQUAL>,694:40]
[@1323,34849:34849=' ',<WS>,channel=2,694:41]
[@1324,34850:34853='true',<'true'>,694:42]
[@1325,34854:34864='\n          ',<WS>,channel=2,694:46]
[@1326,34865:34874='attributes',<'attributes'>,695:10]
[@1327,34875:34885='\n          ',<WS>,channel=2,695:20]
[@1328,34886:34895='Skill_Name',<UPPER_ID>,696:10]
[@1329,34896:34896=' ',<WS>,channel=2,696:20]
[@1330,34897:34898='->',<RARROW>,696:21]
[@1331,34899:34899=' ',<WS>,channel=2,696:23]
[@1332,34900:34900='s',<LOWER_ID>,696:24]
[@1333,34901:34901='.',<DOT>,696:25]
[@1334,34902:34906='SName',<UPPER_ID>,696:26]
[@1335,34907:34917='\n          ',<WS>,channel=2,696:31]
[@1336,34918:34933='Skill_Class_Name',<UPPER_ID>,697:10]
[@1337,34934:34934=' ',<WS>,channel=2,697:26]
[@1338,34935:34936='->',<RARROW>,697:27]
[@1339,34937:34937=' ',<WS>,channel=2,697:29]
[@1340,34938:34938='s',<LOWER_ID>,697:30]
[@1341,34939:34939='.',<DOT>,697:31]
[@1342,34940:34950='SCNameOnSkl',<UPPER_ID>,697:32]
[@1343,34951:34957='\n      ',<WS>,channel=2,697:43]
[@1344,34958:34958='}',<RBRACE>,698:6]
[@1345,34959:34959='\n',<WS>,channel=2,698:7]
[@1346,34960:34960='}',<RBRACE>,699:0]
[@1347,34961:34961='\n',<WS>,channel=2,699:1]
[@1348,34962:34969='instance',<'instance'>,700:0]
[@1349,34970:34970=' ',<WS>,channel=2,700:8]
[@1350,34971:34980='iWrtngSklC',<LOWER_ID>,700:9]
[@1351,34981:34981=' ',<WS>,channel=2,700:19]
[@1352,34982:34982='=',<EQUAL>,700:20]
[@1353,34983:34983=' ',<WS>,channel=2,700:21]
[@1354,34984:34987='eval',<'eval'>,700:22]
[@1355,34988:34988=' ',<WS>,channel=2,700:26]
[@1356,34989:34998='qWrtngSklC',<LOWER_ID>,700:27]
[@1357,34999:34999=' ',<WS>,channel=2,700:37]
[@1358,35000:35003='iSkl',<LOWER_ID>,700:38]
[@1359,35004:35005='\n\n',<WS>,channel=2,700:42]
[@1360,35006:35013='md { (* ',<MARKDOWN>,702:0]
[@1361,35014:36495='"\nQueries as structure preserving maps of schemas have the capability of mapping not only entities\nbut also foreign keys. In this example we will build a query that has as its source and target \nschemas `sS` but is not an identity. This example filters for those skills that are classified as \nsocial skills.\n\nGiven its novel nature, let's take a moment to elaborate on the syntax of the `foreign_keys` \nsection. We have duplicated the declaration of the foreign key we are constructing in a comment as \nreference. The `fk_HasClass` foreign key enforces a functional dependency between the generators of\nthe entity Skill and the generators of of the entity `SkillClass`. In the entities section we have\ngenerator variables sc for the `SkillClass` entity and `s` for the `Skill` entity. These are variables \nthat vary over the generators and Skolem terms created by the saturation process. The task at \nhand is to use those variables and the source foreign key to construct a functional dependency in \nthe target schema. We do this by taking a `SkillClass` generator and assigning it as the return \nvalue of the target foreign key `fk_HasClass`. Which generator do we assign? The one we get by \ntaking a skill generator and following it to its skill class. Notice that this is opposite to the \ndirection of the arrow associated with the `fk_SkillClass` functional dependency.\n\nNote: If you removed the where clause from each entity sub-section you would have the identity \nmapping.\n"',<MD_MULTI_STRING>,702:8]
[@1362,36496:36500=' *) }',<MD_END>,722:1]
[@1363,36501:36501='\n',<WS>,channel=2,722:6]
[@1364,36502:36506='query',<'query'>,723:0]
[@1365,36507:36507=' ',<WS>,channel=2,723:5]
[@1366,36508:36511='qScl',<LOWER_ID>,723:6]
[@1367,36512:36512=' ',<WS>,channel=2,723:10]
[@1368,36513:36513='=',<EQUAL>,723:11]
[@1369,36514:36514=' ',<WS>,channel=2,723:12]
[@1370,36515:36521='literal',<'literal'>,723:13]
[@1371,36522:36522=' ',<WS>,channel=2,723:20]
[@1372,36523:36523=':',<COLON>,723:21]
[@1373,36524:36524=' ',<WS>,channel=2,723:22]
[@1374,36525:36526='sS',<LOWER_ID>,723:23]
[@1375,36527:36527=' ',<WS>,channel=2,723:25]
[@1376,36528:36529='->',<RARROW>,723:26]
[@1377,36530:36530=' ',<WS>,channel=2,723:28]
[@1378,36531:36532='sS',<LOWER_ID>,723:29]
[@1379,36533:36533=' ',<WS>,channel=2,723:31]
[@1380,36534:36534='{',<LBRACE>,723:32]
[@1381,36535:36539='\n    ',<WS>,channel=2,723:33]
[@1382,36540:36545='entity',<'entity'>,724:4]
[@1383,36546:36552='\n      ',<WS>,channel=2,724:10]
[@1384,36553:36562='SkillClass',<UPPER_ID>,725:6]
[@1385,36563:36563=' ',<WS>,channel=2,725:16]
[@1386,36564:36565='->',<RARROW>,725:17]
[@1387,36566:36566=' ',<WS>,channel=2,725:19]
[@1388,36567:36567='{',<LBRACE>,725:20]
[@1389,36568:36578='\n          ',<WS>,channel=2,725:21]
[@1390,36579:36582='from',<'from'>,726:10]
[@1391,36583:36595='\n            ',<WS>,channel=2,726:14]
[@1392,36596:36597='sc',<LOWER_ID>,727:12]
[@1393,36598:36598=':',<COLON>,727:14]
[@1394,36599:36599=' ',<WS>,channel=2,727:15]
[@1395,36600:36609='SkillClass',<UPPER_ID>,727:16]
[@1396,36610:36620='\n          ',<WS>,channel=2,727:26]
[@1397,36621:36625='where',<'where'>,728:10]
[@1398,36626:36638='\n            ',<WS>,channel=2,728:15]
[@1399,36639:36640='sc',<LOWER_ID>,729:12]
[@1400,36641:36641='.',<DOT>,729:14]
[@1401,36642:36647='SCName',<UPPER_ID>,729:15]
[@1402,36648:36648=' ',<WS>,channel=2,729:21]
[@1403,36649:36649='=',<EQUAL>,729:22]
[@1404,36650:36650=' ',<WS>,channel=2,729:23]
[@1405,36651:36656='Social',<UPPER_ID>,729:24]
[@1406,36657:36667='\n          ',<WS>,channel=2,729:30]
[@1407,36668:36677='attributes',<'attributes'>,730:10]
[@1408,36678:36690='\n            ',<WS>,channel=2,730:20]
[@1409,36691:36696='SCName',<UPPER_ID>,731:12]
[@1410,36697:36697=' ',<WS>,channel=2,731:18]
[@1411,36698:36699='->',<RARROW>,731:19]
[@1412,36700:36700=' ',<WS>,channel=2,731:21]
[@1413,36701:36702='sc',<LOWER_ID>,731:22]
[@1414,36703:36703='.',<DOT>,731:24]
[@1415,36704:36709='SCName',<UPPER_ID>,731:25]
[@1416,36710:36716='\n      ',<WS>,channel=2,731:31]
[@1417,36717:36717='}',<RBRACE>,732:6]
[@1418,36718:36721='\n   ',<WS>,channel=2,732:7]
[@1419,36722:36727='entity',<'entity'>,733:3]
[@1420,36728:36730='   ',<WS>,channel=2,733:9]
[@1421,36731:36735='Skill',<UPPER_ID>,733:12]
[@1422,36736:36736=' ',<WS>,channel=2,733:17]
[@1423,36737:36738='->',<RARROW>,733:18]
[@1424,36739:36739=' ',<WS>,channel=2,733:20]
[@1425,36740:36740='{',<LBRACE>,733:21]
[@1426,36741:36751='\n          ',<WS>,channel=2,733:22]
[@1427,36752:36755='from',<'from'>,734:10]
[@1428,36756:36768='\n            ',<WS>,channel=2,734:14]
[@1429,36769:36769='s',<LOWER_ID>,735:12]
[@1430,36770:36770=':',<COLON>,735:13]
[@1431,36771:36771=' ',<WS>,channel=2,735:14]
[@1432,36772:36776='Skill',<UPPER_ID>,735:15]
[@1433,36777:36787='\n          ',<WS>,channel=2,735:20]
[@1434,36788:36792='where',<'where'>,736:10]
[@1435,36793:36805='\n            ',<WS>,channel=2,736:15]
[@1436,36806:36806='s',<LOWER_ID>,737:12]
[@1437,36807:36807='.',<DOT>,737:13]
[@1438,36808:36818='fk_HasClass',<LOWER_ID>,737:14]
[@1439,36819:36819='.',<DOT>,737:25]
[@1440,36820:36825='SCName',<UPPER_ID>,737:26]
[@1441,36826:36826=' ',<WS>,channel=2,737:32]
[@1442,36827:36827='=',<EQUAL>,737:33]
[@1443,36828:36828=' ',<WS>,channel=2,737:34]
[@1444,36829:36834='Social',<UPPER_ID>,737:35]
[@1445,36835:36845='\n          ',<WS>,channel=2,737:41]
[@1446,36846:36855='attributes',<'attributes'>,738:10]
[@1447,36856:36868='\n            ',<WS>,channel=2,738:20]
[@1448,36869:36873='SName',<UPPER_ID>,739:12]
[@1449,36874:36874=' ',<WS>,channel=2,739:17]
[@1450,36875:36876='->',<RARROW>,739:18]
[@1451,36877:36877=' ',<WS>,channel=2,739:20]
[@1452,36878:36878='s',<LOWER_ID>,739:21]
[@1453,36879:36879='.',<DOT>,739:22]
[@1454,36880:36884='SName',<UPPER_ID>,739:23]
[@1455,36885:36897='\n            ',<WS>,channel=2,739:28]
[@1456,36898:36908='SCNameOnSkl',<UPPER_ID>,740:12]
[@1457,36909:36909=' ',<WS>,channel=2,740:23]
[@1458,36910:36911='->',<RARROW>,740:24]
[@1459,36912:36912=' ',<WS>,channel=2,740:26]
[@1460,36913:36913='s',<LOWER_ID>,740:27]
[@1461,36914:36914='.',<DOT>,740:28]
[@1462,36915:36925='SCNameOnSkl',<UPPER_ID>,740:29]
[@1463,36926:36936='\n          ',<WS>,channel=2,740:40]
[@1464,36937:36948='foreign_keys',<'foreign_keys'>,741:10]
[@1465,36949:36955='\n      ',<WS>,channel=2,741:22]
[@1466,36956:36991='// fk_HasClass : Skill -> SkillClass',<LINE_COMMENT>,channel=2,742:6]
[@1467,36992:36998='\n      ',<WS>,channel=2,742:42]
[@1468,36999:37009='fk_HasClass',<LOWER_ID>,743:6]
[@1469,37010:37010=' ',<WS>,channel=2,743:17]
[@1470,37011:37012='->',<RARROW>,743:18]
[@1471,37013:37013=' ',<WS>,channel=2,743:20]
[@1472,37014:37014='{',<LBRACE>,743:21]
[@1473,37015:37016='sc',<LOWER_ID>,743:22]
[@1474,37017:37017=' ',<WS>,channel=2,743:24]
[@1475,37018:37019='->',<RARROW>,743:25]
[@1476,37020:37020=' ',<WS>,channel=2,743:27]
[@1477,37021:37021='s',<LOWER_ID>,743:28]
[@1478,37022:37022='.',<DOT>,743:29]
[@1479,37023:37033='fk_HasClass',<LOWER_ID>,743:30]
[@1480,37034:37034='}',<RBRACE>,743:41]
[@1481,37035:37041='\n      ',<WS>,channel=2,743:42]
[@1482,37042:37042='}',<RBRACE>,744:6]
[@1483,37043:37047='\n   \n',<WS>,channel=2,744:7]
[@1484,37048:37048='}',<RBRACE>,746:0]
[@1485,37049:37049='\n',<WS>,channel=2,746:1]
[@1486,37050:37057='instance',<'instance'>,747:0]
[@1487,37058:37058=' ',<WS>,channel=2,747:8]
[@1488,37059:37065='iSclSkl',<LOWER_ID>,747:9]
[@1489,37066:37066=' ',<WS>,channel=2,747:16]
[@1490,37067:37067='=',<EQUAL>,747:17]
[@1491,37068:37068=' ',<WS>,channel=2,747:18]
[@1492,37069:37072='eval',<'eval'>,747:19]
[@1493,37073:37073=' ',<WS>,channel=2,747:23]
[@1494,37074:37077='qScl',<LOWER_ID>,747:24]
[@1495,37078:37078=' ',<WS>,channel=2,747:28]
[@1496,37079:37089='iSklSklCls1',<LOWER_ID>,747:29]
[@1497,37090:37092='\n\n\n',<WS>,channel=2,747:40]
[@1498,37093:37100='md { (* ',<MARKDOWN>,750:0]
[@1499,37101:38238='"\n---\n\n## SCHEMA COLIMIT\n\nNext we introduce an AQL feature that allows us to assemble multiple source schemas into a single\ntarget schema. This construction is called a schema colimit by virtue of its mathematical origins\nin category theory. Generally colimits are a class of universal constructions that take a diagram\nof objects connected by arrows and assemble those objects in a way consistent with the diagram.\nWe have already seen an example of a colimit in the instance coproduct. Now we apply AQL's\nimplementation of that same universal construction to the category of schemas. When applied to\nschemas the coproduct results in a construction analogous to what is sometimes called \"landing\"\ntables from multiple source schemas into a single schema where data transforms can be \nconveniently developed.\n\nIn this particular case we \"land\" the three schemas `sT`, `sS`, `sSnT` using the single structure\n`S_T_SnT_SumAuto` whose kind is `schema_colimit`. We will develop the connection of a schema \ncoproduct with a instance coproduct in a moment, but for now examine the automatically generated \ncoproduct in the runtime viewer.\n"',<MD_MULTI_STRING>,750:8]
[@1500,38239:38243=' *) }',<MD_END>,769:1]
[@1501,38244:38244='\n',<WS>,channel=2,769:6]
[@1502,38245:38258='schema_colimit',<'schema_colimit'>,770:0]
[@1503,38259:38259=' ',<WS>,channel=2,770:14]
[@1504,38260:38274='S_T_SnT_SumAuto',<UPPER_ID>,770:15]
[@1505,38275:38275=' ',<WS>,channel=2,770:30]
[@1506,38276:38276='=',<EQUAL>,770:31]
[@1507,38277:38277=' ',<WS>,channel=2,770:32]
[@1508,38278:38286='coproduct',<'coproduct'>,770:33]
[@1509,38287:38287=' ',<WS>,channel=2,770:42]
[@1510,38288:38289='sT',<LOWER_ID>,770:43]
[@1511,38290:38290=' ',<WS>,channel=2,770:45]
[@1512,38291:38291='+',<PLUS>,770:46]
[@1513,38292:38292=' ',<WS>,channel=2,770:47]
[@1514,38293:38294='sS',<LOWER_ID>,770:48]
[@1515,38295:38295=' ',<WS>,channel=2,770:50]
[@1516,38296:38296='+',<PLUS>,770:51]
[@1517,38297:38297=' ',<WS>,channel=2,770:52]
[@1518,38298:38301='sSnT',<LOWER_ID>,770:53]
[@1519,38302:38302=' ',<WS>,channel=2,770:57]
[@1520,38303:38303=':',<COLON>,770:58]
[@1521,38304:38304=' ',<WS>,channel=2,770:59]
[@1522,38305:38312='TypeSide',<UPPER_ID>,770:60]
[@1523,38313:38313='\n',<WS>,channel=2,770:68]
[@1524,38314:38384='//schema_colimit S_T_SnT_SumAuto = quotient sT + sS + sSnT: TypeSide {}',<LINE_COMMENT>,channel=2,771:0]
[@1525,38385:38386='\n\n',<WS>,channel=2,771:71]
[@1526,38387:38394='md { (* ',<MARKDOWN>,773:0]
[@1527,38395:38859='"\nThe automatically generated schema colimit prefixes each object within the target schema with the\nlabel associated with the source schema from which that object originated. With the modify\ncommand we have the option of providing whatever names we choose independent of the names\nassociated with the source schemas from which they originated. In this case we designate each\nentity with the prefix `l` to indicate that it was landed using the coproduct operation.\n"',<MD_MULTI_STRING>,773:8]
[@1528,38860:38864=' *) }',<MD_END>,779:1]
[@1529,38865:38865='\n',<WS>,channel=2,779:6]
[@1530,38866:38879='schema_colimit',<'schema_colimit'>,780:0]
[@1531,38880:38880=' ',<WS>,channel=2,780:14]
[@1532,38881:38891='S_T_SnT_Sum',<UPPER_ID>,780:15]
[@1533,38892:38892=' ',<WS>,channel=2,780:26]
[@1534,38893:38893='=',<EQUAL>,780:27]
[@1535,38894:38894=' ',<WS>,channel=2,780:28]
[@1536,38895:38900='modify',<'modify'>,780:29]
[@1537,38901:38901=' ',<WS>,channel=2,780:35]
[@1538,38902:38916='S_T_SnT_SumAuto',<UPPER_ID>,780:36]
[@1539,38917:38917=' ',<WS>,channel=2,780:51]
[@1540,38918:38918='{',<LBRACE>,780:52]
[@1541,38919:38923='\n    ',<WS>,channel=2,780:53]
[@1542,38924:38929='rename',<'rename'>,781:4]
[@1543,38930:38930=' ',<WS>,channel=2,781:10]
[@1544,38931:38938='entities',<'entities'>,781:11]
[@1545,38939:38947='\n        ',<WS>,channel=2,781:19]
[@1546,38948:38955='sS_Skill',<LOWER_ID>,782:8]
[@1547,38956:38956=' ',<WS>,channel=2,782:16]
[@1548,38957:38958='->',<RARROW>,782:17]
[@1549,38959:38959=' ',<WS>,channel=2,782:19]
[@1550,38960:38965='lSkill',<LOWER_ID>,782:20]
[@1551,38966:38974='\n        ',<WS>,channel=2,782:26]
[@1552,38975:38987='sS_SkillClass',<LOWER_ID>,783:8]
[@1553,38988:38988=' ',<WS>,channel=2,783:21]
[@1554,38989:38990='->',<RARROW>,783:22]
[@1555,38991:38991=' ',<WS>,channel=2,783:24]
[@1556,38992:39002='lSkillClass',<LOWER_ID>,783:25]
[@1557,39003:39011='\n        ',<WS>,channel=2,783:36]
[@1558,39012:39018='sT_Task',<LOWER_ID>,784:8]
[@1559,39019:39019=' ',<WS>,channel=2,784:15]
[@1560,39020:39021='->',<RARROW>,784:16]
[@1561,39022:39022=' ',<WS>,channel=2,784:18]
[@1562,39023:39027='lTask',<LOWER_ID>,784:19]
[@1563,39028:39036='\n        ',<WS>,channel=2,784:24]
[@1564,39037:39059='sSnT_SkillNeededForTask',<LOWER_ID>,785:8]
[@1565,39060:39060=' ',<WS>,channel=2,785:31]
[@1566,39061:39062='->',<RARROW>,785:32]
[@1567,39063:39063=' ',<WS>,channel=2,785:34]
[@1568,39064:39082='lSkillNeededForTask',<LOWER_ID>,785:35]
[@1569,39083:39087='\n    ',<WS>,channel=2,785:54]
[@1570,39088:39093='rename',<'rename'>,786:4]
[@1571,39094:39094=' ',<WS>,channel=2,786:10]
[@1572,39095:39106='foreign_keys',<'foreign_keys'>,786:11]
[@1573,39107:39115='\n        ',<WS>,channel=2,786:23]
[@1574,39116:39121='lSkill',<LOWER_ID>,787:8]
[@1575,39122:39122='.',<DOT>,787:14]
[@1576,39123:39142='sS_Skill_fk_HasClass',<LOWER_ID>,787:15]
[@1577,39143:39143=' ',<WS>,channel=2,787:35]
[@1578,39144:39145='->',<RARROW>,787:36]
[@1579,39146:39146=' ',<WS>,channel=2,787:38]
[@1580,39147:39158='lfk_HasClass',<LOWER_ID>,787:39]
[@1581,39159:39163='\n    ',<WS>,channel=2,787:51]
[@1582,39164:39169='rename',<'rename'>,788:4]
[@1583,39170:39170=' ',<WS>,channel=2,788:10]
[@1584,39171:39180='attributes',<'attributes'>,788:11]
[@1585,39181:39189='\n        ',<WS>,channel=2,788:21]
[@1586,39190:39195='lSkill',<LOWER_ID>,789:8]
[@1587,39196:39196='.',<DOT>,789:14]
[@1588,39197:39210='sS_Skill_SName',<LOWER_ID>,789:15]
[@1589,39211:39211=' ',<WS>,channel=2,789:29]
[@1590,39212:39213='->',<RARROW>,789:30]
[@1591,39214:39214=' ',<WS>,channel=2,789:32]
[@1592,39215:39220='lSName',<LOWER_ID>,789:33]
[@1593,39221:39229='\n        ',<WS>,channel=2,789:39]
[@1594,39230:39235='lSkill',<LOWER_ID>,790:8]
[@1595,39236:39236='.',<DOT>,790:14]
[@1596,39237:39256='sS_Skill_SCNameOnSkl',<LOWER_ID>,790:15]
[@1597,39257:39257=' ',<WS>,channel=2,790:35]
[@1598,39258:39259='->',<RARROW>,790:36]
[@1599,39260:39260=' ',<WS>,channel=2,790:38]
[@1600,39261:39272='lSCNameOnSkl',<LOWER_ID>,790:39]
[@1601,39273:39281='\n        ',<WS>,channel=2,790:51]
[@1602,39282:39292='lSkillClass',<LOWER_ID>,791:8]
[@1603,39293:39293='.',<DOT>,791:19]
[@1604,39294:39313='sS_SkillClass_SCName',<LOWER_ID>,791:20]
[@1605,39314:39314=' ',<WS>,channel=2,791:40]
[@1606,39315:39316='->',<RARROW>,791:41]
[@1607,39317:39317=' ',<WS>,channel=2,791:43]
[@1608,39318:39324='lSCName',<LOWER_ID>,791:44]
[@1609,39325:39333='\n        ',<WS>,channel=2,791:51]
[@1610,39334:39338='lTask',<LOWER_ID>,792:8]
[@1611,39339:39339='.',<DOT>,792:13]
[@1612,39340:39352='sT_Task_TName',<LOWER_ID>,792:14]
[@1613,39353:39353=' ',<WS>,channel=2,792:27]
[@1614,39354:39355='->',<RARROW>,792:28]
[@1615,39356:39356=' ',<WS>,channel=2,792:30]
[@1616,39357:39362='lTName',<LOWER_ID>,792:31]
[@1617,39363:39371='\n        ',<WS>,channel=2,792:37]
[@1618,39372:39390='lSkillNeededForTask',<LOWER_ID>,793:8]
[@1619,39391:39391='.',<DOT>,793:27]
[@1620,39392:39420='sSnT_SkillNeededForTask_skill',<LOWER_ID>,793:28]
[@1621,39421:39421=' ',<WS>,channel=2,793:57]
[@1622,39422:39423='->',<RARROW>,793:58]
[@1623,39424:39424=' ',<WS>,channel=2,793:60]
[@1624,39425:39430='lskill',<LOWER_ID>,793:61]
[@1625,39431:39439='\n        ',<WS>,channel=2,793:67]
[@1626,39440:39458='lSkillNeededForTask',<LOWER_ID>,794:8]
[@1627,39459:39459='.',<DOT>,794:27]
[@1628,39460:39487='sSnT_SkillNeededForTask_task',<LOWER_ID>,794:28]
[@1629,39488:39488=' ',<WS>,channel=2,794:56]
[@1630,39489:39490='->',<RARROW>,794:57]
[@1631,39491:39491=' ',<WS>,channel=2,794:59]
[@1632,39492:39496='ltask',<LOWER_ID>,794:60]
[@1633,39497:39497='\n',<WS>,channel=2,794:65]
[@1634,39498:39498='}',<RBRACE>,795:0]
[@1635,39499:39500='\n\n',<WS>,channel=2,795:1]
[@1636,39501:39508='md { (* ',<MARKDOWN>,797:0]
[@1637,39509:40755='"\n**Schema Colimit Diagram**\n\nRecalling our earlier description of the instance coproduct which was a cospan of instances, a \nschema coproduct is a cospan of schemas and as such includes a schema and a pair of structure\npreserving maps of schemas.\n\nWith the sequence of constructions below we reveal the inner structure of the particular schema\ncolimit we have created. In this case there are three source objects and three associated arrows\nrather than two as was the case with the instance coproduct. We would call this a wide cospan which\nextends the concept of a span to include any number of source objects. Specifically, for this\nschema colimit we have a target schema and a schema mapping which lands (injects) each source schema\ninto that landing (target) schema. This means that a schema colimit can be thought of as a diagram\nof schemas and schema mappings. In this particular case, using the labels assigned below, we have\nthe following diagram:\n\n                     mSToS_T_SnT_Sum        mTToS_T_Snt_Sum\n                     sS --------> sS_T_Snt_Sum <-------- sT\n                                       /\\\n                     mSnTToS_T_SnT_Sum |\n                                       |\n                                     sSnT\n\n"',<MD_MULTI_STRING>,797:8]
[@1638,40756:40760=' *) }',<MD_END>,820:1]
[@1639,40761:40761='\n',<WS>,channel=2,820:6]
[@1640,40762:40767='schema',<'schema'>,821:0]
[@1641,40768:40768=' ',<WS>,channel=2,821:6]
[@1642,40769:40780='sS_T_SnT_Sum',<LOWER_ID>,821:7]
[@1643,40781:40781=' ',<WS>,channel=2,821:19]
[@1644,40782:40782='=',<EQUAL>,821:20]
[@1645,40783:40783=' ',<WS>,channel=2,821:21]
[@1646,40784:40792='getSchema',<'getSchema'>,821:22]
[@1647,40793:40793=' ',<WS>,channel=2,821:31]
[@1648,40794:40804='S_T_SnT_Sum',<UPPER_ID>,821:32]
[@1649,40805:40805='\n',<WS>,channel=2,821:43]
[@1650,40806:40812='mapping',<'mapping'>,822:0]
[@1651,40813:40813=' ',<WS>,channel=2,822:7]
[@1652,40814:40828='mSToS_T_SnT_Sum',<LOWER_ID>,822:8]
[@1653,40829:40829=' ',<WS>,channel=2,822:23]
[@1654,40830:40830='=',<EQUAL>,822:24]
[@1655,40831:40831=' ',<WS>,channel=2,822:25]
[@1656,40832:40841='getMapping',<'getMapping'>,822:26]
[@1657,40842:40842=' ',<WS>,channel=2,822:36]
[@1658,40843:40853='S_T_SnT_Sum',<UPPER_ID>,822:37]
[@1659,40854:40854=' ',<WS>,channel=2,822:48]
[@1660,40855:40856='sS',<LOWER_ID>,822:49]
[@1661,40857:40857='\n',<WS>,channel=2,822:51]
[@1662,40858:40864='mapping',<'mapping'>,823:0]
[@1663,40865:40865=' ',<WS>,channel=2,823:7]
[@1664,40866:40880='mTToS_T_Snt_Sum',<LOWER_ID>,823:8]
[@1665,40881:40881=' ',<WS>,channel=2,823:23]
[@1666,40882:40882='=',<EQUAL>,823:24]
[@1667,40883:40883=' ',<WS>,channel=2,823:25]
[@1668,40884:40893='getMapping',<'getMapping'>,823:26]
[@1669,40894:40894=' ',<WS>,channel=2,823:36]
[@1670,40895:40905='S_T_SnT_Sum',<UPPER_ID>,823:37]
[@1671,40906:40906=' ',<WS>,channel=2,823:48]
[@1672,40907:40908='sT',<LOWER_ID>,823:49]
[@1673,40909:40909='\n',<WS>,channel=2,823:51]
[@1674,40910:40916='mapping',<'mapping'>,824:0]
[@1675,40917:40917=' ',<WS>,channel=2,824:7]
[@1676,40918:40934='mSnTToS_T_SnT_Sum',<LOWER_ID>,824:8]
[@1677,40935:40935=' ',<WS>,channel=2,824:25]
[@1678,40936:40936='=',<EQUAL>,824:26]
[@1679,40937:40937=' ',<WS>,channel=2,824:27]
[@1680,40938:40947='getMapping',<'getMapping'>,824:28]
[@1681,40948:40948=' ',<WS>,channel=2,824:38]
[@1682,40949:40959='S_T_SnT_Sum',<UPPER_ID>,824:39]
[@1683,40960:40960=' ',<WS>,channel=2,824:50]
[@1684,40961:40964='sSnT',<LOWER_ID>,824:51]
[@1685,40965:40966='\n\n',<WS>,channel=2,824:55]
[@1686,40967:40974='md { (* ',<MARKDOWN>,826:0]
[@1687,40975:45315='"\n---\n\n## Migrating Data Between Schemas\n**Sigma --| Delta --| Pi**\n\nLet's recap where we are. We have a set of three source schemas `sS`, `sT`, and `sSnT`, each with an\ninstance; `iSklSklCls1`, `iTsk`, and `iSnT` respectively. We have a target schema `sS_T_SnT_Sum`. We\nalso have mappings that take each source schema to the target schema. What we want is a construction\nsimilar to eval that can be applied to a mapping rather than a query, but the schema colimit is\ngiving us mappings not queries.\n\nRecall that queries generalize mappings. It so happens there are three constructions that are \nrelated to eval in the same way mappings are related to queries. In fact eval and it's dual coeval,\nwhich we have not discussed, are generalizations of these constructions. To develop these ideas\nwould be a lengthy digression so we will only mention them in passing along with some informal\nremarks about their properties. \n\nThese three constructions are called sigma, pi and delta. They all can be understood as moving \ninstance data through mappings in a way that is analogous to how eval moves instances through \nqueries. This family of functors collectively define AQL's implementation of Extration, \nTransformation and Load abbreviated ETL processes. Sigma, pi and delta are all structure \npreserving maps between the category of instances of one schema to the category of instances of \nanother schema, so they are functors. This means that sigma, pi and delta map not only instances \nbut instance transforms. These three mappings are related as follows. Delta pulls data backward \nthrough a mapping and generalizes the notion of projection. Both Sigma and Pi push data forward \nthrough a mapping and generalize sums/unions and products/joins respectively. Given a single \nschema mapping, Delta can be paired with sigma on the left and pi on the right to create data \nmigration round trips.\n\nTo see this, consider schemas `sA`, `sB`, mapping `m` and instance `iA` of `sA`. Without yet\nspecifying specifics the AQL syntax would be:\n \n    mapping m = literal : sA -> sB {...} \n    instance iB = literal : sB {...}\n\nDelta can move the instance `iB` backward through `m` into `sA` as follows:\n \n    instance iDlt_m_iB = delta m iB\n \nSimilarly, sigma can move this new instance forward through the same `m` into `sB`:\n \n    instance iSgmDlt_m_iB = sigma m iDlt_m_iB\n \nA natural thing to ask is how `iSgmDlt_m_iB` and `iB` are related. The answer is they are related by\na transform known as the unit of the sigma --| delta adjoint pair. Notice we could also start\nwith an instance `iA` of `sA` and apply first sigma `m` and then delta `m` to product an instance \n`iDltSgm_m_iA`. `iA` and `iDltSgm_m_iA` are related by the counit of the sigma --| delta adjoint pair. \nIn a similar way delta --| pi form an adjoint pair with associated unit and counit transforms. \nWe say that delta is right adjoint to sigma and left adjoint to pi.\n\nOf the three, sigma has the property that generators of the source instance are preserved in the \ntarget instance. This means we can move instances and transforms between schemas in a way that \npermits us to merge instance data. Let's see how we can use sigma to solve the problem at hand\nand later we will return to broader questions about the nature of sigma, pi and delta and their\nassociated units and counits.\n\nRecall we have a target schema that contains all of the entities from our three source schemas\nwe can use the sigma construction to push the instances in the source schemas forward through the \nmappings generated by the `schema_colimit` construction to create an instance in the `sS_T_SnT_Sum`\nassembly. Having done so we would have three separate instances in the target schema \n`sS_T_SnT_Sum`. With all of these instances in the same schema we can make use of our familiar\ninstance coproduct construction. This would look like the following:\n\n    instance iSklSklCls_In_S_T_SnT_Sum = sigma mSToS_T_SnT_Sum iSklSklCls1\n    instance iTsk_In_S_T_SnT_Sum = sigma mSToT_T_SnT_Sum iTsk\n    instance iSnT_In_S_T_SnT_Sum = sigma mSnTToS_T_SnT_Sum iSnT\n    instance iS_T_SnT_Sum = coproduct\n        iSklSklCls_In_S_T_SnT_Sum\n        iTsk_In_S_T_SnT_Sum\n        iSnT_In_S_T_SnT_Sum\n        : sS_T_SnT_Sum\n    \nAQL provides the `coproduct_sigma` construction which performs the above sequence in one step:\n"',<MD_MULTI_STRING>,826:8]
[@1688,45316:45320=' *) }',<MD_END>,900:1]
[@1689,45321:45321='\n',<WS>,channel=2,900:6]
[@1690,45322:45329='instance',<'instance'>,901:0]
[@1691,45330:45330=' ',<WS>,channel=2,901:8]
[@1692,45331:45342='iS_T_SnT_Sum',<LOWER_ID>,901:9]
[@1693,45343:45343=' ',<WS>,channel=2,901:21]
[@1694,45344:45344='=',<EQUAL>,901:22]
[@1695,45345:45345=' ',<WS>,channel=2,901:23]
[@1696,45346:45360='coproduct_sigma',<'coproduct_sigma'>,901:24]
[@1697,45361:45364='\n   ',<WS>,channel=2,901:39]
[@1698,45365:45379='mSToS_T_SnT_Sum',<LOWER_ID>,902:3]
[@1699,45380:45380=' ',<WS>,channel=2,902:18]
[@1700,45381:45391='iSklSklCls1',<LOWER_ID>,902:19]
[@1701,45392:45395='\n   ',<WS>,channel=2,902:30]
[@1702,45396:45410='mTToS_T_Snt_Sum',<LOWER_ID>,903:3]
[@1703,45411:45411=' ',<WS>,channel=2,903:18]
[@1704,45412:45415='iTsk',<LOWER_ID>,903:19]
[@1705,45416:45419='\n   ',<WS>,channel=2,903:23]
[@1706,45420:45436='mSnTToS_T_SnT_Sum',<LOWER_ID>,904:3]
[@1707,45437:45437=' ',<WS>,channel=2,904:20]
[@1708,45438:45441='iSnT',<LOWER_ID>,904:21]
[@1709,45442:45445='\n   ',<WS>,channel=2,904:25]
[@1710,45446:45446=':',<COLON>,905:3]
[@1711,45447:45447=' ',<WS>,channel=2,905:4]
[@1712,45448:45459='sS_T_SnT_Sum',<LOWER_ID>,905:5]
[@1713,45460:45465='\n   \n\n',<WS>,channel=2,905:17]
[@1714,45466:45473='md { (* ',<MARKDOWN>,908:0]
[@1715,45474:46965='"\n---\n\n## AQL Queries Continued\n \nIn the current context we have as source schema the result of the colimit construction. If you\nrun this file and look at the colimit schema `sS_T_SnT_Sum` and associated instance you will\ndiscover the we have assembled a target schema where the entities of the source schemas \nare independent of one another. We now use the query construction to introduce foreign key \nconstraints in a way that is analogous to the addition of the foreign key constraints supported \nin RDBMSs.\n\nRecall that a non-simple AQL query requires we define the target schema first. This schema is\nidentical to the output of the colimit construction but with the addition of a pair of foreign\nkeys from the `SkillNdFrTask` entity with the (skill, task) attribute pair to the Skill and Task \nentities respectively. This produces a schema which is known in category theory as a span and it \ncan again be summarized as a diagram, but in contrast with the case of the colimit construction \nthis is a diagram of entities rather than schemas. We have enclosed the `Skill` and `SkillClass` \nentities with parentheses to indicate that they serve as a reference taxonomy.\n\n              fk_HasClass    fk_SnT_S             fk_SnT_T\n    (SkillClass <----- Skill) <----- SkillNdFrTask -----> Task\n    \nWe again make use of the `observation_equations` section to denormalize all of the attributes that \nare available through paths as attributes directly available to the `SkillNdFrTask` entity.\n"',<MD_MULTI_STRING>,908:8]
[@1716,46966:46970=' *) }',<MD_END>,933:1]
[@1717,46971:46971='\n',<WS>,channel=2,933:6]
[@1718,46972:46977='schema',<'schema'>,934:0]
[@1719,46978:46978=' ',<WS>,channel=2,934:6]
[@1720,46979:46984='sSTSpn',<LOWER_ID>,934:7]
[@1721,46985:46985=' ',<WS>,channel=2,934:13]
[@1722,46986:46986='=',<EQUAL>,934:14]
[@1723,46987:46987=' ',<WS>,channel=2,934:15]
[@1724,46988:46994='literal',<'literal'>,934:16]
[@1725,46995:46995=' ',<WS>,channel=2,934:23]
[@1726,46996:46996=':',<COLON>,934:24]
[@1727,46997:46997=' ',<WS>,channel=2,934:25]
[@1728,46998:47005='TypeSide',<UPPER_ID>,934:26]
[@1729,47006:47006=' ',<WS>,channel=2,934:34]
[@1730,47007:47007='{',<LBRACE>,934:35]
[@1731,47008:47012='\n    ',<WS>,channel=2,934:36]
[@1732,47013:47020='entities',<'entities'>,935:4]
[@1733,47021:47027='\n      ',<WS>,channel=2,935:12]
[@1734,47028:47032='Skill',<UPPER_ID>,936:6]
[@1735,47033:47033=' ',<WS>,channel=2,936:11]
[@1736,47034:47043='SkillClass',<UPPER_ID>,936:12]
[@1737,47044:47050='\n      ',<WS>,channel=2,936:22]
[@1738,47051:47054='Task',<UPPER_ID>,937:6]
[@1739,47055:47061='\n      ',<WS>,channel=2,937:10]
[@1740,47062:47074='SkillNdFrTask',<UPPER_ID>,938:6]
[@1741,47075:47079='\n    ',<WS>,channel=2,938:19]
[@1742,47080:47091='foreign_keys',<'foreign_keys'>,939:4]
[@1743,47092:47098='\n      ',<WS>,channel=2,939:16]
[@1744,47099:47109='fk_HasClass',<LOWER_ID>,940:6]
[@1745,47110:47113='    ',<WS>,channel=2,940:17]
[@1746,47114:47114=':',<COLON>,940:21]
[@1747,47115:47115=' ',<WS>,channel=2,940:22]
[@1748,47116:47120='Skill',<UPPER_ID>,940:23]
[@1749,47121:47121=' ',<WS>,channel=2,940:28]
[@1750,47122:47123='->',<RARROW>,940:29]
[@1751,47124:47124=' ',<WS>,channel=2,940:31]
[@1752,47125:47134='SkillClass',<UPPER_ID>,940:32]
[@1753,47135:47141='\n      ',<WS>,channel=2,940:42]
[@1754,47142:47155='fk_SkillNeeded',<LOWER_ID>,941:6]
[@1755,47156:47156=' ',<WS>,channel=2,941:20]
[@1756,47157:47157=':',<COLON>,941:21]
[@1757,47158:47158=' ',<WS>,channel=2,941:22]
[@1758,47159:47171='SkillNdFrTask',<UPPER_ID>,941:23]
[@1759,47172:47172=' ',<WS>,channel=2,941:36]
[@1760,47173:47174='->',<RARROW>,941:37]
[@1761,47175:47175=' ',<WS>,channel=2,941:39]
[@1762,47176:47180='Skill',<UPPER_ID>,941:40]
[@1763,47181:47187='\n      ',<WS>,channel=2,941:45]
[@1764,47188:47197='fk_ForTask',<LOWER_ID>,942:6]
[@1765,47198:47202='     ',<WS>,channel=2,942:16]
[@1766,47203:47203=':',<COLON>,942:21]
[@1767,47204:47204=' ',<WS>,channel=2,942:22]
[@1768,47205:47217='SkillNdFrTask',<UPPER_ID>,942:23]
[@1769,47218:47218=' ',<WS>,channel=2,942:36]
[@1770,47219:47220='->',<RARROW>,942:37]
[@1771,47221:47221=' ',<WS>,channel=2,942:39]
[@1772,47222:47225='Task',<UPPER_ID>,942:40]
[@1773,47226:47230='\n    ',<WS>,channel=2,942:44]
[@1774,47231:47240='attributes',<'attributes'>,943:4]
[@1775,47241:47247='\n      ',<WS>,channel=2,943:14]
[@1776,47248:47252='SName',<UPPER_ID>,944:6]
[@1777,47253:47261='         ',<WS>,channel=2,944:11]
[@1778,47262:47262=':',<COLON>,944:20]
[@1779,47263:47263=' ',<WS>,channel=2,944:21]
[@1780,47264:47268='Skill',<UPPER_ID>,944:22]
[@1781,47269:47269=' ',<WS>,channel=2,944:27]
[@1782,47270:47271='->',<RARROW>,944:28]
[@1783,47272:47272=' ',<WS>,channel=2,944:30]
[@1784,47273:47279='Varchar',<UPPER_ID>,944:31]
[@1785,47280:47286='\n      ',<WS>,channel=2,944:38]
[@1786,47287:47297='SCNameOnSkl',<UPPER_ID>,945:6]
[@1787,47298:47300='   ',<WS>,channel=2,945:17]
[@1788,47301:47301=':',<COLON>,945:20]
[@1789,47302:47302=' ',<WS>,channel=2,945:21]
[@1790,47303:47307='Skill',<UPPER_ID>,945:22]
[@1791,47308:47308=' ',<WS>,channel=2,945:27]
[@1792,47309:47310='->',<RARROW>,945:28]
[@1793,47311:47311=' ',<WS>,channel=2,945:30]
[@1794,47312:47318='Varchar',<UPPER_ID>,945:31]
[@1795,47319:47325='\n      ',<WS>,channel=2,945:38]
[@1796,47326:47331='SCName',<UPPER_ID>,946:6]
[@1797,47332:47339='        ',<WS>,channel=2,946:12]
[@1798,47340:47340=':',<COLON>,946:20]
[@1799,47341:47341=' ',<WS>,channel=2,946:21]
[@1800,47342:47351='SkillClass',<UPPER_ID>,946:22]
[@1801,47352:47352=' ',<WS>,channel=2,946:32]
[@1802,47353:47354='->',<RARROW>,946:33]
[@1803,47355:47355=' ',<WS>,channel=2,946:35]
[@1804,47356:47362='Varchar',<UPPER_ID>,946:36]
[@1805,47363:47369='\n      ',<WS>,channel=2,946:43]
[@1806,47370:47374='TName',<UPPER_ID>,947:6]
[@1807,47375:47383='         ',<WS>,channel=2,947:11]
[@1808,47384:47384=':',<COLON>,947:20]
[@1809,47385:47385=' ',<WS>,channel=2,947:21]
[@1810,47386:47389='Task',<UPPER_ID>,947:22]
[@1811,47390:47390=' ',<WS>,channel=2,947:26]
[@1812,47391:47392='->',<RARROW>,947:27]
[@1813,47393:47393=' ',<WS>,channel=2,947:29]
[@1814,47394:47400='Varchar',<UPPER_ID>,947:30]
[@1815,47401:47407='\n      ',<WS>,channel=2,947:37]
[@1816,47408:47412='skill',<LOWER_ID>,948:6]
[@1817,47413:47421='         ',<WS>,channel=2,948:11]
[@1818,47422:47422=':',<COLON>,948:20]
[@1819,47423:47423=' ',<WS>,channel=2,948:21]
[@1820,47424:47436='SkillNdFrTask',<UPPER_ID>,948:22]
[@1821,47437:47437=' ',<WS>,channel=2,948:35]
[@1822,47438:47439='->',<RARROW>,948:36]
[@1823,47440:47440=' ',<WS>,channel=2,948:38]
[@1824,47441:47447='Varchar',<UPPER_ID>,948:39]
[@1825,47448:47454='\n      ',<WS>,channel=2,948:46]
[@1826,47455:47464='skillclass',<LOWER_ID>,949:6]
[@1827,47465:47468='    ',<WS>,channel=2,949:16]
[@1828,47469:47469=':',<COLON>,949:20]
[@1829,47470:47470=' ',<WS>,channel=2,949:21]
[@1830,47471:47483='SkillNdFrTask',<UPPER_ID>,949:22]
[@1831,47484:47484=' ',<WS>,channel=2,949:35]
[@1832,47485:47486='->',<RARROW>,949:36]
[@1833,47487:47487=' ',<WS>,channel=2,949:38]
[@1834,47488:47494='Varchar',<UPPER_ID>,949:39]
[@1835,47495:47501='\n      ',<WS>,channel=2,949:46]
[@1836,47502:47505='task',<LOWER_ID>,950:6]
[@1837,47506:47515='          ',<WS>,channel=2,950:10]
[@1838,47516:47516=':',<COLON>,950:20]
[@1839,47517:47517=' ',<WS>,channel=2,950:21]
[@1840,47518:47530='SkillNdFrTask',<UPPER_ID>,950:22]
[@1841,47531:47531=' ',<WS>,channel=2,950:35]
[@1842,47532:47533='->',<RARROW>,950:36]
[@1843,47534:47534=' ',<WS>,channel=2,950:38]
[@1844,47535:47541='Varchar',<UPPER_ID>,950:39]
[@1845,47542:47546='\n    ',<WS>,channel=2,950:46]
[@1846,47547:47567='observation_equations',<'observation_equations'>,951:4]
[@1847,47568:47574='\n      ',<WS>,channel=2,951:25]
[@1848,47575:47585='SCNameOnSkl',<UPPER_ID>,952:6]
[@1849,47586:47586=' ',<WS>,channel=2,952:17]
[@1850,47587:47587='=',<EQUAL>,952:18]
[@1851,47588:47588=' ',<WS>,channel=2,952:19]
[@1852,47589:47599='fk_HasClass',<LOWER_ID>,952:20]
[@1853,47600:47600='.',<DOT>,952:31]
[@1854,47601:47606='SCName',<UPPER_ID>,952:32]
[@1855,47607:47613='\n      ',<WS>,channel=2,952:38]
[@1856,47614:47618='skill',<LOWER_ID>,953:6]
[@1857,47619:47619=' ',<WS>,channel=2,953:11]
[@1858,47620:47620='=',<EQUAL>,953:12]
[@1859,47621:47621=' ',<WS>,channel=2,953:13]
[@1860,47622:47635='fk_SkillNeeded',<LOWER_ID>,953:14]
[@1861,47636:47636='.',<DOT>,953:28]
[@1862,47637:47641='SName',<UPPER_ID>,953:29]
[@1863,47642:47648='\n      ',<WS>,channel=2,953:34]
[@1864,47649:47658='skillclass',<LOWER_ID>,954:6]
[@1865,47659:47659=' ',<WS>,channel=2,954:16]
[@1866,47660:47660='=',<EQUAL>,954:17]
[@1867,47661:47661=' ',<WS>,channel=2,954:18]
[@1868,47662:47675='fk_SkillNeeded',<LOWER_ID>,954:19]
[@1869,47676:47676='.',<DOT>,954:33]
[@1870,47677:47687='fk_HasClass',<LOWER_ID>,954:34]
[@1871,47688:47688='.',<DOT>,954:45]
[@1872,47689:47694='SCName',<UPPER_ID>,954:46]
[@1873,47695:47701='\n      ',<WS>,channel=2,954:52]
[@1874,47702:47705='task',<LOWER_ID>,955:6]
[@1875,47706:47706=' ',<WS>,channel=2,955:10]
[@1876,47707:47707='=',<EQUAL>,955:11]
[@1877,47708:47708=' ',<WS>,channel=2,955:12]
[@1878,47709:47718='fk_ForTask',<LOWER_ID>,955:13]
[@1879,47719:47719='.',<DOT>,955:23]
[@1880,47720:47724='TName',<UPPER_ID>,955:24]
[@1881,47725:47725='\n',<WS>,channel=2,955:29]
[@1882,47726:47726='}',<RBRACE>,956:0]
[@1883,47727:47728='\n\n',<WS>,channel=2,956:1]
[@1884,47729:47736='md { (* ',<MARKDOWN>,958:0]
[@1885,47737:48776='"\nGiven the similarity of the source and target schemas the entity sub-sections are all direct\nmappings that reproduce exact copies of the source entities instances with those of the target\nentities with the exception of the `SkllNdFrTask` target entity. In order to construct that entity \nwe must have generators on both sides of the new foreign keys we are introducing. By default when\nmultiple source generator variables are provided for a target entity each generator for the \ntarget comes from the Cartesian product of the source generators. The where clause has two\nequations implicitly connected by a logical and. This effectively constrains the target entities\nto an equationally defined subset of a Cartesian product, also known as a join, so this \nconstruction effectively joins the three source entities and makes all of their generators\navailable for the creation of the new foreign keys. The foreign keys can now be assigned the\nvalues for the `Skill` and `Task` generators based on the values in the `SkillNdFrTask` section.\n"',<MD_MULTI_STRING>,958:8]
[@1886,48777:48781=' *) }',<MD_END>,970:1]
[@1887,48782:48782='\n',<WS>,channel=2,970:6]
[@1888,48783:48787='query',<'query'>,971:0]
[@1889,48788:48788=' ',<WS>,channel=2,971:5]
[@1890,48789:48807='qS_T_SnT_SumToSTSpn',<LOWER_ID>,971:6]
[@1891,48808:48808=' ',<WS>,channel=2,971:25]
[@1892,48809:48809='=',<EQUAL>,971:26]
[@1893,48810:48810=' ',<WS>,channel=2,971:27]
[@1894,48811:48817='literal',<'literal'>,971:28]
[@1895,48818:48818=' ',<WS>,channel=2,971:35]
[@1896,48819:48819=':',<COLON>,971:36]
[@1897,48820:48820=' ',<WS>,channel=2,971:37]
[@1898,48821:48832='sS_T_SnT_Sum',<LOWER_ID>,971:38]
[@1899,48833:48833=' ',<WS>,channel=2,971:50]
[@1900,48834:48835='->',<RARROW>,971:51]
[@1901,48836:48836=' ',<WS>,channel=2,971:53]
[@1902,48837:48842='sSTSpn',<LOWER_ID>,971:54]
[@1903,48843:48843=' ',<WS>,channel=2,971:60]
[@1904,48844:48844='{',<LBRACE>,971:61]
[@1905,48845:48849='\n    ',<WS>,channel=2,971:62]
[@1906,48850:48855='entity',<'entity'>,972:4]
[@1907,48856:48864='\n        ',<WS>,channel=2,972:10]
[@1908,48865:48869='Skill',<UPPER_ID>,973:8]
[@1909,48870:48870=' ',<WS>,channel=2,973:13]
[@1910,48871:48872='->',<RARROW>,973:14]
[@1911,48873:48873=' ',<WS>,channel=2,973:16]
[@1912,48874:48874='{',<LBRACE>,973:17]
[@1913,48875:48887='\n            ',<WS>,channel=2,973:18]
[@1914,48888:48891='from',<'from'>,974:12]
[@1915,48892:48908='\n                ',<WS>,channel=2,974:16]
[@1916,48909:48910='ss',<LOWER_ID>,975:16]
[@1917,48911:48911=' ',<WS>,channel=2,975:18]
[@1918,48912:48912=':',<COLON>,975:19]
[@1919,48913:48913=' ',<WS>,channel=2,975:20]
[@1920,48914:48919='lSkill',<LOWER_ID>,975:21]
[@1921,48920:48932='\n            ',<WS>,channel=2,975:27]
[@1922,48933:48942='attributes',<'attributes'>,976:12]
[@1923,48943:48959='\n                ',<WS>,channel=2,976:22]
[@1924,48960:48964='SName',<UPPER_ID>,977:16]
[@1925,48965:48965=' ',<WS>,channel=2,977:21]
[@1926,48966:48967='->',<RARROW>,977:22]
[@1927,48968:48968=' ',<WS>,channel=2,977:24]
[@1928,48969:48970='ss',<LOWER_ID>,977:25]
[@1929,48971:48971='.',<DOT>,977:27]
[@1930,48972:48977='lSName',<LOWER_ID>,977:28]
[@1931,48978:48994='\n                ',<WS>,channel=2,977:34]
[@1932,48995:49005='SCNameOnSkl',<UPPER_ID>,978:16]
[@1933,49006:49006=' ',<WS>,channel=2,978:27]
[@1934,49007:49008='->',<RARROW>,978:28]
[@1935,49009:49009=' ',<WS>,channel=2,978:30]
[@1936,49010:49011='ss',<LOWER_ID>,978:31]
[@1937,49012:49012='.',<DOT>,978:33]
[@1938,49013:49024='lSCNameOnSkl',<LOWER_ID>,978:34]
[@1939,49025:49040='\n               ',<WS>,channel=2,978:46]
[@1940,49041:49052='foreign_keys',<'foreign_keys'>,979:15]
[@1941,49053:49076=' \n                      ',<WS>,channel=2,979:27]
[@1942,49077:49112='// fk_HasClass : Skill -> SkillClass',<LINE_COMMENT>,channel=2,980:22]
[@1943,49113:49121='\n        ',<WS>,channel=2,980:58]
[@1944,49122:49132='fk_HasClass',<LOWER_ID>,981:8]
[@1945,49133:49136='    ',<WS>,channel=2,981:19]
[@1946,49137:49138='->',<RARROW>,981:23]
[@1947,49139:49139=' ',<WS>,channel=2,981:25]
[@1948,49140:49140='{',<LBRACE>,981:26]
[@1949,49141:49144='scsc',<LOWER_ID>,981:27]
[@1950,49145:49145=' ',<WS>,channel=2,981:31]
[@1951,49146:49147='->',<RARROW>,981:32]
[@1952,49148:49148=' ',<WS>,channel=2,981:34]
[@1953,49149:49150='ss',<LOWER_ID>,981:35]
[@1954,49151:49151='.',<DOT>,981:37]
[@1955,49152:49163='lfk_HasClass',<LOWER_ID>,981:38]
[@1956,49164:49164='}',<RBRACE>,981:50]
[@1957,49165:49173='\n        ',<WS>,channel=2,981:51]
[@1958,49174:49174='}',<RBRACE>,982:8]
[@1959,49175:49179='\n    ',<WS>,channel=2,982:9]
[@1960,49180:49185='entity',<'entity'>,983:4]
[@1961,49186:49189='    ',<WS>,channel=2,983:10]
[@1962,49190:49199='SkillClass',<UPPER_ID>,983:14]
[@1963,49200:49200=' ',<WS>,channel=2,983:24]
[@1964,49201:49202='->',<RARROW>,983:25]
[@1965,49203:49203=' ',<WS>,channel=2,983:27]
[@1966,49204:49204='{',<LBRACE>,983:28]
[@1967,49205:49217='\n            ',<WS>,channel=2,983:29]
[@1968,49218:49221='from',<'from'>,984:12]
[@1969,49222:49238='\n                ',<WS>,channel=2,984:16]
[@1970,49239:49242='scsc',<LOWER_ID>,985:16]
[@1971,49243:49243=' ',<WS>,channel=2,985:20]
[@1972,49244:49244=':',<COLON>,985:21]
[@1973,49245:49245=' ',<WS>,channel=2,985:22]
[@1974,49246:49256='lSkillClass',<LOWER_ID>,985:23]
[@1975,49257:49269='\n            ',<WS>,channel=2,985:34]
[@1976,49270:49279='attributes',<'attributes'>,986:12]
[@1977,49280:49296='\n                ',<WS>,channel=2,986:22]
[@1978,49297:49302='SCName',<UPPER_ID>,987:16]
[@1979,49303:49303=' ',<WS>,channel=2,987:22]
[@1980,49304:49305='->',<RARROW>,987:23]
[@1981,49306:49306=' ',<WS>,channel=2,987:25]
[@1982,49307:49310='scsc',<LOWER_ID>,987:26]
[@1983,49311:49311='.',<DOT>,987:30]
[@1984,49312:49318='lSCName',<LOWER_ID>,987:31]
[@1985,49319:49344='\n                \n        ',<WS>,channel=2,987:38]
[@1986,49345:49345='}',<RBRACE>,989:8]
[@1987,49346:49349='\n   ',<WS>,channel=2,989:9]
[@1988,49350:49355='entity',<'entity'>,990:3]
[@1989,49356:49360='     ',<WS>,channel=2,990:9]
[@1990,49361:49373='SkillNdFrTask',<UPPER_ID>,990:14]
[@1991,49374:49374=' ',<WS>,channel=2,990:27]
[@1992,49375:49376='->',<RARROW>,990:28]
[@1993,49377:49377=' ',<WS>,channel=2,990:30]
[@1994,49378:49378='{',<LBRACE>,990:31]
[@1995,49379:49391='\n            ',<WS>,channel=2,990:32]
[@1996,49392:49395='from',<'from'>,991:12]
[@1997,49396:49412='\n                ',<WS>,channel=2,991:16]
[@1998,49413:49415='snt',<LOWER_ID>,992:16]
[@1999,49416:49416=' ',<WS>,channel=2,992:19]
[@2000,49417:49417=':',<COLON>,992:20]
[@2001,49418:49418=' ',<WS>,channel=2,992:21]
[@2002,49419:49437='lSkillNeededForTask',<LOWER_ID>,992:22]
[@2003,49438:49454='\n                ',<WS>,channel=2,992:41]
[@2004,49455:49456='sn',<LOWER_ID>,993:16]
[@2005,49457:49458='  ',<WS>,channel=2,993:18]
[@2006,49459:49459=':',<COLON>,993:20]
[@2007,49460:49460=' ',<WS>,channel=2,993:21]
[@2008,49461:49466='lSkill',<LOWER_ID>,993:22]
[@2009,49467:49483='\n                ',<WS>,channel=2,993:28]
[@2010,49484:49485='nt',<LOWER_ID>,994:16]
[@2011,49486:49487='  ',<WS>,channel=2,994:18]
[@2012,49488:49488=':',<COLON>,994:20]
[@2013,49489:49489=' ',<WS>,channel=2,994:21]
[@2014,49490:49494='lTask',<LOWER_ID>,994:22]
[@2015,49495:49507='\n            ',<WS>,channel=2,994:27]
[@2016,49508:49512='where',<'where'>,995:12]
[@2017,49513:49529='\n                ',<WS>,channel=2,995:17]
[@2018,49530:49532='snt',<LOWER_ID>,996:16]
[@2019,49533:49533='.',<DOT>,996:19]
[@2020,49534:49539='lskill',<LOWER_ID>,996:20]
[@2021,49540:49540=' ',<WS>,channel=2,996:26]
[@2022,49541:49541='=',<EQUAL>,996:27]
[@2023,49542:49542=' ',<WS>,channel=2,996:28]
[@2024,49543:49544='sn',<LOWER_ID>,996:29]
[@2025,49545:49545='.',<DOT>,996:31]
[@2026,49546:49551='lSName',<LOWER_ID>,996:32]
[@2027,49552:49568='\n                ',<WS>,channel=2,996:38]
[@2028,49569:49571='snt',<LOWER_ID>,997:16]
[@2029,49572:49572='.',<DOT>,997:19]
[@2030,49573:49577='ltask',<LOWER_ID>,997:20]
[@2031,49578:49578=' ',<WS>,channel=2,997:25]
[@2032,49579:49579='=',<EQUAL>,997:26]
[@2033,49580:49580=' ',<WS>,channel=2,997:27]
[@2034,49581:49582='nt',<LOWER_ID>,997:28]
[@2035,49583:49583='.',<DOT>,997:30]
[@2036,49584:49589='lTName',<LOWER_ID>,997:31]
[@2037,49590:49602='\n            ',<WS>,channel=2,997:37]
[@2038,49603:49612='attributes',<'attributes'>,998:12]
[@2039,49613:49629='\n                ',<WS>,channel=2,998:22]
[@2040,49630:49634='skill',<LOWER_ID>,999:16]
[@2041,49635:49635=' ',<WS>,channel=2,999:21]
[@2042,49636:49637='->',<RARROW>,999:22]
[@2043,49638:49638=' ',<WS>,channel=2,999:24]
[@2044,49639:49641='snt',<LOWER_ID>,999:25]
[@2045,49642:49642='.',<DOT>,999:28]
[@2046,49643:49648='lskill',<LOWER_ID>,999:29]
[@2047,49649:49665='\n                ',<WS>,channel=2,999:35]
[@2048,49666:49675='skillclass',<LOWER_ID>,1000:16]
[@2049,49676:49676=' ',<WS>,channel=2,1000:26]
[@2050,49677:49678='->',<RARROW>,1000:27]
[@2051,49679:49679=' ',<WS>,channel=2,1000:29]
[@2052,49680:49681='sn',<LOWER_ID>,1000:30]
[@2053,49682:49682='.',<DOT>,1000:32]
[@2054,49683:49694='lfk_HasClass',<LOWER_ID>,1000:33]
[@2055,49695:49695='.',<DOT>,1000:45]
[@2056,49696:49702='lSCName',<LOWER_ID>,1000:46]
[@2057,49703:49719='\n                ',<WS>,channel=2,1000:53]
[@2058,49720:49723='task',<LOWER_ID>,1001:16]
[@2059,49724:49725='  ',<WS>,channel=2,1001:20]
[@2060,49726:49727='->',<RARROW>,1001:22]
[@2061,49728:49728=' ',<WS>,channel=2,1001:24]
[@2062,49729:49731='snt',<LOWER_ID>,1001:25]
[@2063,49732:49732='.',<DOT>,1001:28]
[@2064,49733:49737='ltask',<LOWER_ID>,1001:29]
[@2065,49738:49754='\n                ',<WS>,channel=2,1001:34]
[@2066,49755:49766='foreign_keys',<'foreign_keys'>,1002:16]
[@2067,49767:49775='\n        ',<WS>,channel=2,1002:28]
[@2068,49776:49814='// fk_SnT_S    : SkillNdFrTask -> Skill',<LINE_COMMENT>,channel=2,1003:8]
[@2069,49815:49823='\n        ',<WS>,channel=2,1003:47]
[@2070,49824:49837='fk_SkillNeeded',<LOWER_ID>,1004:8]
[@2071,49838:49838=' ',<WS>,channel=2,1004:22]
[@2072,49839:49840='->',<RARROW>,1004:23]
[@2073,49841:49841=' ',<WS>,channel=2,1004:25]
[@2074,49842:49842='{',<LBRACE>,1004:26]
[@2075,49843:49844='ss',<LOWER_ID>,1004:27]
[@2076,49845:49845=' ',<WS>,channel=2,1004:29]
[@2077,49846:49847='->',<RARROW>,1004:30]
[@2078,49848:49848=' ',<WS>,channel=2,1004:32]
[@2079,49849:49850='sn',<LOWER_ID>,1004:33]
[@2080,49851:49851='}',<RBRACE>,1004:35]
[@2081,49852:49860='\n        ',<WS>,channel=2,1004:36]
[@2082,49861:49898='// fk_SnT_T    : SkillNdFrTask -> Task',<LINE_COMMENT>,channel=2,1005:8]
[@2083,49899:49907='\n        ',<WS>,channel=2,1005:46]
[@2084,49908:49917='fk_ForTask',<LOWER_ID>,1006:8]
[@2085,49918:49922='     ',<WS>,channel=2,1006:18]
[@2086,49923:49924='->',<RARROW>,1006:23]
[@2087,49925:49925=' ',<WS>,channel=2,1006:25]
[@2088,49926:49926='{',<LBRACE>,1006:26]
[@2089,49927:49928='tt',<LOWER_ID>,1006:27]
[@2090,49929:49929=' ',<WS>,channel=2,1006:29]
[@2091,49930:49931='->',<RARROW>,1006:30]
[@2092,49932:49932=' ',<WS>,channel=2,1006:32]
[@2093,49933:49934='nt',<LOWER_ID>,1006:33]
[@2094,49935:49935='}',<RBRACE>,1006:35]
[@2095,49936:49944='\n        ',<WS>,channel=2,1006:36]
[@2096,49945:49945='}',<RBRACE>,1007:8]
[@2097,49946:49949='\n   ',<WS>,channel=2,1007:9]
[@2098,49950:49955='entity',<'entity'>,1008:3]
[@2099,49956:49960='     ',<WS>,channel=2,1008:9]
[@2100,49961:49964='Task',<UPPER_ID>,1008:14]
[@2101,49965:49965=' ',<WS>,channel=2,1008:18]
[@2102,49966:49967='->',<RARROW>,1008:19]
[@2103,49968:49968=' ',<WS>,channel=2,1008:21]
[@2104,49969:49969='{',<LBRACE>,1008:22]
[@2105,49970:49982='\n            ',<WS>,channel=2,1008:23]
[@2106,49983:49986='from',<'from'>,1009:12]
[@2107,49987:50003='\n                ',<WS>,channel=2,1009:16]
[@2108,50004:50005='tt',<LOWER_ID>,1010:16]
[@2109,50006:50006=' ',<WS>,channel=2,1010:18]
[@2110,50007:50007=':',<COLON>,1010:19]
[@2111,50008:50008=' ',<WS>,channel=2,1010:20]
[@2112,50009:50013='lTask',<LOWER_ID>,1010:21]
[@2113,50014:50026='\n            ',<WS>,channel=2,1010:26]
[@2114,50027:50036='attributes',<'attributes'>,1011:12]
[@2115,50037:50053='\n                ',<WS>,channel=2,1011:22]
[@2116,50054:50058='TName',<UPPER_ID>,1012:16]
[@2117,50059:50059=' ',<WS>,channel=2,1012:21]
[@2118,50060:50061='->',<RARROW>,1012:22]
[@2119,50062:50062=' ',<WS>,channel=2,1012:24]
[@2120,50063:50064='tt',<LOWER_ID>,1012:25]
[@2121,50065:50065='.',<DOT>,1012:27]
[@2122,50066:50071='lTName',<LOWER_ID>,1012:28]
[@2123,50072:50080='\n        ',<WS>,channel=2,1012:34]
[@2124,50081:50081='}',<RBRACE>,1013:8]
[@2125,50082:50087='\n    \n',<WS>,channel=2,1013:9]
[@2126,50088:50088='}',<RBRACE>,1015:0]
[@2127,50089:50090='\n\n',<WS>,channel=2,1015:1]
[@2128,50091:50098='md { (* ',<MARKDOWN>,1017:0]
[@2129,50099:50330='"\nPushing the instance generated by the `coproduct_sigma` construction through the query above using\neval produces an instance reflecting the foreign keys introduced in the target schema we set up \nas part of the query definition.\n"',<MD_MULTI_STRING>,1017:8]
[@2130,50331:50335=' *) }',<MD_END>,1021:1]
[@2131,50336:50336='\n',<WS>,channel=2,1021:6]
[@2132,50337:50344='instance',<'instance'>,1022:0]
[@2133,50345:50345=' ',<WS>,channel=2,1022:8]
[@2134,50346:50351='iSTSpn',<LOWER_ID>,1022:9]
[@2135,50352:50352=' ',<WS>,channel=2,1022:15]
[@2136,50353:50353='=',<EQUAL>,1022:16]
[@2137,50354:50354=' ',<WS>,channel=2,1022:17]
[@2138,50355:50358='eval',<'eval'>,1022:18]
[@2139,50359:50359=' ',<WS>,channel=2,1022:22]
[@2140,50360:50378='qS_T_SnT_SumToSTSpn',<LOWER_ID>,1022:23]
[@2141,50379:50379=' ',<WS>,channel=2,1022:42]
[@2142,50380:50391='iS_T_SnT_Sum',<LOWER_ID>,1022:43]
[@2143,50392:50394='\n\n\n',<WS>,channel=2,1022:55]
[@2144,50395:50402='md { (* ',<MARKDOWN>,1025:0]
[@2145,50403:51226='"\n---\n\n## JDBC Pragmas, Imports and Exports\n\nThis first sequence exports the `iSTSpn` created above. Exporting a JDBC instance consolidates\nseveral sets of commands. First the export issues data definition (DDL) commands against the\ntarget RDBMS that create tables and foreign keys that are as close as possible to the associated\nAQL schema kind. The second sequence of commands inserts instance records into the tables just \ncreated. Since this file can be executed several times we must first check to see if the table\nstructure already exists and if so drop those tables. This task is performed using the pragma\n`pCleanUp`. In order to display the results of these commands the set of tables in the target schema\nare listed using the `pShwTbls` pragma.\n\nFirst clean out the target tables if present from a previous run.\n"',<MD_MULTI_STRING>,1025:8]
[@2146,51227:51231=' *) }',<MD_END>,1040:1]
[@2147,51232:51232='\n',<WS>,channel=2,1040:6]
[@2148,51233:51239='command',<'command'>,1041:0]
[@2149,51240:51240=' ',<WS>,channel=2,1041:7]
[@2150,51241:51248='pCleanUp',<LOWER_ID>,1041:8]
[@2151,51249:51249=' ',<WS>,channel=2,1041:16]
[@2152,51250:51250='=',<EQUAL>,1041:17]
[@2153,51251:51251=' ',<WS>,channel=2,1041:18]
[@2154,51252:51260='exec_jdbc',<'exec_jdbc'>,1041:19]
[@2155,51261:51261=' ',<WS>,channel=2,1041:28]
[@2156,51262:51284='"com.mysql.jdbc.Driver"',<STRING>,1041:29]
[@2157,51285:51285='\n',<WS>,channel=2,1041:52]
[@2158,51286:51362='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1042:0]
[@2159,51363:51363=' ',<WS>,channel=2,1042:77]
[@2160,51364:51364='{',<LBRACE>,1042:78]
[@2161,51365:51365='\n',<WS>,channel=2,1042:79]
[@2162,51366:51405='"DROP TABLE IF EXISTS sts_SkillNdFrTask"',<STRING>,1043:0]
[@2163,51406:51406='\n',<WS>,channel=2,1043:40]
[@2164,51407:51438='"DROP TABLE IF EXISTS sts_Skill"',<STRING>,1044:0]
[@2165,51439:51439='\n',<WS>,channel=2,1044:32]
[@2166,51440:51476='"DROP TABLE IF EXISTS sts_SkillClass"',<STRING>,1045:0]
[@2167,51477:51477='\n',<WS>,channel=2,1045:37]
[@2168,51478:51508='"DROP TABLE IF EXISTS sts_Task"',<STRING>,1046:0]
[@2169,51509:51509='}',<RBRACE>,1046:31]
[@2170,51510:51511='\n\n',<WS>,channel=2,1046:32]
[@2171,51512:51519='md { (* ',<MARKDOWN>,1048:0]
[@2172,51520:51765='"\nExport the results of the above construction of the span and its representative instance. The\n`export_jdbc_instance` defaults strings varchar(64). In this case we illustrate how that default \ncan be overridden using the varchar_length option.\n"',<MD_MULTI_STRING>,1048:8]
[@2173,51766:51770=' *) }',<MD_END>,1052:1]
[@2174,51771:51771='\n',<WS>,channel=2,1052:6]
[@2175,51772:51778='command',<'command'>,1053:0]
[@2176,51779:51779=' ',<WS>,channel=2,1053:7]
[@2177,51780:51783='eSTS',<LOWER_ID>,1053:8]
[@2178,51784:51784=' ',<WS>,channel=2,1053:12]
[@2179,51785:51785='=',<EQUAL>,1053:13]
[@2180,51786:51786=' ',<WS>,channel=2,1053:14]
[@2181,51787:51806='export_jdbc_instance',<'export_jdbc_instance'>,1053:15]
[@2182,51807:51807=' ',<WS>,channel=2,1053:35]
[@2183,51808:51813='iSTSpn',<LOWER_ID>,1053:36]
[@2184,51814:51814=' ',<WS>,channel=2,1053:42]
[@2185,51815:51837='"com.mysql.jdbc.Driver"',<STRING>,1053:43]
[@2186,51838:51838='\n',<WS>,channel=2,1053:66]
[@2187,51839:51915='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1054:0]
[@2188,51916:51916=' ',<WS>,channel=2,1054:77]
[@2189,51917:51922='"sts_"',<STRING>,1054:78]
[@2190,51923:51925='\n  ',<WS>,channel=2,1054:84]
[@2191,51926:51926='{',<LBRACE>,1055:2]
[@2192,51927:51927=' ',<WS>,channel=2,1055:3]
[@2193,51928:51934='options',<'options'>,1055:4]
[@2194,51935:51935=' ',<WS>,channel=2,1055:11]
[@2195,51936:51949='varchar_length',<'varchar_length'>,1055:12]
[@2196,51950:51950=' ',<WS>,channel=2,1055:26]
[@2197,51951:51951='=',<EQUAL>,1055:27]
[@2198,51952:51952=' ',<WS>,channel=2,1055:28]
[@2199,51953:51955='256',<INTEGER>,1055:29]
[@2200,51956:51956=' ',<WS>,channel=2,1055:32]
[@2201,51957:51957='}',<RBRACE>,1055:33]
[@2202,51958:51959='\n\n',<WS>,channel=2,1055:34]
[@2203,51960:51967='md { (* ',<MARKDOWN>,1057:0]
[@2204,51968:52025='"\nDisplay the contents of the `ci_test` schema in MySQL.\n"',<MD_MULTI_STRING>,1057:8]
[@2205,52026:52030=' *) }',<MD_END>,1059:1]
[@2206,52031:52031='\n',<WS>,channel=2,1059:6]
[@2207,52032:52038='command',<'command'>,1060:0]
[@2208,52039:52039=' ',<WS>,channel=2,1060:7]
[@2209,52040:52047='pShwTbls',<LOWER_ID>,1060:8]
[@2210,52048:52048=' ',<WS>,channel=2,1060:16]
[@2211,52049:52049='=',<EQUAL>,1060:17]
[@2212,52050:52050=' ',<WS>,channel=2,1060:18]
[@2213,52051:52059='exec_jdbc',<'exec_jdbc'>,1060:19]
[@2214,52060:52060=' ',<WS>,channel=2,1060:28]
[@2215,52061:52083='"com.mysql.jdbc.Driver"',<STRING>,1060:29]
[@2216,52084:52084='\n',<WS>,channel=2,1060:52]
[@2217,52085:52161='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1061:0]
[@2218,52162:52162=' ',<WS>,channel=2,1061:77]
[@2219,52163:52163='{',<LBRACE>,1061:78]
[@2220,52164:52164='\n',<WS>,channel=2,1061:79]
[@2221,52165:52178='"SHOW  TABLES"',<STRING>,1062:0]
[@2222,52179:52179='}',<RBRACE>,1062:14]
[@2223,52180:52182='\n \n',<WS>,channel=2,1062:15]
[@2224,52183:52190='md { (* ',<MARKDOWN>,1064:0]
[@2225,52191:52745='"\nThe default AQL import process from a relational database submits an SQL query through the JDBC\ndriver for the source RDBMS for each entity declared in the target schema `sSTSpn` above. Due to\nthe extensive differences between AQL and RDBMS semantics, the translation process has a number\nof different options that can be used to provide flexibility. We make use of the default behavior\nfor this import but will return to import options in a later example. The import defaults require\na complete specification of all foreign key and attribute columns.\n"',<MD_MULTI_STRING>,1064:8]
[@2226,52746:52750=' *) }',<MD_END>,1071:1]
[@2227,52751:52751='\n',<WS>,channel=2,1071:6]
[@2228,52752:52759='instance',<'instance'>,1072:0]
[@2229,52760:52760=' ',<WS>,channel=2,1072:8]
[@2230,52761:52769='iSTSpnImp',<LOWER_ID>,1072:9]
[@2231,52770:52770=' ',<WS>,channel=2,1072:18]
[@2232,52771:52771='=',<EQUAL>,1072:19]
[@2233,52772:52772=' ',<WS>,channel=2,1072:20]
[@2234,52773:52783='import_jdbc',<'import_jdbc'>,1072:21]
[@2235,52784:52784=' ',<WS>,channel=2,1072:32]
[@2236,52785:52807='"com.mysql.jdbc.Driver"',<STRING>,1072:33]
[@2237,52808:52808='\n',<WS>,channel=2,1072:56]
[@2238,52809:52885='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1073:0]
[@2239,52886:52886=' ',<WS>,channel=2,1073:77]
[@2240,52887:52887=':',<COLON>,1073:78]
[@2241,52888:52888=' ',<WS>,channel=2,1073:79]
[@2242,52889:52894='sSTSpn',<LOWER_ID>,1073:80]
[@2243,52895:52895=' ',<WS>,channel=2,1073:86]
[@2244,52896:52896='{',<LBRACE>,1073:87]
[@2245,52897:52900='\n   ',<WS>,channel=2,1073:88]
[@2246,52901:52905='Skill',<UPPER_ID>,1074:3]
[@2247,52906:52906=' ',<WS>,channel=2,1074:8]
[@2248,52907:52908='->',<RARROW>,1074:9]
[@2249,52909:52909=' ',<WS>,channel=2,1074:11]
[@2250,52910:52968='"select id, fk_HasClass, SName, SCNameOnSkl from sts_Skill"',<STRING>,1074:12]
[@2251,52969:52972='\n   ',<WS>,channel=2,1074:71]
[@2252,52973:52982='SkillClass',<UPPER_ID>,1075:3]
[@2253,52983:52983=' ',<WS>,channel=2,1075:13]
[@2254,52984:52985='->',<RARROW>,1075:14]
[@2255,52986:52986=' ',<WS>,channel=2,1075:16]
[@2256,52987:53025='"select id, SCName from sts_SkillClass"',<STRING>,1075:17]
[@2257,53026:53029='\n   ',<WS>,channel=2,1075:56]
[@2258,53030:53033='Task',<UPPER_ID>,1076:3]
[@2259,53034:53034=' ',<WS>,channel=2,1076:7]
[@2260,53035:53036='->',<RARROW>,1076:8]
[@2261,53037:53037=' ',<WS>,channel=2,1076:10]
[@2262,53038:53069='"select id, TName from sts_Task"',<STRING>,1076:11]
[@2263,53070:53073='\n   ',<WS>,channel=2,1076:43]
[@2264,53074:53086='SkillNdFrTask',<UPPER_ID>,1077:3]
[@2265,53087:53087=' ',<WS>,channel=2,1077:16]
[@2266,53088:53089='->',<RARROW>,1077:17]
[@2267,53090:53090=' ',<WS>,channel=2,1077:19]
[@2268,53091:53177='"select id, fk_SkillNeeded, fk_ForTask, skill, task, skillclass from sts_SkillNdFrTask"',<STRING>,1077:20]
[@2269,53178:53178='\n',<WS>,channel=2,1077:107]
[@2270,53179:53187='//options',<LINE_COMMENT>,channel=2,1078:0]
[@2271,53188:53190='\n  ',<WS>,channel=2,1078:9]
[@2272,53191:53221='// always_reload = true -- why?',<LINE_COMMENT>,channel=2,1079:2]
[@2273,53222:53222='\n',<WS>,channel=2,1079:33]
[@2274,53223:53223='}',<RBRACE>,1080:0]
[@2275,53224:53225='\n\n',<WS>,channel=2,1080:1]
[@2276,53226:53233='md { (* ',<MARKDOWN>,1082:0]
[@2277,53234:53986='"\nHaving constructed a span modeling the way skills are related to tasks, we now turn to another\nmodel involving a span relating skills to people. We could build this model up piece by piece as\nwe did above, but AQL's schema declaration can build such a schema in one step. To illustrate a\nmore elaborate example of AQL's integration capabilities the set of tables used to model skills \nfor this schema has an additional level to the taxonomy. The creation of this schema is a\nprecondition for the upcoming import. In order to extract existing data from a relational \ndatabase into an AQL schema we must first define an AQL schema that is compatible with the\nexternal SQL system. The schema below defines the structure into which we target our import.\n"',<MD_MULTI_STRING>,1082:8]
[@2278,53987:53991=' *) }',<MD_END>,1091:1]
[@2279,53992:53992='\n',<WS>,channel=2,1091:6]
[@2280,53993:53998='schema',<'schema'>,1092:0]
[@2281,53999:53999=' ',<WS>,channel=2,1092:6]
[@2282,54000:54005='sSPSpn',<LOWER_ID>,1092:7]
[@2283,54006:54006=' ',<WS>,channel=2,1092:13]
[@2284,54007:54007='=',<EQUAL>,1092:14]
[@2285,54008:54008=' ',<WS>,channel=2,1092:15]
[@2286,54009:54015='literal',<'literal'>,1092:16]
[@2287,54016:54016=' ',<WS>,channel=2,1092:23]
[@2288,54017:54017=':',<COLON>,1092:24]
[@2289,54018:54018=' ',<WS>,channel=2,1092:25]
[@2290,54019:54026='TypeSide',<UPPER_ID>,1092:26]
[@2291,54027:54027=' ',<WS>,channel=2,1092:34]
[@2292,54028:54028='{',<LBRACE>,1092:35]
[@2293,54029:54033='\n    ',<WS>,channel=2,1092:36]
[@2294,54034:54041='entities',<'entities'>,1093:4]
[@2295,54042:54048='\n      ',<WS>,channel=2,1093:12]
[@2296,54049:54061='SpecificSkill',<UPPER_ID>,1094:6]
[@2297,54062:54062=' ',<WS>,channel=2,1094:19]
[@2298,54063:54074='GeneralSkill',<UPPER_ID>,1094:20]
[@2299,54075:54075=' ',<WS>,channel=2,1094:32]
[@2300,54076:54085='SkillClass',<UPPER_ID>,1094:33]
[@2301,54086:54092='\n      ',<WS>,channel=2,1094:43]
[@2302,54093:54098='Person',<UPPER_ID>,1095:6]
[@2303,54099:54099=' ',<WS>,channel=2,1095:12]
[@2304,54100:54116='SkillPrvdByPerson',<UPPER_ID>,1095:13]
[@2305,54117:54121='\n    ',<WS>,channel=2,1095:30]
[@2306,54122:54133='foreign_keys',<'foreign_keys'>,1096:4]
[@2307,54134:54140='\n      ',<WS>,channel=2,1096:16]
[@2308,54141:54149='fk_IsType',<LOWER_ID>,1097:6]
[@2309,54150:54150=' ',<WS>,channel=2,1097:15]
[@2310,54151:54151=':',<COLON>,1097:16]
[@2311,54152:54152=' ',<WS>,channel=2,1097:17]
[@2312,54153:54165='SpecificSkill',<UPPER_ID>,1097:18]
[@2313,54166:54166=' ',<WS>,channel=2,1097:31]
[@2314,54167:54168='->',<RARROW>,1097:32]
[@2315,54169:54169=' ',<WS>,channel=2,1097:34]
[@2316,54170:54181='GeneralSkill',<UPPER_ID>,1097:35]
[@2317,54182:54188='\n      ',<WS>,channel=2,1097:47]
[@2318,54189:54199='fk_HasClass',<LOWER_ID>,1098:6]
[@2319,54200:54200=' ',<WS>,channel=2,1098:17]
[@2320,54201:54201=':',<COLON>,1098:18]
[@2321,54202:54202=' ',<WS>,channel=2,1098:19]
[@2322,54203:54214='GeneralSkill',<UPPER_ID>,1098:20]
[@2323,54215:54215=' ',<WS>,channel=2,1098:32]
[@2324,54216:54217='->',<RARROW>,1098:33]
[@2325,54218:54218=' ',<WS>,channel=2,1098:35]
[@2326,54219:54228='SkillClass',<UPPER_ID>,1098:36]
[@2327,54229:54235='\n      ',<WS>,channel=2,1098:46]
[@2328,54236:54243='fk_SpP_S',<LOWER_ID>,1099:6]
[@2329,54244:54246='   ',<WS>,channel=2,1099:14]
[@2330,54247:54247=':',<COLON>,1099:17]
[@2331,54248:54248=' ',<WS>,channel=2,1099:18]
[@2332,54249:54265='SkillPrvdByPerson',<UPPER_ID>,1099:19]
[@2333,54266:54266=' ',<WS>,channel=2,1099:36]
[@2334,54267:54268='->',<RARROW>,1099:37]
[@2335,54269:54269=' ',<WS>,channel=2,1099:39]
[@2336,54270:54282='SpecificSkill',<UPPER_ID>,1099:40]
[@2337,54283:54289='\n      ',<WS>,channel=2,1099:53]
[@2338,54290:54297='fk_SpP_P',<LOWER_ID>,1100:6]
[@2339,54298:54300='   ',<WS>,channel=2,1100:14]
[@2340,54301:54301=':',<COLON>,1100:17]
[@2341,54302:54302=' ',<WS>,channel=2,1100:18]
[@2342,54303:54319='SkillPrvdByPerson',<UPPER_ID>,1100:19]
[@2343,54320:54320=' ',<WS>,channel=2,1100:36]
[@2344,54321:54322='->',<RARROW>,1100:37]
[@2345,54323:54323=' ',<WS>,channel=2,1100:39]
[@2346,54324:54329='Person',<UPPER_ID>,1100:40]
[@2347,54330:54334='\n    ',<WS>,channel=2,1100:46]
[@2348,54335:54344='attributes',<'attributes'>,1101:4]
[@2349,54345:54351='\n      ',<WS>,channel=2,1101:14]
[@2350,54352:54357='SSName',<UPPER_ID>,1102:6]
[@2351,54358:54358=' ',<WS>,channel=2,1102:12]
[@2352,54359:54366='SSGSName',<UPPER_ID>,1102:13]
[@2353,54367:54367=' ',<WS>,channel=2,1102:21]
[@2354,54368:54375='SSSCName',<UPPER_ID>,1102:22]
[@2355,54376:54376=' ',<WS>,channel=2,1102:30]
[@2356,54377:54377=':',<COLON>,1102:31]
[@2357,54378:54378=' ',<WS>,channel=2,1102:32]
[@2358,54379:54391='SpecificSkill',<UPPER_ID>,1102:33]
[@2359,54392:54392=' ',<WS>,channel=2,1102:46]
[@2360,54393:54394='->',<RARROW>,1102:47]
[@2361,54395:54395=' ',<WS>,channel=2,1102:49]
[@2362,54396:54402='Varchar',<UPPER_ID>,1102:50]
[@2363,54403:54409='\n      ',<WS>,channel=2,1102:57]
[@2364,54410:54415='GSName',<UPPER_ID>,1103:6]
[@2365,54416:54416=' ',<WS>,channel=2,1103:12]
[@2366,54417:54424='GSSCName',<UPPER_ID>,1103:13]
[@2367,54425:54425=' ',<WS>,channel=2,1103:21]
[@2368,54426:54426=':',<COLON>,1103:22]
[@2369,54427:54427=' ',<WS>,channel=2,1103:23]
[@2370,54428:54439='GeneralSkill',<UPPER_ID>,1103:24]
[@2371,54440:54440=' ',<WS>,channel=2,1103:36]
[@2372,54441:54442='->',<RARROW>,1103:37]
[@2373,54443:54443=' ',<WS>,channel=2,1103:39]
[@2374,54444:54450='Varchar',<UPPER_ID>,1103:40]
[@2375,54451:54457='\n      ',<WS>,channel=2,1103:47]
[@2376,54458:54463='SCName',<UPPER_ID>,1104:6]
[@2377,54464:54464=' ',<WS>,channel=2,1104:12]
[@2378,54465:54465=':',<COLON>,1104:13]
[@2379,54466:54466=' ',<WS>,channel=2,1104:14]
[@2380,54467:54476='SkillClass',<UPPER_ID>,1104:15]
[@2381,54477:54477=' ',<WS>,channel=2,1104:25]
[@2382,54478:54479='->',<RARROW>,1104:26]
[@2383,54480:54480=' ',<WS>,channel=2,1104:28]
[@2384,54481:54487='Varchar',<UPPER_ID>,1104:29]
[@2385,54488:54494='\n      ',<WS>,channel=2,1104:36]
[@2386,54495:54499='PName',<UPPER_ID>,1105:6]
[@2387,54500:54501='  ',<WS>,channel=2,1105:11]
[@2388,54502:54502=':',<COLON>,1105:13]
[@2389,54503:54503=' ',<WS>,channel=2,1105:14]
[@2390,54504:54509='Person',<UPPER_ID>,1105:15]
[@2391,54510:54510=' ',<WS>,channel=2,1105:21]
[@2392,54511:54512='->',<RARROW>,1105:22]
[@2393,54513:54513=' ',<WS>,channel=2,1105:24]
[@2394,54514:54520='Varchar',<UPPER_ID>,1105:25]
[@2395,54521:54527='\n      ',<WS>,channel=2,1105:32]
[@2396,54528:54532='skill',<LOWER_ID>,1106:6]
[@2397,54533:54534='  ',<WS>,channel=2,1106:11]
[@2398,54535:54535=':',<COLON>,1106:13]
[@2399,54536:54536=' ',<WS>,channel=2,1106:14]
[@2400,54537:54553='SkillPrvdByPerson',<UPPER_ID>,1106:15]
[@2401,54554:54554=' ',<WS>,channel=2,1106:32]
[@2402,54555:54556='->',<RARROW>,1106:33]
[@2403,54557:54557=' ',<WS>,channel=2,1106:35]
[@2404,54558:54564='Varchar',<UPPER_ID>,1106:36]
[@2405,54565:54571='\n      ',<WS>,channel=2,1106:43]
[@2406,54572:54577='person',<LOWER_ID>,1107:6]
[@2407,54578:54578=' ',<WS>,channel=2,1107:12]
[@2408,54579:54579=':',<COLON>,1107:13]
[@2409,54580:54580=' ',<WS>,channel=2,1107:14]
[@2410,54581:54597='SkillPrvdByPerson',<UPPER_ID>,1107:15]
[@2411,54598:54598=' ',<WS>,channel=2,1107:32]
[@2412,54599:54600='->',<RARROW>,1107:33]
[@2413,54601:54601=' ',<WS>,channel=2,1107:35]
[@2414,54602:54608='Varchar',<UPPER_ID>,1107:36]
[@2415,54609:54613='\n    ',<WS>,channel=2,1107:43]
[@2416,54614:54634='observation_equations',<'observation_equations'>,1108:4]
[@2417,54635:54641='\n      ',<WS>,channel=2,1108:25]
[@2418,54642:54649='SSGSName',<UPPER_ID>,1109:6]
[@2419,54650:54650=' ',<WS>,channel=2,1109:14]
[@2420,54651:54651='=',<EQUAL>,1109:15]
[@2421,54652:54652=' ',<WS>,channel=2,1109:16]
[@2422,54653:54661='fk_IsType',<LOWER_ID>,1109:17]
[@2423,54662:54662='.',<DOT>,1109:26]
[@2424,54663:54668='GSName',<UPPER_ID>,1109:27]
[@2425,54669:54675='\n      ',<WS>,channel=2,1109:33]
[@2426,54676:54683='SSSCName',<UPPER_ID>,1110:6]
[@2427,54684:54684=' ',<WS>,channel=2,1110:14]
[@2428,54685:54685='=',<EQUAL>,1110:15]
[@2429,54686:54686=' ',<WS>,channel=2,1110:16]
[@2430,54687:54695='fk_IsType',<LOWER_ID>,1110:17]
[@2431,54696:54696='.',<DOT>,1110:26]
[@2432,54697:54707='fk_HasClass',<LOWER_ID>,1110:27]
[@2433,54708:54708='.',<DOT>,1110:38]
[@2434,54709:54714='SCName',<UPPER_ID>,1110:39]
[@2435,54715:54721='\n      ',<WS>,channel=2,1110:45]
[@2436,54722:54729='GSSCName',<UPPER_ID>,1111:6]
[@2437,54730:54730=' ',<WS>,channel=2,1111:14]
[@2438,54731:54731='=',<EQUAL>,1111:15]
[@2439,54732:54732=' ',<WS>,channel=2,1111:16]
[@2440,54733:54743='fk_HasClass',<LOWER_ID>,1111:17]
[@2441,54744:54744='.',<DOT>,1111:28]
[@2442,54745:54750='SCName',<UPPER_ID>,1111:29]
[@2443,54751:54757='\n      ',<WS>,channel=2,1111:35]
[@2444,54758:54762='skill',<LOWER_ID>,1112:6]
[@2445,54763:54763=' ',<WS>,channel=2,1112:11]
[@2446,54764:54764='=',<EQUAL>,1112:12]
[@2447,54765:54765=' ',<WS>,channel=2,1112:13]
[@2448,54766:54773='fk_SpP_S',<LOWER_ID>,1112:14]
[@2449,54774:54774='.',<DOT>,1112:22]
[@2450,54775:54780='SSName',<UPPER_ID>,1112:23]
[@2451,54781:54787='\n      ',<WS>,channel=2,1112:29]
[@2452,54788:54793='person',<LOWER_ID>,1113:6]
[@2453,54794:54794=' ',<WS>,channel=2,1113:12]
[@2454,54795:54795='=',<EQUAL>,1113:13]
[@2455,54796:54796=' ',<WS>,channel=2,1113:14]
[@2456,54797:54804='fk_SpP_P',<LOWER_ID>,1113:15]
[@2457,54805:54805='.',<DOT>,1113:23]
[@2458,54806:54810='PName',<UPPER_ID>,1113:24]
[@2459,54811:54811='\n',<WS>,channel=2,1113:29]
[@2460,54812:54812='}',<RBRACE>,1114:0]
[@2461,54813:54814='\n\n',<WS>,channel=2,1114:1]
[@2462,54815:54822='md { (* ',<MARKDOWN>,1116:0]
[@2463,54823:54999='"\nWe have already set up a set of tables and associated instance in our source RDBMS so we import\nthat instance using a command analogous to the `iSTSpnImp` imported instance.\n"',<MD_MULTI_STRING>,1116:8]
[@2464,55000:55004=' *) }',<MD_END>,1119:1]
[@2465,55005:55005='\n',<WS>,channel=2,1119:6]
[@2466,55006:55013='instance',<'instance'>,1120:0]
[@2467,55014:55014=' ',<WS>,channel=2,1120:8]
[@2468,55015:55023='iSPSpnImp',<LOWER_ID>,1120:9]
[@2469,55024:55024=' ',<WS>,channel=2,1120:18]
[@2470,55025:55025='=',<EQUAL>,1120:19]
[@2471,55026:55026=' ',<WS>,channel=2,1120:20]
[@2472,55027:55037='import_jdbc',<'import_jdbc'>,1120:21]
[@2473,55038:55038=' ',<WS>,channel=2,1120:32]
[@2474,55039:55061='"com.mysql.jdbc.Driver"',<STRING>,1120:33]
[@2475,55062:55066='\n    ',<WS>,channel=2,1120:56]
[@2476,55067:55143='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1121:4]
[@2477,55144:55144=' ',<WS>,channel=2,1121:81]
[@2478,55145:55145=':',<COLON>,1121:82]
[@2479,55146:55146=' ',<WS>,channel=2,1121:83]
[@2480,55147:55152='sSPSpn',<LOWER_ID>,1121:84]
[@2481,55153:55153=' ',<WS>,channel=2,1121:90]
[@2482,55154:55154='{',<LBRACE>,1121:91]
[@2483,55155:55158='\n   ',<WS>,channel=2,1121:92]
[@2484,55159:55171='SpecificSkill',<UPPER_ID>,1122:3]
[@2485,55172:55172=' ',<WS>,channel=2,1122:16]
[@2486,55173:55174='->',<RARROW>,1122:17]
[@2487,55175:55175=' ',<WS>,channel=2,1122:19]
[@2488,55176:55248='"select id, fk_IsType, SSName, SSGSName, SSSCName from sps_SpecificSkill"',<STRING>,1122:20]
[@2489,55249:55252='\n   ',<WS>,channel=2,1122:93]
[@2490,55253:55264='GeneralSkill',<UPPER_ID>,1123:3]
[@2491,55265:55265=' ',<WS>,channel=2,1123:15]
[@2492,55266:55267='->',<RARROW>,1123:16]
[@2493,55268:55268=' ',<WS>,channel=2,1123:18]
[@2494,55269:55332='"select id, fk_HasClass, GSName, GSSCName from sps_GeneralSkill"',<STRING>,1123:19]
[@2495,55333:55336='\n   ',<WS>,channel=2,1123:83]
[@2496,55337:55346='SkillClass',<UPPER_ID>,1124:3]
[@2497,55347:55347=' ',<WS>,channel=2,1124:13]
[@2498,55348:55349='->',<RARROW>,1124:14]
[@2499,55350:55350=' ',<WS>,channel=2,1124:16]
[@2500,55351:55389='"select id, SCName from sps_SkillClass"',<STRING>,1124:17]
[@2501,55390:55393='\n   ',<WS>,channel=2,1124:56]
[@2502,55394:55399='Person',<UPPER_ID>,1125:3]
[@2503,55400:55400=' ',<WS>,channel=2,1125:9]
[@2504,55401:55402='->',<RARROW>,1125:10]
[@2505,55403:55403=' ',<WS>,channel=2,1125:12]
[@2506,55404:55437='"select id, PName from sps_Person"',<STRING>,1125:13]
[@2507,55438:55441='\n   ',<WS>,channel=2,1125:47]
[@2508,55442:55458='SkillPrvdByPerson',<UPPER_ID>,1126:3]
[@2509,55459:55459=' ',<WS>,channel=2,1126:20]
[@2510,55460:55461='->',<RARROW>,1126:21]
[@2511,55462:55462=' ',<WS>,channel=2,1126:23]
[@2512,55463:55535='"select id, fk_SpP_S, fk_SpP_P, skill, person from sps_SkillPrvdByPerson"',<STRING>,1126:24]
[@2513,55536:55536='\n',<WS>,channel=2,1126:97]
[@2514,55537:55545='//options',<LINE_COMMENT>,channel=2,1127:0]
[@2515,55546:55548='\n  ',<WS>,channel=2,1127:9]
[@2516,55549:55578='// always_reload = true - why?',<LINE_COMMENT>,channel=2,1128:2]
[@2517,55579:55579='\n',<WS>,channel=2,1128:32]
[@2518,55580:55580='}',<RBRACE>,1129:0]
[@2519,55581:55582='\n\n',<WS>,channel=2,1129:1]
[@2520,55583:55590='md { (* ',<MARKDOWN>,1131:0]
[@2521,55591:58098='"\nIn this example we begin to see for the first time a more representative example of the full \ncapability of the `schema_colimit` construction. In this more interesting colimit we are gluing \n(equating) on a defined overlap that is associated with the slightly different strategies for \nmodeling skill taxonomies. In this case we are assuming that the Skill entity from `sSTSpn` can be\nequated with the `SpecificSkill` entity from `sSPSpn` and likewise the `SkillClass` entities from both. \nWe also note what this implies about foreign keys. Since `SpecificSkill` has a foreign key path \nthrough `GeneralSkill` we equate that path with the foreign key `fk_HasClass` from `sSTSpn`. In so \ndoing we consolidate the two schemas in a way that eliminates redundant entities and paths.\n\nGenerally this is what a colimit does. It merges multiple objects of a category into a single\nobject in a way that equates all paths from objects in the colimit diagram (in this case schemas)\nto the universal colimit (in this case the `schema_colimit`). These path equalities (in this case \nthe pair of paths from a link schema through `sSTSpn` and `sSPSpn` to `sSTSpn_SPSpn_CoLim`) serve to \ndefine ways in which structure is merged across the objects in the colimit diagram. Although this\napproach is supported by AQL there is an equivalent alternative. \n\nOne particularly intuitive way to implement a colimit involves deconstructing the colimit into \ntwo steps. The first step is to take the coproduct. The coproduct is a special case of a colimit \nwhere the colimit diagram consists of a set of discrete objects without any connecting arrows. \nWith such a diagram the colimit assembles the source objects disjointly. The second step is the \nquotient which provides for the merging of structure across and within the source objects. What \nis the structure being merged? It is the structure of a category, which consists of objects and \npaths.\n\nRecall the comparison we illustrated between the use of path equations in the instance \ndeclaration associated with `iSklSklCls1` and the use of a link instance and pair of transforms \nused in the construction of `isklSklCls2`. Similarly the following sequence follows the sequence\nyou have seen before where we disjointly assembled `sS`, `sT` and `sSnT`. In that sequence we followed\nwith a query to create foreign keys. In this sequence we are doing something different. Instead\nof joining a set of disjoint entities we are gluing a pair of schema with some shared structure.\n"',<MD_MULTI_STRING>,1131:8]
[@2522,58099:58103=' *) }',<MD_END>,1162:1]
[@2523,58104:58104='\n',<WS>,channel=2,1162:6]
[@2524,58105:58118='schema_colimit',<'schema_colimit'>,1163:0]
[@2525,58119:58119=' ',<WS>,channel=2,1163:14]
[@2526,58120:58140='STSpn_SPSpn_CoLimAuto',<UPPER_ID>,1163:15]
[@2527,58141:58141=' ',<WS>,channel=2,1163:36]
[@2528,58142:58142='=',<EQUAL>,1163:37]
[@2529,58143:58143=' ',<WS>,channel=2,1163:38]
[@2530,58144:58151='quotient',<'quotient'>,1163:39]
[@2531,58152:58152=' ',<WS>,channel=2,1163:47]
[@2532,58153:58158='sSTSpn',<LOWER_ID>,1163:48]
[@2533,58159:58159=' ',<WS>,channel=2,1163:54]
[@2534,58160:58160='+',<PLUS>,1163:55]
[@2535,58161:58161=' ',<WS>,channel=2,1163:56]
[@2536,58162:58167='sSPSpn',<LOWER_ID>,1163:57]
[@2537,58168:58168=' ',<WS>,channel=2,1163:63]
[@2538,58169:58169=':',<COLON>,1163:64]
[@2539,58170:58170=' ',<WS>,channel=2,1163:65]
[@2540,58171:58178='TypeSide',<UPPER_ID>,1163:66]
[@2541,58179:58179=' ',<WS>,channel=2,1163:74]
[@2542,58180:58180='{',<LBRACE>,1163:75]
[@2543,58181:58185='\n    ',<WS>,channel=2,1163:76]
[@2544,58186:58201='entity_equations',<'entity_equations'>,1164:4]
[@2545,58202:58208='\n      ',<WS>,channel=2,1164:20]
[@2546,58209:58214='sSTSpn',<LOWER_ID>,1165:6]
[@2547,58215:58215='.',<DOT>,1165:12]
[@2548,58216:58220='Skill',<UPPER_ID>,1165:13]
[@2549,58221:58221=' ',<WS>,channel=2,1165:18]
[@2550,58222:58222='=',<EQUAL>,1165:19]
[@2551,58223:58223=' ',<WS>,channel=2,1165:20]
[@2552,58224:58229='sSPSpn',<LOWER_ID>,1165:21]
[@2553,58230:58230='.',<DOT>,1165:27]
[@2554,58231:58243='SpecificSkill',<UPPER_ID>,1165:28]
[@2555,58244:58250='\n      ',<WS>,channel=2,1165:41]
[@2556,58251:58256='sSTSpn',<LOWER_ID>,1166:6]
[@2557,58257:58257='.',<DOT>,1166:12]
[@2558,58258:58267='SkillClass',<UPPER_ID>,1166:13]
[@2559,58268:58268=' ',<WS>,channel=2,1166:23]
[@2560,58269:58269='=',<EQUAL>,1166:24]
[@2561,58270:58270=' ',<WS>,channel=2,1166:25]
[@2562,58271:58276='sSPSpn',<LOWER_ID>,1166:26]
[@2563,58277:58277='.',<DOT>,1166:32]
[@2564,58278:58287='SkillClass',<UPPER_ID>,1166:33]
[@2565,58288:58292='\n    ',<WS>,channel=2,1166:43]
[@2566,58293:58306='path_equations',<'path_equations'>,1167:4]
[@2567,58307:58313='\n      ',<WS>,channel=2,1167:18]
[@2568,58314:58337='sSTSpn_Skill_fk_HasClass',<LOWER_ID>,1168:6]
[@2569,58338:58338=' ',<WS>,channel=2,1168:30]
[@2570,58339:58339='=',<EQUAL>,1168:31]
[@2571,58340:58340=' ',<WS>,channel=2,1168:32]
[@2572,58341:58370='sSPSpn_SpecificSkill_fk_IsType',<LOWER_ID>,1168:33]
[@2573,58371:58371='.',<DOT>,1168:63]
[@2574,58372:58402='sSPSpn_GeneralSkill_fk_HasClass',<LOWER_ID>,1168:64]
[@2575,58403:58403='\n',<WS>,channel=2,1168:95]
[@2576,58404:58430='//    observation_equations',<LINE_COMMENT>,channel=2,1169:0]
[@2577,58431:58431='\n',<WS>,channel=2,1169:27]
[@2578,58432:58480='//      forall s. s.sSTSpn_SName = s.sSPSpn_SName',<LINE_COMMENT>,channel=2,1170:0]
[@2579,58481:58481='\n',<WS>,channel=2,1170:49]
[@2580,58482:58532='//      forall c. c.sSTSpn_SCName = c.sSPSpn_SCName',<LINE_COMMENT>,channel=2,1171:0]
[@2581,58533:58533='\n',<WS>,channel=2,1171:51]
[@2582,58534:58534='}',<RBRACE>,1172:0]
[@2583,58535:58536='\n\n',<WS>,channel=2,1172:1]
[@2584,58537:58544='md { (* ',<MARKDOWN>,1174:0]
[@2585,58545:59004='"\nAs we did in the construction of `S_T_SnT_Sum` we can relabel components in the colimit schema \nusing the modify command. An important point to notice is that attributes coming from different\nsource schemas must be maintained as distinct attributes in the colimit. This must be done even\nthough conceptually they may duplicate one another. This is essential as there is no guarantee\nthat different sources will be consistent in labeling equivalent records.\n"',<MD_MULTI_STRING>,1174:8]
[@2586,59005:59009=' *) }',<MD_END>,1180:1]
[@2587,59010:59010='\n',<WS>,channel=2,1180:6]
[@2588,59011:59024='schema_colimit',<'schema_colimit'>,1181:0]
[@2589,59025:59025=' ',<WS>,channel=2,1181:14]
[@2590,59026:59042='STSpn_SPSpn_CoLim',<UPPER_ID>,1181:15]
[@2591,59043:59043=' ',<WS>,channel=2,1181:32]
[@2592,59044:59044='=',<EQUAL>,1181:33]
[@2593,59045:59045=' ',<WS>,channel=2,1181:34]
[@2594,59046:59051='modify',<'modify'>,1181:35]
[@2595,59052:59052=' ',<WS>,channel=2,1181:41]
[@2596,59053:59073='STSpn_SPSpn_CoLimAuto',<UPPER_ID>,1181:42]
[@2597,59074:59074=' ',<WS>,channel=2,1181:63]
[@2598,59075:59075='{',<LBRACE>,1181:64]
[@2599,59076:59080='\n    ',<WS>,channel=2,1181:65]
[@2600,59081:59086='rename',<'rename'>,1182:4]
[@2601,59087:59087=' ',<WS>,channel=2,1182:10]
[@2602,59088:59095='entities',<'entities'>,1182:11]
[@2603,59096:59104='\n        ',<WS>,channel=2,1182:19]
[@2604,59105:59123='sSPSpn_GeneralSkill',<LOWER_ID>,1183:8]
[@2605,59124:59124=' ',<WS>,channel=2,1183:27]
[@2606,59125:59126='->',<RARROW>,1183:28]
[@2607,59127:59127=' ',<WS>,channel=2,1183:30]
[@2608,59128:59139='GeneralSkill',<UPPER_ID>,1183:31]
[@2609,59140:59148='\n        ',<WS>,channel=2,1183:43]
[@2610,59149:59161='sSPSpn_Person',<LOWER_ID>,1184:8]
[@2611,59162:59162=' ',<WS>,channel=2,1184:21]
[@2612,59163:59164='->',<RARROW>,1184:22]
[@2613,59165:59165=' ',<WS>,channel=2,1184:24]
[@2614,59166:59171='Person',<UPPER_ID>,1184:25]
[@2615,59172:59180='\n        ',<WS>,channel=2,1184:31]
[@2616,59181:59216='sSPSpn_SkillClass__sSTSpn_SkillClass',<LOWER_ID>,1185:8]
[@2617,59217:59217=' ',<WS>,channel=2,1185:44]
[@2618,59218:59219='->',<RARROW>,1185:45]
[@2619,59220:59220=' ',<WS>,channel=2,1185:47]
[@2620,59221:59230='SkillClass',<UPPER_ID>,1185:48]
[@2621,59231:59239='\n        ',<WS>,channel=2,1185:58]
[@2622,59240:59263='sSPSpn_SkillPrvdByPerson',<LOWER_ID>,1186:8]
[@2623,59264:59264=' ',<WS>,channel=2,1186:32]
[@2624,59265:59266='->',<RARROW>,1186:33]
[@2625,59267:59267=' ',<WS>,channel=2,1186:35]
[@2626,59268:59284='SkillPrvdByPerson',<UPPER_ID>,1186:36]
[@2627,59285:59293='\n        ',<WS>,channel=2,1186:53]
[@2628,59294:59327='sSPSpn_SpecificSkill__sSTSpn_Skill',<LOWER_ID>,1187:8]
[@2629,59328:59328=' ',<WS>,channel=2,1187:42]
[@2630,59329:59330='->',<RARROW>,1187:43]
[@2631,59331:59331=' ',<WS>,channel=2,1187:45]
[@2632,59332:59344='SpecificSkill',<UPPER_ID>,1187:46]
[@2633,59345:59353='\n        ',<WS>,channel=2,1187:59]
[@2634,59354:59373='sSTSpn_SkillNdFrTask',<LOWER_ID>,1188:8]
[@2635,59374:59374=' ',<WS>,channel=2,1188:28]
[@2636,59375:59376='->',<RARROW>,1188:29]
[@2637,59377:59377=' ',<WS>,channel=2,1188:31]
[@2638,59378:59390='SkillNdFrTask',<UPPER_ID>,1188:32]
[@2639,59391:59399='\n        ',<WS>,channel=2,1188:45]
[@2640,59400:59410='sSTSpn_Task',<LOWER_ID>,1189:8]
[@2641,59411:59411=' ',<WS>,channel=2,1189:19]
[@2642,59412:59413='->',<RARROW>,1189:20]
[@2643,59414:59414=' ',<WS>,channel=2,1189:22]
[@2644,59415:59418='Task',<UPPER_ID>,1189:23]
[@2645,59419:59423='\n    ',<WS>,channel=2,1189:27]
[@2646,59424:59429='rename',<'rename'>,1190:4]
[@2647,59430:59430=' ',<WS>,channel=2,1190:10]
[@2648,59431:59442='foreign_keys',<'foreign_keys'>,1190:11]
[@2649,59443:59451='\n        ',<WS>,channel=2,1190:23]
[@2650,59452:59464='SkillNdFrTask',<UPPER_ID>,1191:8]
[@2651,59465:59465='.',<DOT>,1191:21]
[@2652,59466:59466=' ',<WS>,channel=2,1191:22]
[@2653,59467:59501='sSTSpn_SkillNdFrTask_fk_SkillNeeded',<LOWER_ID>,1191:23]
[@2654,59502:59502=' ',<WS>,channel=2,1191:58]
[@2655,59503:59504='->',<RARROW>,1191:59]
[@2656,59505:59505=' ',<WS>,channel=2,1191:61]
[@2657,59506:59519='fk_SkillNeeded',<LOWER_ID>,1191:62]
[@2658,59520:59528='\n        ',<WS>,channel=2,1191:76]
[@2659,59529:59541='SkillNdFrTask',<UPPER_ID>,1192:8]
[@2660,59542:59542='.',<DOT>,1192:21]
[@2661,59543:59543=' ',<WS>,channel=2,1192:22]
[@2662,59544:59574='sSTSpn_SkillNdFrTask_fk_ForTask',<LOWER_ID>,1192:23]
[@2663,59575:59575=' ',<WS>,channel=2,1192:54]
[@2664,59576:59577='->',<RARROW>,1192:55]
[@2665,59578:59578=' ',<WS>,channel=2,1192:57]
[@2666,59579:59588='fk_ForTask',<LOWER_ID>,1192:58]
[@2667,59589:59597='\n        ',<WS>,channel=2,1192:68]
[@2668,59598:59614='SkillPrvdByPerson',<UPPER_ID>,1193:8]
[@2669,59615:59615='.',<DOT>,1193:25]
[@2670,59616:59616=' ',<WS>,channel=2,1193:26]
[@2671,59617:59649='sSPSpn_SkillPrvdByPerson_fk_SpP_S',<LOWER_ID>,1193:27]
[@2672,59650:59650=' ',<WS>,channel=2,1193:60]
[@2673,59651:59652='->',<RARROW>,1193:61]
[@2674,59653:59653=' ',<WS>,channel=2,1193:63]
[@2675,59654:59661='fk_SpP_S',<LOWER_ID>,1193:64]
[@2676,59662:59670='\n        ',<WS>,channel=2,1193:72]
[@2677,59671:59687='SkillPrvdByPerson',<UPPER_ID>,1194:8]
[@2678,59688:59688='.',<DOT>,1194:25]
[@2679,59689:59689=' ',<WS>,channel=2,1194:26]
[@2680,59690:59722='sSPSpn_SkillPrvdByPerson_fk_SpP_P',<LOWER_ID>,1194:27]
[@2681,59723:59723=' ',<WS>,channel=2,1194:60]
[@2682,59724:59725='->',<RARROW>,1194:61]
[@2683,59726:59726=' ',<WS>,channel=2,1194:63]
[@2684,59727:59734='fk_SpP_P',<LOWER_ID>,1194:64]
[@2685,59735:59743='\n        ',<WS>,channel=2,1194:72]
[@2686,59744:59756='SpecificSkill',<UPPER_ID>,1195:8]
[@2687,59757:59757='.',<DOT>,1195:21]
[@2688,59758:59758=' ',<WS>,channel=2,1195:22]
[@2689,59759:59788='sSPSpn_SpecificSkill_fk_IsType',<LOWER_ID>,1195:23]
[@2690,59789:59789=' ',<WS>,channel=2,1195:53]
[@2691,59790:59791='->',<RARROW>,1195:54]
[@2692,59792:59792=' ',<WS>,channel=2,1195:56]
[@2693,59793:59801='fk_IsType',<LOWER_ID>,1195:57]
[@2694,59802:59811=' \n        ',<WS>,channel=2,1195:66]
[@2695,59812:59823='GeneralSkill',<UPPER_ID>,1196:8]
[@2696,59824:59824='.',<DOT>,1196:20]
[@2697,59825:59825=' ',<WS>,channel=2,1196:21]
[@2698,59826:59856='sSPSpn_GeneralSkill_fk_HasClass',<LOWER_ID>,1196:22]
[@2699,59857:59857=' ',<WS>,channel=2,1196:53]
[@2700,59858:59859='->',<RARROW>,1196:54]
[@2701,59860:59860=' ',<WS>,channel=2,1196:56]
[@2702,59861:59871='fk_HasClass',<LOWER_ID>,1196:57]
[@2703,59872:59876='\n    ',<WS>,channel=2,1196:68]
[@2704,59877:59882='rename',<'rename'>,1197:4]
[@2705,59883:59883=' ',<WS>,channel=2,1197:10]
[@2706,59884:59893='attributes',<'attributes'>,1197:11]
[@2707,59894:59902='\n        ',<WS>,channel=2,1197:21]
[@2708,59903:59915='SkillNdFrTask',<UPPER_ID>,1198:8]
[@2709,59916:59916='.',<DOT>,1198:21]
[@2710,59917:59947='sSTSpn_SkillNdFrTask_skillclass',<LOWER_ID>,1198:22]
[@2711,59948:59948=' ',<WS>,channel=2,1198:53]
[@2712,59949:59950='->',<RARROW>,1198:54]
[@2713,59951:59951=' ',<WS>,channel=2,1198:56]
[@2714,59952:59965='ST_SCNameOnSnT',<UPPER_ID>,1198:57]
[@2715,59966:59974='\n        ',<WS>,channel=2,1198:71]
[@2716,59975:59984='SkillClass',<UPPER_ID>,1199:8]
[@2717,59985:59985='.',<DOT>,1199:18]
[@2718,59986:60009='sSPSpn_SkillClass_SCName',<LOWER_ID>,1199:19]
[@2719,60010:60010=' ',<WS>,channel=2,1199:43]
[@2720,60011:60012='->',<RARROW>,1199:44]
[@2721,60013:60013=' ',<WS>,channel=2,1199:46]
[@2722,60014:60022='SP_SCName',<UPPER_ID>,1199:47]
[@2723,60023:60031='\n        ',<WS>,channel=2,1199:56]
[@2724,60032:60044='SkillNdFrTask',<UPPER_ID>,1200:8]
[@2725,60045:60045='.',<DOT>,1200:21]
[@2726,60046:60070='sSTSpn_SkillNdFrTask_task',<LOWER_ID>,1200:22]
[@2727,60071:60071=' ',<WS>,channel=2,1200:47]
[@2728,60072:60073='->',<RARROW>,1200:48]
[@2729,60074:60074=' ',<WS>,channel=2,1200:50]
[@2730,60075:60087='ST_TNameOnSnT',<UPPER_ID>,1200:51]
[@2731,60088:60096='\n        ',<WS>,channel=2,1200:64]
[@2732,60097:60113='SkillPrvdByPerson',<UPPER_ID>,1201:8]
[@2733,60114:60114='.',<DOT>,1201:25]
[@2734,60115:60144='sSPSpn_SkillPrvdByPerson_skill',<LOWER_ID>,1201:26]
[@2735,60145:60145=' ',<WS>,channel=2,1201:56]
[@2736,60146:60147='->',<RARROW>,1201:57]
[@2737,60148:60148=' ',<WS>,channel=2,1201:59]
[@2738,60149:60161='ST_SNameOnSnT',<UPPER_ID>,1201:60]
[@2739,60162:60170='\n        ',<WS>,channel=2,1201:73]
[@2740,60171:60183='SpecificSkill',<UPPER_ID>,1202:8]
[@2741,60184:60184='.',<DOT>,1202:21]
[@2742,60185:60202='sSTSpn_Skill_SName',<LOWER_ID>,1202:22]
[@2743,60203:60203=' ',<WS>,channel=2,1202:40]
[@2744,60204:60205='->',<RARROW>,1202:41]
[@2745,60206:60206=' ',<WS>,channel=2,1202:43]
[@2746,60207:60216='ST_SklName',<UPPER_ID>,1202:44]
[@2747,60217:60225='\n        ',<WS>,channel=2,1202:54]
[@2748,60226:60229='Task',<UPPER_ID>,1203:8]
[@2749,60230:60230='.',<DOT>,1203:12]
[@2750,60231:60247='sSTSpn_Task_TName',<LOWER_ID>,1203:13]
[@2751,60248:60248=' ',<WS>,channel=2,1203:30]
[@2752,60249:60250='->',<RARROW>,1203:31]
[@2753,60251:60251=' ',<WS>,channel=2,1203:33]
[@2754,60252:60259='ST_TName',<UPPER_ID>,1203:34]
[@2755,60260:60268='\n        ',<WS>,channel=2,1203:42]
[@2756,60269:60278='SkillClass',<UPPER_ID>,1204:8]
[@2757,60279:60279='.',<DOT>,1204:18]
[@2758,60280:60303='sSTSpn_SkillClass_SCName',<LOWER_ID>,1204:19]
[@2759,60304:60304=' ',<WS>,channel=2,1204:43]
[@2760,60305:60306='->',<RARROW>,1204:44]
[@2761,60307:60307=' ',<WS>,channel=2,1204:46]
[@2762,60308:60316='ST_SCName',<UPPER_ID>,1204:47]
[@2763,60317:60325='\n        ',<WS>,channel=2,1204:56]
[@2764,60326:60338='SpecificSkill',<UPPER_ID>,1205:8]
[@2765,60339:60339='.',<DOT>,1205:21]
[@2766,60340:60363='sSTSpn_Skill_SCNameOnSkl',<LOWER_ID>,1205:22]
[@2767,60364:60364=' ',<WS>,channel=2,1205:46]
[@2768,60365:60366='->',<RARROW>,1205:47]
[@2769,60367:60367=' ',<WS>,channel=2,1205:49]
[@2770,60368:60380='ST_SCNameOnSS',<UPPER_ID>,1205:50]
[@2771,60381:60389='\n        ',<WS>,channel=2,1205:63]
[@2772,60390:60402='SpecificSkill',<UPPER_ID>,1206:8]
[@2773,60403:60403='.',<DOT>,1206:21]
[@2774,60404:60432='sSPSpn_SpecificSkill_SSGSName',<LOWER_ID>,1206:22]
[@2775,60433:60433=' ',<WS>,channel=2,1206:51]
[@2776,60434:60435='->',<RARROW>,1206:52]
[@2777,60436:60436=' ',<WS>,channel=2,1206:54]
[@2778,60437:60449='SP_GSNameOnSS',<UPPER_ID>,1206:55]
[@2779,60450:60458='\n        ',<WS>,channel=2,1206:68]
[@2780,60459:60471='SpecificSkill',<UPPER_ID>,1207:8]
[@2781,60472:60472='.',<DOT>,1207:21]
[@2782,60473:60499='sSPSpn_SpecificSkill_SSName',<LOWER_ID>,1207:22]
[@2783,60500:60500=' ',<WS>,channel=2,1207:49]
[@2784,60501:60502='->',<RARROW>,1207:50]
[@2785,60503:60503=' ',<WS>,channel=2,1207:52]
[@2786,60504:60512='SP_SSName',<UPPER_ID>,1207:53]
[@2787,60513:60521='\n        ',<WS>,channel=2,1207:62]
[@2788,60522:60534='SpecificSkill',<UPPER_ID>,1208:8]
[@2789,60535:60535='.',<DOT>,1208:21]
[@2790,60536:60564='sSPSpn_SpecificSkill_SSSCName',<LOWER_ID>,1208:22]
[@2791,60565:60565=' ',<WS>,channel=2,1208:51]
[@2792,60566:60567='->',<RARROW>,1208:52]
[@2793,60568:60568=' ',<WS>,channel=2,1208:54]
[@2794,60569:60581='SP_SCNameOnSS',<UPPER_ID>,1208:55]
[@2795,60582:60590='\n        ',<WS>,channel=2,1208:68]
[@2796,60591:60607='SkillPrvdByPerson',<UPPER_ID>,1209:8]
[@2797,60608:60608='.',<DOT>,1209:25]
[@2798,60609:60639='sSPSpn_SkillPrvdByPerson_person',<LOWER_ID>,1209:26]
[@2799,60640:60640=' ',<WS>,channel=2,1209:57]
[@2800,60641:60642='->',<RARROW>,1209:58]
[@2801,60643:60643=' ',<WS>,channel=2,1209:60]
[@2802,60644:60656='SP_PNameOnSnP',<UPPER_ID>,1209:61]
[@2803,60657:60665='\n        ',<WS>,channel=2,1209:74]
[@2804,60666:60678='SkillNdFrTask',<UPPER_ID>,1210:8]
[@2805,60679:60679='.',<DOT>,1210:21]
[@2806,60680:60705='sSTSpn_SkillNdFrTask_skill',<LOWER_ID>,1210:22]
[@2807,60706:60706=' ',<WS>,channel=2,1210:48]
[@2808,60707:60708='->',<RARROW>,1210:49]
[@2809,60709:60709=' ',<WS>,channel=2,1210:51]
[@2810,60710:60722='SP_SNameOnSnP',<UPPER_ID>,1210:52]
[@2811,60723:60731='\n        ',<WS>,channel=2,1210:65]
[@2812,60732:60737='Person',<UPPER_ID>,1211:8]
[@2813,60738:60738='.',<DOT>,1211:14]
[@2814,60739:60757='sSPSpn_Person_PName',<LOWER_ID>,1211:15]
[@2815,60758:60758=' ',<WS>,channel=2,1211:34]
[@2816,60759:60760='->',<RARROW>,1211:35]
[@2817,60761:60761=' ',<WS>,channel=2,1211:37]
[@2818,60762:60769='SP_PName',<UPPER_ID>,1211:38]
[@2819,60770:60778='\n        ',<WS>,channel=2,1211:46]
[@2820,60779:60790='GeneralSkill',<UPPER_ID>,1212:8]
[@2821,60791:60791='.',<DOT>,1212:20]
[@2822,60792:60819='sSPSpn_GeneralSkill_GSSCName',<LOWER_ID>,1212:21]
[@2823,60820:60820=' ',<WS>,channel=2,1212:49]
[@2824,60821:60822='->',<RARROW>,1212:50]
[@2825,60823:60823=' ',<WS>,channel=2,1212:52]
[@2826,60824:60836='SP_SCNameOnGS',<UPPER_ID>,1212:53]
[@2827,60837:60845='\n        ',<WS>,channel=2,1212:66]
[@2828,60846:60857='GeneralSkill',<UPPER_ID>,1213:8]
[@2829,60858:60858='.',<DOT>,1213:20]
[@2830,60859:60884='sSPSpn_GeneralSkill_GSName',<LOWER_ID>,1213:21]
[@2831,60885:60885=' ',<WS>,channel=2,1213:47]
[@2832,60886:60887='->',<RARROW>,1213:48]
[@2833,60888:60888=' ',<WS>,channel=2,1213:50]
[@2834,60889:60897='SP_GSName',<UPPER_ID>,1213:51]
[@2835,60898:60902='\n    ',<WS>,channel=2,1213:60]
[@2836,60903:60908='remove',<'remove'>,1214:4]
[@2837,60909:60909=' ',<WS>,channel=2,1214:10]
[@2838,60910:60921='foreign_keys',<'foreign_keys'>,1214:11]
[@2839,60922:60934='    \n        ',<WS>,channel=2,1214:23]
[@2840,60935:60947='SpecificSkill',<UPPER_ID>,1215:8]
[@2841,60948:60948='.',<DOT>,1215:21]
[@2842,60949:60972='sSTSpn_Skill_fk_HasClass',<LOWER_ID>,1215:22]
[@2843,60973:60973=' ',<WS>,channel=2,1215:46]
[@2844,60974:60975='->',<RARROW>,1215:47]
[@2845,60976:60976=' ',<WS>,channel=2,1215:49]
[@2846,60977:60985='fk_IsType',<LOWER_ID>,1215:50]
[@2847,60986:60986='.',<DOT>,1215:59]
[@2848,60987:60997='fk_HasClass',<LOWER_ID>,1215:60]
[@2849,60998:60998='\n',<WS>,channel=2,1215:71]
[@2850,60999:60999='}',<RBRACE>,1216:0]
[@2851,61000:61001='\n\n',<WS>,channel=2,1216:1]
[@2852,61002:61009='md { (* ',<MARKDOWN>,1218:0]
[@2853,61010:61111='"\nProvide addressable labels for the various components of the `schema_colimit` `STSpn_SPSpn_CoLim`.\n"',<MD_MULTI_STRING>,1218:8]
[@2854,61112:61116=' *) }',<MD_END>,1220:1]
[@2855,61117:61117='\n',<WS>,channel=2,1220:6]
[@2856,61118:61123='schema',<'schema'>,1221:0]
[@2857,61124:61124=' ',<WS>,channel=2,1221:6]
[@2858,61125:61142='sSTSpn_SPSpn_CoLim',<LOWER_ID>,1221:7]
[@2859,61143:61143=' ',<WS>,channel=2,1221:25]
[@2860,61144:61144='=',<EQUAL>,1221:26]
[@2861,61145:61145=' ',<WS>,channel=2,1221:27]
[@2862,61146:61154='getSchema',<'getSchema'>,1221:28]
[@2863,61155:61155=' ',<WS>,channel=2,1221:37]
[@2864,61156:61172='STSpn_SPSpn_CoLim',<UPPER_ID>,1221:38]
[@2865,61173:61173='\n',<WS>,channel=2,1221:55]
[@2866,61174:61180='mapping',<'mapping'>,1222:0]
[@2867,61181:61181=' ',<WS>,channel=2,1222:7]
[@2868,61182:61206='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1222:8]
[@2869,61207:61207=' ',<WS>,channel=2,1222:33]
[@2870,61208:61208='=',<EQUAL>,1222:34]
[@2871,61209:61209=' ',<WS>,channel=2,1222:35]
[@2872,61210:61219='getMapping',<'getMapping'>,1222:36]
[@2873,61220:61220=' ',<WS>,channel=2,1222:46]
[@2874,61221:61237='STSpn_SPSpn_CoLim',<UPPER_ID>,1222:47]
[@2875,61238:61238=' ',<WS>,channel=2,1222:64]
[@2876,61239:61244='sSTSpn',<LOWER_ID>,1222:65]
[@2877,61245:61245='\n',<WS>,channel=2,1222:71]
[@2878,61246:61252='mapping',<'mapping'>,1223:0]
[@2879,61253:61253=' ',<WS>,channel=2,1223:7]
[@2880,61254:61278='mSPSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1223:8]
[@2881,61279:61279=' ',<WS>,channel=2,1223:33]
[@2882,61280:61280='=',<EQUAL>,1223:34]
[@2883,61281:61281=' ',<WS>,channel=2,1223:35]
[@2884,61282:61291='getMapping',<'getMapping'>,1223:36]
[@2885,61292:61292=' ',<WS>,channel=2,1223:46]
[@2886,61293:61309='STSpn_SPSpn_CoLim',<UPPER_ID>,1223:47]
[@2887,61310:61310=' ',<WS>,channel=2,1223:64]
[@2888,61311:61316='sSPSpn',<LOWER_ID>,1223:65]
[@2889,61317:61318='\n\n',<WS>,channel=2,1223:71]
[@2890,61319:61326='md { (* ',<MARKDOWN>,1225:0]
[@2891,61327:61626='"\nAgain as we did with the instances coming from the disjoint schemas `sS`, `sT`, and `sSnT`, we must deal \nwith the instance data coming from the two imports. We use `coproduct_sigma` to land those two\ninstances into the assembled `colimit_schema` of the two sources schemas `sSTSpn` and `sSPSpn`.\n"',<MD_MULTI_STRING>,1225:8]
[@2892,61627:61631=' *) }',<MD_END>,1229:1]
[@2893,61632:61632='\n',<WS>,channel=2,1229:6]
[@2894,61633:61640='instance',<'instance'>,1230:0]
[@2895,61641:61641=' ',<WS>,channel=2,1230:8]
[@2896,61642:61651='iST_SP_Sum',<LOWER_ID>,1230:9]
[@2897,61652:61652=' ',<WS>,channel=2,1230:19]
[@2898,61653:61653='=',<EQUAL>,1230:20]
[@2899,61654:61654=' ',<WS>,channel=2,1230:21]
[@2900,61655:61669='coproduct_sigma',<'coproduct_sigma'>,1230:22]
[@2901,61670:61673='\n   ',<WS>,channel=2,1230:37]
[@2902,61674:61698='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1231:3]
[@2903,61699:61699=' ',<WS>,channel=2,1231:28]
[@2904,61700:61708='iSTSpnImp',<LOWER_ID>,1231:29]
[@2905,61709:61712='\n   ',<WS>,channel=2,1231:38]
[@2906,61713:61737='mSPSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1232:3]
[@2907,61738:61738=' ',<WS>,channel=2,1232:28]
[@2908,61739:61747='iSPSpnImp',<LOWER_ID>,1232:29]
[@2909,61748:61751='\n   ',<WS>,channel=2,1232:38]
[@2910,61752:61752=':',<COLON>,1233:3]
[@2911,61753:61753=' ',<WS>,channel=2,1233:4]
[@2912,61754:61771='sSTSpn_SPSpn_CoLim',<LOWER_ID>,1233:5]
[@2913,61772:61773='\n\n',<WS>,channel=2,1233:23]
[@2914,61774:61781='md { (* ',<MARKDOWN>,1235:0]
[@2915,61782:62747='"\nIn order to make instance assembly clear we illustrate two equivalent methods. The second method \nhas the same preconditions as the first but performs the record linking transparently as part of\nthe import process. \n\nMerging records by importing a link table and transforms from tables constructed externally.\n\nIn this sequence we create external tables using SQL statements against the tables generated in\nthe export. The essence of this approach is matching records based on attributes. Clearly this\nwill only work if we can get exact string matches. This process can be generalized using any\nnumber of technical enhancements to include fuzzing matching using things like edit distance or\nmatching through machine learning approaches.\n\nAs is well known reliable integration depends on standardization and/or investment in the\nconstruction of translations between systems that make use of different reference information,\ne.g. skill classification in this case.\n"',<MD_MULTI_STRING>,1235:8]
[@2916,62748:62752=' *) }',<MD_END>,1251:1]
[@2917,62753:62754='\n\n',<WS>,channel=2,1251:6]
[@2918,62755:62827='// Set up the SkillMatch and SkillClassMatch tables based on the exports.',<LINE_COMMENT>,channel=2,1253:0]
[@2919,62828:62828='\n',<WS>,channel=2,1253:73]
[@2920,62829:62835='command',<'command'>,1254:0]
[@2921,62836:62836=' ',<WS>,channel=2,1254:7]
[@2922,62837:62852='pSetUpSkillMatch',<LOWER_ID>,1254:8]
[@2923,62853:62853=' ',<WS>,channel=2,1254:24]
[@2924,62854:62854='=',<EQUAL>,1254:25]
[@2925,62855:62855=' ',<WS>,channel=2,1254:26]
[@2926,62856:62864='exec_jdbc',<'exec_jdbc'>,1254:27]
[@2927,62865:62865=' ',<WS>,channel=2,1254:36]
[@2928,62866:62888='"com.mysql.jdbc.Driver"',<STRING>,1254:37]
[@2929,62889:62889='\n',<WS>,channel=2,1254:60]
[@2930,62890:62966='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1255:0]
[@2931,62967:62967=' ',<WS>,channel=2,1255:77]
[@2932,62968:62968='{',<LBRACE>,1255:78]
[@2933,62969:62969='\n',<WS>,channel=2,1255:79]
[@2934,62970:63002='"DROP TABLE IF EXISTS SkillMatch"',<STRING>,1256:0]
[@2935,63003:63003='\n',<WS>,channel=2,1256:33]
[@2936,63004:63041='"DROP TABLE IF EXISTS SkillClassMatch"',<STRING>,1257:0]
[@2937,63042:63043='\n\n',<WS>,channel=2,1257:38]
[@2938,63044:63284='"create table SkillMatch as\nselect\n  concat('s', t.id) as sm_id,\n  p.id as ps_id,\n  t.id as ts_id,\n  t.fk_HasClass\nfrom\n  sps_SpecificSkill p\n  join sts_Skill t\n    on p.SSName = t.SName\n  join sps_GeneralSkill gs\n    on p.fk_IsType = gs.id"',<MULTI_STRING>,1259:0]
[@2939,63285:63286='\n\n',<WS>,channel=2,1270:27]
[@2940,63287:63474='"create table SkillClassMatch as\nselect\n  concat('sc', t.id) as scm_id,\n  p.id as psc_id,\n  t.id as tsc_id\nfrom\n  sps_SkillClass as p\n  join sts_SkillClass as t\n    on p.SCName = t.SCName"',<MULTI_STRING>,1272:0]
[@2941,63475:63475='\n',<WS>,channel=2,1280:27]
[@2942,63476:63476='}',<RBRACE>,1281:0]
[@2943,63477:63478='\n\n',<WS>,channel=2,1281:1]
[@2944,63479:65810='/* import joined and import as theory are both discouraged\nmd { (* "\nNotice that this instance import is very different than the ones we used to import `iSTSpnImp` and\n`iSPSpnImp`. We have neglected to specify all entities and of the entities we have specified we\nare only importing the ids. In order to accomplish this we must first specify the `import_joined` \noption as false. This allows us to import each attribute in a separate select statement. In this \ncase we are only interested in the generators and so only one select statement is specified for \neach incoming entity. The second option we need to override is specify that we import the \ninstance as a theory. This incurs the theorem proving burden of a literal instance declaration \nbut allows for a partial specification of the instance. The consequence of these two options is \nto allow us to import an instance that essentially the same as the literal `iSklLnk` instance\nabove.\n" *) }\ninstance iSkillMatch = import_jdbc "com.mysql.jdbc.Driver"\n"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr" : sSTSpn_SPSpn_CoLim {\n    SpecificSkill -> "select * from SkillMatch"\n    SkillClass -> "select * from SkillClassMatch"\noptions\n  import_joined = false\n  import_as_theory = true\n}\n\nmd { (* "\nThe pair of transform imports below like the instance transform above are restricted to record\nids. It may be instructive to compare the results of the `iSkillMatch` instance and `tSMToSTSpn` and \n`tSMToSPSpn` transforms with the literal `iSLnk` instance and the literal `tS1` and `tS2` transforms we\ncreated to merge skill class Skolem terms with skill class generators and labels.\n" *) }\ntransform tSMToSTSpn = import_jdbc "com.mysql.jdbc.Driver"\n    "jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr" : iSkillMatch -> iST_SP_Sum {\n    SpecificSkill -> "select sm_id, ts_id from SkillMatch"\n    SkillClass -> "select scm_id, tsc_id from SkillClassMatch"\n}\n\ntransform tSMToSPSpn = import_jdbc "com.mysql.jdbc.Driver"\n    "jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr" : iSkillMatch -> iST_SP_Sum {\n    SpecificSkill -> "select sm_id, ps_id from SkillMatch"\n    SkillClass -> "select scm_id, psc_id from SkillClassMatch"\n}\n\ninstance iSTSpn_SPSpn_Merge1 = coequalize tSMToSTSpn tSMToSPSpn\n*\n*\n */',<BLOCK_COMMENT>,channel=4,1283:0]
[@2945,65811:65811='\n',<WS>,channel=2,1326:3]
[@2946,65812:65819='md { (* ',<MARKDOWN>,1327:0]
[@2947,65820:66039='"\nWe import everything in one go using the `quotient_jdbc` import.\nIt is important to note that this does require the construction of the `SkillMatch` and\n`SkillClassMatch` tables in the source RDBMS as a precondition.\n"',<MD_MULTI_STRING>,1327:8]
[@2948,66040:66044=' *) }',<MD_END>,1331:1]
[@2949,66045:66045='\n',<WS>,channel=2,1331:6]
[@2950,66046:66053='instance',<'instance'>,1332:0]
[@2951,66054:66054=' ',<WS>,channel=2,1332:8]
[@2952,66055:66073='iSTSpn_SPSpn_Merge2',<LOWER_ID>,1332:9]
[@2953,66074:66074=' ',<WS>,channel=2,1332:28]
[@2954,66075:66075='=',<EQUAL>,1332:29]
[@2955,66076:66076=' ',<WS>,channel=2,1332:30]
[@2956,66077:66089='quotient_jdbc',<'quotient_jdbc'>,1332:31]
[@2957,66090:66090=' ',<WS>,channel=2,1332:44]
[@2958,66091:66113='"com.mysql.jdbc.Driver"',<STRING>,1332:45]
[@2959,66114:66118='\n    ',<WS>,channel=2,1332:68]
[@2960,66119:66195='"jdbc:mysql://mysql.catinf.com:3306/ci_test?user=catinfcom&password=FDiUY!pr"',<STRING>,1333:4]
[@2961,66196:66196=' ',<WS>,channel=2,1333:81]
[@2962,66197:66206='iST_SP_Sum',<LOWER_ID>,1333:82]
[@2963,66207:66207=' ',<WS>,channel=2,1333:92]
[@2964,66208:66208='{',<LBRACE>,1333:93]
[@2965,66209:66210=' \n',<WS>,channel=2,1333:94]
[@2966,66211:66223='SpecificSkill',<UPPER_ID>,1334:0]
[@2967,66224:66225='->',<RARROW>,1334:13]
[@2968,66226:66226='\n',<WS>,channel=2,1334:15]
[@2969,66227:66290='"select\n   ps_id as sp_id,\n   ts_id as st_id\nfrom\n   SkillMatch"',<MULTI_STRING>,1335:0]
[@2970,66291:66292='\n\n',<WS>,channel=2,1339:14]
[@2971,66293:66302='SkillClass',<UPPER_ID>,1341:0]
[@2972,66303:66304='->',<RARROW>,1341:10]
[@2973,66305:66305='\n',<WS>,channel=2,1341:12]
[@2974,66306:66376='"select\n   psc_id as sp_id,\n   tsc_id as st_id\nfrom\n   SkillClassMatch"',<MULTI_STRING>,1342:0]
[@2975,66377:66377='\n',<WS>,channel=2,1346:19]
[@2976,66378:66378='}',<RBRACE>,1347:0]
[@2977,66379:66380='\n\n',<WS>,channel=2,1347:1]
[@2978,66381:66388='md { (* ',<MARKDOWN>,1349:0]
[@2979,66389:66783='"\nPrior to wrapping up let's return to an examination of the data migration functors sigma, delta \nand pi as well as their connection with querying. We mentioned before that the `coproduct_sigma` \ncould be constructed into first the migration of instances separately into the colimit schema and \nthen taking the coproduct of each result. Let's examine what some of those intermediate steps do.\n"',<MD_MULTI_STRING>,1349:8]
[@2980,66784:66788=' *) }',<MD_END>,1354:1]
[@2981,66789:66789='\n',<WS>,channel=2,1354:6]
[@2982,66790:66797='instance',<'instance'>,1355:0]
[@2983,66798:66798=' ',<WS>,channel=2,1355:8]
[@2984,66799:66814='iSTSpnImpInCoLim',<LOWER_ID>,1355:9]
[@2985,66815:66815=' ',<WS>,channel=2,1355:25]
[@2986,66816:66816='=',<EQUAL>,1355:26]
[@2987,66817:66817=' ',<WS>,channel=2,1355:27]
[@2988,66818:66822='sigma',<'sigma'>,1355:28]
[@2989,66823:66823=' ',<WS>,channel=2,1355:33]
[@2990,66824:66848='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1355:34]
[@2991,66849:66849=' ',<WS>,channel=2,1355:59]
[@2992,66850:66858='iSTSpnImp',<LOWER_ID>,1355:60]
[@2993,66859:66860='\n\n',<WS>,channel=2,1355:69]
[@2994,66861:66868='md { (* ',<MARKDOWN>,1357:0]
[@2995,66869:67574='"\nAs you can see by inspecting the runtime result we have loaded the instance `iSTSpnImp` into the\nassembled schema we created using the colimit. Since there are entities in the colimit schema\nnot present in `sSTSpn`. You will notice that some entities are empty; in particular, those \nentities that arose from `sSPSpn`. There are also Skolem terms that are generated due to the \nintroduction `GeneralSkill` referenced by `SpecialSkill` not present in `sSTSpn`.\n\nLet's close the loop using delta right adjoint to sigma. We present the instance generated by\nsigma above to delta at the same map. We have pushed `iSTSpnImp` forward through sigma and then\npulled the result back through the same schema map.\n"',<MD_MULTI_STRING>,1357:8]
[@2996,67575:67579=' *) }',<MD_END>,1367:1]
[@2997,67580:67581='\n\n',<WS>,channel=2,1367:6]
[@2998,67582:67589='instance',<'instance'>,1369:0]
[@2999,67590:67590=' ',<WS>,channel=2,1369:8]
[@3000,67591:67605='iSgmDltSTSpnImp',<LOWER_ID>,1369:9]
[@3001,67606:67606=' ',<WS>,channel=2,1369:24]
[@3002,67607:67607='=',<EQUAL>,1369:25]
[@3003,67608:67608=' ',<WS>,channel=2,1369:26]
[@3004,67609:67613='delta',<'delta'>,1369:27]
[@3005,67614:67614=' ',<WS>,channel=2,1369:32]
[@3006,67615:67639='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1369:33]
[@3007,67640:67640=' ',<WS>,channel=2,1369:58]
[@3008,67641:67656='iSTSpnImpInCoLim',<LOWER_ID>,1369:59]
[@3009,67657:67658='\n\n',<WS>,channel=2,1369:75]
[@3010,67659:67666='md { (* ',<MARKDOWN>,1371:0]
[@3011,67667:68043='"\nWe see an instance that looks the same as `iSTSpnImp` originally imported. Intuitively we can think \nof this as delta projecting the part of the colimit schema instance back into the schema from \nwhich it came. It should not be surprising that this would yield the identity. This can be \nverified by looking at the unit transform and comparing it to the identity transform.\n"',<MD_MULTI_STRING>,1371:8]
[@3012,68044:68048=' *) }',<MD_END>,1376:1]
[@3013,68049:68049='\n',<WS>,channel=2,1376:6]
[@3014,68050:68058='transform',<'transform'>,1377:0]
[@3015,68059:68059=' ',<WS>,channel=2,1377:9]
[@3016,68060:68064='tUnit',<LOWER_ID>,1377:10]
[@3017,68065:68065=' ',<WS>,channel=2,1377:15]
[@3018,68066:68066='=',<EQUAL>,1377:16]
[@3019,68067:68067=' ',<WS>,channel=2,1377:17]
[@3020,68068:68071='unit',<'unit'>,1377:18]
[@3021,68072:68072=' ',<WS>,channel=2,1377:22]
[@3022,68073:68097='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1377:23]
[@3023,68098:68098=' ',<WS>,channel=2,1377:48]
[@3024,68099:68107='iSTSpnImp',<LOWER_ID>,1377:49]
[@3025,68108:68108='\n',<WS>,channel=2,1377:58]
[@3026,68109:68117='transform',<'transform'>,1378:0]
[@3027,68118:68118=' ',<WS>,channel=2,1378:9]
[@3028,68119:68129='tIdSTSpnImp',<LOWER_ID>,1378:10]
[@3029,68130:68130=' ',<WS>,channel=2,1378:21]
[@3030,68131:68131='=',<EQUAL>,1378:22]
[@3031,68132:68132=' ',<WS>,channel=2,1378:23]
[@3032,68133:68140='identity',<'identity'>,1378:24]
[@3033,68141:68141=' ',<WS>,channel=2,1378:32]
[@3034,68142:68150='iSTSpnImp',<LOWER_ID>,1378:33]
[@3035,68151:68152='\n\n',<WS>,channel=2,1378:42]
[@3036,68153:68160='md { (* ',<MARKDOWN>,1380:0]
[@3037,68161:70013='"\nThe `SkillClass` transform output is not immediately obviously the identity, but if you unravel the \nprovenance you will find that it is. Start by looking at instance `iSTSpnImp` and you will see for\nentity Skill:\n\n    ID     SCNameOnSkl    fk_HasClass\n    ---    -----------    -----------\n    100    Cognitive      122\n    ...    ...            ...\n    102    Social         120\n    ...    ...            ...\n    105    Psychomotor    121\n\nNow look at the result of the quotient on the schema colimit in any of the three instances above, \nsay `iSTSpn_SPSpn_Merge3`. Specifically the `SkillClass` entity:\n\n    ID                             ST_SCName\n    ---------------------------    -----------\n    [100.fk_IsType.fk_HasClass]    Cognitive\n    [102.fk_IsType.fk_HasClass]    Social\n    [105.fk_IsType.fk_HasClass]    Psychomotor\n\nFinally look at the instance `iSgmDltSTSpnImp` and you will see for `SkillClass`:\n\n    ID                                         ST_SCName\n    ---------------------------------------    -----------\n    <SkillClass[100.fk_IsType.fk_HasClass]>    Cognitive\n    <SkillClass[102.fk_IsType.fk_HasClass]>    Social\n    <SkillClass[105.fk_IsType.fk_HasClass]>    Psychomotor\n\nWe can conclude:\n\n    <SkillClass[100.fk_IsType.fk_HasClass]>    -> 122\n    <SkillClass[102.fk_IsType.fk_HasClass]>    -> 120\n    <SkillClass[105.fk_IsType.fk_HasClass]>    -> 121 \n\nLet's try the other direction. We start with the merged instance in the schema colimit and use \ndelta to project back through the mapping that inserted the schema `sSTSpn` into the schema \ncolimit. As you would expect you loose almost all of the data that was supplied by `iSPSpnImp`. We \nnow have 11 skills rather than the 10 skills provided by `iSTSpnImp` and so have picked up an \nadditional Skolem term due to the \"dancing\" skill that came from `iSPSpnImp`.\n"',<MD_MULTI_STRING>,1380:8]
[@3038,70014:70018=' *) }',<MD_END>,1421:1]
[@3039,70019:70019='\n',<WS>,channel=2,1421:6]
[@3040,70020:70027='instance',<'instance'>,1422:0]
[@3041,70028:70028=' ',<WS>,channel=2,1422:8]
[@3042,70029:70041='iCoLimInSTSpn',<LOWER_ID>,1422:9]
[@3043,70042:70042=' ',<WS>,channel=2,1422:22]
[@3044,70043:70043='=',<EQUAL>,1422:23]
[@3045,70044:70044=' ',<WS>,channel=2,1422:24]
[@3046,70045:70049='delta',<'delta'>,1422:25]
[@3047,70050:70050=' ',<WS>,channel=2,1422:30]
[@3048,70051:70075='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1422:31]
[@3049,70076:70076=' ',<WS>,channel=2,1422:56]
[@3050,70077:70095='iSTSpn_SPSpn_Merge2',<LOWER_ID>,1422:57]
[@3051,70096:70097='\n\n',<WS>,channel=2,1422:76]
[@3052,70098:70105='md { (* ',<MARKDOWN>,1424:0]
[@3053,70106:70474='"\nSigma then pushes this projected instance back into the schema colimit and we end up with an\ninstance that looks like the one sigma pushed forward from `iSTSpnImp` but with the extra skill\nrecord. The round trip has eliminated all traces of `iSTSpn_SPSpn_Merge3` that came from `iSPSpnImp`\nexcept the record that additional \"Dancing\" skill that is now Skolemized.\n"',<MD_MULTI_STRING>,1424:8]
[@3054,70475:70479=' *) }',<MD_END>,1429:1]
[@3055,70480:70480='\n',<WS>,channel=2,1429:6]
[@3056,70481:70488='instance',<'instance'>,1430:0]
[@3057,70489:70489=' ',<WS>,channel=2,1430:8]
[@3058,70490:70501='iDltSgmCoLim',<LOWER_ID>,1430:9]
[@3059,70502:70502=' ',<WS>,channel=2,1430:21]
[@3060,70503:70503='=',<EQUAL>,1430:22]
[@3061,70504:70504=' ',<WS>,channel=2,1430:23]
[@3062,70505:70509='sigma',<'sigma'>,1430:24]
[@3063,70510:70510=' ',<WS>,channel=2,1430:29]
[@3064,70511:70535='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1430:30]
[@3065,70536:70536=' ',<WS>,channel=2,1430:55]
[@3066,70537:70549='iCoLimInSTSpn',<LOWER_ID>,1430:56]
[@3067,70550:70550='\n',<WS>,channel=2,1430:69]
[@3068,70551:70559='transform',<'transform'>,1431:0]
[@3069,70560:70560=' ',<WS>,channel=2,1431:9]
[@3070,70561:70567='tCounit',<LOWER_ID>,1431:10]
[@3071,70568:70568=' ',<WS>,channel=2,1431:17]
[@3072,70569:70569='=',<EQUAL>,1431:18]
[@3073,70570:70570=' ',<WS>,channel=2,1431:19]
[@3074,70571:70576='counit',<'counit'>,1431:20]
[@3075,70577:70577=' ',<WS>,channel=2,1431:26]
[@3076,70578:70602='mSTSpnToSTSpn_SPSpn_CoLim',<LOWER_ID>,1431:27]
[@3077,70603:70603=' ',<WS>,channel=2,1431:52]
[@3078,70604:70622='iSTSpn_SPSpn_Merge2',<LOWER_ID>,1431:53]
[@3079,70623:70624='\n\n',<WS>,channel=2,1431:72]
[@3080,70625:70632='md { (* ',<MARKDOWN>,1433:0]
[@3081,70633:70732='"\nThe counit transform injects `iDltSgmColim` back into the merged instance `iSTSpn_SPSpn_Merge3`.\n"',<MD_MULTI_STRING>,1433:8]
[@3082,70733:70737=' *) }',<MD_END>,1435:1]
[@3083,70738:70739='\n\n',<WS>,channel=2,1435:6]
[@3084,70740:71415='/*\nmd { (* "\nAdditional work that could be added to this tutorial in a later release:\n \n  1. Examples of how relational nulls are handled when imported into AQL. This could be done\n     easily by creating an alternative to `iS_T_SnT_Sum` by replacing `iSklSklCls1` with `iSkl`.\n     Following that repeat all dependent constructions to see how null values appear on export\n     and then are translated when imported.\n     \n  2. Follow the discussion above with additional constructions illustrating the connections\n     between sigma, delta and pi and eval and coeval.\n     \n  3. Develop some examples of how one can use uber flowers to create data warehouse marts.\n\n" *) }\n*/',<BLOCK_COMMENT>,channel=4,1437:0]
[@3085,71416:71417='\n\n',<WS>,channel=2,1452:2]
[@3086,71418:71427='html { (* ',<HTML>,1454:0]
[@3087,71428:71444='"\n</body></html>"',<HTML_MULTI_STRING>,1454:10]
[@3088,71445:71449=' *) }',<HTML_END>,1455:15]
[@3089,71450:71453='\t\n\n\n',<WS>,channel=2,1455:20]
[@3090,71454:71453='<EOF>',<EOF>,1458:0]
