(file (program (kindDeclaration (typesideAssignment typeside (typesideId (symbol Type)) = (typesideExp literal { (typesideLiteralSection types (typesideTypeSig (typesideTypeId (symbol String))) constants (typesideConstantSig (typesideConstantId gecko) (typesideConstantId frog) (typesideConstantId human) (typesideConstantId cow) (typesideConstantId horse) (typesideConstantId dolphin) (typesideConstantId fish) : (typesideTypeId (symbol String))) allOptions) }))) (kindDeclaration (schemaAssignment schema (schemaId (symbol C)) = (schemaExp literal : (typesideKind (typesideRef (symbol Type))) { (schemaLiteralSection entities (schemaEntityId (symbol Amphibian)) (schemaEntityId (symbol LandAnimal)) (schemaEntityId (symbol WaterAnimal)) foreign_keys (schemaForeignSig (schemaForeignId (symbol IsAL)) : (schemaEntityId (symbol Amphibian)) -> (schemaEntityId (symbol LandAnimal))) (schemaForeignSig (schemaForeignId (symbol IsAW)) : (schemaEntityId (symbol Amphibian)) -> (schemaEntityId (symbol WaterAnimal))) attributes (schemaAttributeSig (schemaAttributeId (symbol attA)) : (schemaEntityId (symbol Amphibian)) -> (typesideTypeId (symbol String))) (schemaAttributeSig (schemaAttributeId (symbol attL)) : (schemaEntityId (symbol LandAnimal)) -> (typesideTypeId (symbol String))) (schemaAttributeSig (schemaAttributeId (symbol attW)) : (schemaEntityId (symbol WaterAnimal)) -> (typesideTypeId (symbol String))) allOptions) }))) (kindDeclaration (instanceAssignment instance (instanceId (symbol I)) = (instanceExp literal : (schemaKind (schemaRef (symbol C))) { (instanceLiteralSection generators (instanceLiteralGen (instanceGenId (symbol a1)) (instanceGenId (symbol a2)) : (schemaEntityId (symbol Amphibian))) (instanceLiteralGen (instanceGenId (symbol l1)) (instanceGenId (symbol l2)) (instanceGenId (symbol l3)) (instanceGenId (symbol l4)) (instanceGenId (symbol l5)) : (schemaEntityId (symbol LandAnimal))) (instanceLiteralGen (instanceGenId (symbol w1)) (instanceGenId (symbol w2)) (instanceGenId (symbol w3)) (instanceGenId (symbol w4)) : (schemaEntityId (symbol WaterAnimal))) equations (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attA))) ( (instancePath (instanceArrowId (schemaEntityId (symbol a1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attA))) ( (instancePath (instanceArrowId (schemaEntityId (symbol a2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol l1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol l2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol l3)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol human)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol l4)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol cow)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol l5)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol horse)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol w1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol fish)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol w2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol w3)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol w4)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol dolphin)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol IsAL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol a1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol l1)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol IsAL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol a2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol l2)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol IsAW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol a1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol w2)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol IsAW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol a2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol w3)))))) allOptions) }))) (kindDeclaration (schemaAssignment schema (schemaId (symbol D)) = (schemaExp literal : (typesideKind (typesideRef (symbol Type))) { (schemaLiteralSection entities (schemaEntityId (symbol yAmphibian)) (schemaEntityId (symbol yLandAnimal)) (schemaEntityId (symbol yWaterAnimal)) (schemaEntityId (symbol yAnimal)) foreign_keys (schemaForeignSig (schemaForeignId (symbol yIsAL)) : (schemaEntityId (symbol yAmphibian)) -> (schemaEntityId (symbol yLandAnimal))) (schemaForeignSig (schemaForeignId (symbol yIsAW)) : (schemaEntityId (symbol yAmphibian)) -> (schemaEntityId (symbol yWaterAnimal))) (schemaForeignSig (schemaForeignId (symbol yIsALL)) : (schemaEntityId (symbol yLandAnimal)) -> (schemaEntityId (symbol yAnimal))) (schemaForeignSig (schemaForeignId (symbol yIsAWW)) : (schemaEntityId (symbol yWaterAnimal)) -> (schemaEntityId (symbol yAnimal))) path_equations (schemaPathEqnSig (schemaPath (schemaPath (schemaArrowId (schemaEntityId (symbol yIsAL)))) . (schemaArrowId (schemaEntityId (symbol yIsALL)))) = (schemaPath (schemaPath (schemaArrowId (schemaEntityId (symbol yIsAW)))) . (schemaArrowId (schemaEntityId (symbol yIsAWW))))) attributes (schemaAttributeSig (schemaAttributeId (symbol yattA)) : (schemaEntityId (symbol yAmphibian)) -> (typesideTypeId (symbol String))) (schemaAttributeSig (schemaAttributeId (symbol yattL)) : (schemaEntityId (symbol yLandAnimal)) -> (typesideTypeId (symbol String))) (schemaAttributeSig (schemaAttributeId (symbol yattW)) : (schemaEntityId (symbol yWaterAnimal)) -> (typesideTypeId (symbol String))) allOptions) }))) (kindDeclaration (mappingAssignment mapping (mappingId (symbol F)) = (mappingExp literal : (schemaRef (symbol C)) -> (schemaRef (symbol D)) { (mappingLiteralSection (mappingLiteralSubsection entity (mappingEntitySig (schemaEntityId (symbol Amphibian)) -> (schemaEntityId (symbol yAmphibian))) foreign_keys (mappingForeignSig (schemaForeignId (symbol IsAL)) -> (schemaPath (schemaArrowId (schemaEntityId (symbol yIsAL))))) (mappingForeignSig (schemaForeignId (symbol IsAW)) -> (schemaPath (schemaArrowId (schemaEntityId (symbol yIsAW))))) attributes (mappingAttributeSig (schemaAttributeId (symbol attA)) -> (mappingAttributeTerm (schemaPath (schemaArrowId (schemaEntityId (symbol yattA))))))) (mappingLiteralSubsection entity (mappingEntitySig (schemaEntityId (symbol LandAnimal)) -> (schemaEntityId (symbol yLandAnimal))) attributes (mappingAttributeSig (schemaAttributeId (symbol attL)) -> (mappingAttributeTerm (schemaPath (schemaArrowId (schemaEntityId (symbol yattL))))))) (mappingLiteralSubsection entity (mappingEntitySig (schemaEntityId (symbol WaterAnimal)) -> (schemaEntityId (symbol yWaterAnimal))) attributes (mappingAttributeSig (schemaAttributeId (symbol attW)) -> (mappingAttributeTerm (schemaPath (schemaArrowId (schemaEntityId (symbol yattW))))))) allOptions) }))) (kindDeclaration (instanceAssignment instance (instanceId (symbol J)) = (instanceExp sigma (mappingKind (mappingRef (symbol F))) (instanceKind (instanceRef (symbol I)))))) (kindDeclaration (instanceAssignment instance (instanceId (symbol I1)) = (instanceExp literal : (schemaKind (schemaRef (symbol C))) { (instanceLiteralSection generators (instanceLiteralGen (instanceGenId (symbol xa1)) : (schemaEntityId (symbol Amphibian))) (instanceLiteralGen (instanceGenId (symbol xl1)) (instanceGenId (symbol xl2)) (instanceGenId (symbol xl3)) (instanceGenId (symbol xl4)) : (schemaEntityId (symbol LandAnimal))) (instanceLiteralGen (instanceGenId (symbol xw1)) (instanceGenId (symbol xw2)) (instanceGenId (symbol xw3)) : (schemaEntityId (symbol WaterAnimal))) equations (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xl1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xl2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xl3)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol human)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xl4)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol cow)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xw1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol fish)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xw2)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xw3)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol IsAL))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xa1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol xl1)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol IsAW))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xa1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol xw2)))))) (instanceEquation (instancePath (instanceArrowId (schemaEntityId (symbol attA))) ( (instancePath (instanceArrowId (schemaEntityId (symbol xa1)))) )) = (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) allOptions) }))) (kindDeclaration (transformAssignment transform (transformId (symbol t)) = (transformExp literal : (instanceKind (instanceRef (symbol I1))) -> (instanceRef (symbol I)) { (transformLiteralSection generators (transformGen (symbol xa1) -> (schemaPath (schemaArrowId (schemaEntityId (symbol a1))))) (transformGen (symbol xl1) -> (schemaPath (schemaArrowId (schemaEntityId (symbol l1))))) (transformGen (symbol xl2) -> (schemaPath (schemaArrowId (schemaEntityId (symbol l2))))) (transformGen (symbol xl3) -> (schemaPath (schemaArrowId (schemaEntityId (symbol l3))))) (transformGen (symbol xl4) -> (schemaPath (schemaArrowId (schemaEntityId (symbol l4))))) (transformGen (symbol xw1) -> (schemaPath (schemaArrowId (schemaEntityId (symbol w1))))) (transformGen (symbol xw2) -> (schemaPath (schemaArrowId (schemaEntityId (symbol w2))))) (transformGen (symbol xw3) -> (schemaPath (schemaArrowId (schemaEntityId (symbol w3))))) allOptions) }))) (kindDeclaration (transformAssignment transform (transformId (symbol u)) = (transformExp sigma (mappingKind (mappingRef (symbol F))) (transformRef (symbol t))))) (kindDeclaration (instanceAssignment instance (instanceId (symbol K)) = (instanceExp delta (mappingKind (mappingRef (symbol F))) (instanceKind (instanceRef (symbol J)))))) (kindDeclaration (transformAssignment transform (transformId (symbol v)) = (transformExp unit (mappingKind (mappingRef (symbol F))) (instanceRef (symbol I))))) (kindDeclaration (schemaAssignment schema (schemaId (symbol Animal)) = (schemaExp literal : (typesideKind (typesideRef (symbol Type))) { (schemaLiteralSection entities (schemaEntityId (symbol A)) attributes (schemaAttributeSig (schemaAttributeId (symbol name)) : (schemaEntityId (symbol A)) -> (typesideTypeId (symbol String))) allOptions) }))) (kindDeclaration (instanceAssignment instance (instanceId (symbol i_land)) = (instanceExp literal : (schemaKind (schemaRef (symbol Animal))) { (instanceLiteralSection generators (instanceLiteralGen (instanceGenId (symbol la1)) (instanceGenId (symbol la2)) (instanceGenId (symbol la3)) (instanceGenId (symbol la4)) (instanceGenId (symbol la5)) : (schemaEntityId (symbol A))) multi_equations (instanceMultiEquation (instanceEquationId (symbol name)) -> { (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol la1)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol la2)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol la3)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol human)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol la4)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol cow)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol la5)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol horse)))))) }) allOptions) }))) (kindDeclaration (instanceAssignment instance (instanceId (symbol i_water)) = (instanceExp literal : (schemaKind (schemaRef (symbol Animal))) { (instanceLiteralSection generators (instanceLiteralGen (instanceGenId (symbol wa1)) (instanceGenId (symbol wa2)) (instanceGenId (symbol wa3)) (instanceGenId (symbol wa4)) : (schemaEntityId (symbol A))) multi_equations (instanceMultiEquation (instanceEquationId (symbol name)) -> { (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol wa1)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol fish)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol wa2)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol wa3)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol wa4)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol dolphin)))))) }) allOptions) }))) (kindDeclaration (instanceAssignment instance (instanceId (symbol i_amphibian)) = (instanceExp literal : (schemaKind (schemaRef (symbol Animal))) { (instanceLiteralSection generators (instanceLiteralGen (instanceGenId (symbol aa1)) (instanceGenId (symbol aa2)) : (schemaEntityId (symbol A))) multi_equations (instanceMultiEquation (instanceEquationId (symbol name)) -> { (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol aa1)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol gecko)))))) , (instanceMultiBind (instancePath (instanceArrowId (schemaEntityId (symbol aa2)))) (instanceEquationValue (instancePath (instanceArrowId (schemaEntityId (symbol frog)))))) }) allOptions) }))) (kindDeclaration (transformAssignment transform (transformId (symbol t_amphland)) = (transformExp literal : (instanceKind (instanceRef (symbol i_amphibian))) -> (instanceRef (symbol i_land)) { (transformLiteralSection generators (transformGen (symbol aa1) -> (schemaPath (schemaArrowId (schemaEntityId (symbol la1))))) (transformGen (symbol aa2) -> (schemaPath (schemaArrowId (schemaEntityId (symbol la2))))) allOptions) }))) (kindDeclaration (transformAssignment transform (transformId (symbol t_amphwater)) = (transformExp literal : (instanceKind (instanceRef (symbol i_amphibian))) -> (instanceRef (symbol i_water)) { (transformLiteralSection generators (transformGen (symbol aa1) -> (schemaPath (schemaArrowId (schemaEntityId (symbol wa2))))) (transformGen (symbol aa2) -> (schemaPath (schemaArrowId (schemaEntityId (symbol wa3))))) allOptions) }))) (kindDeclaration (graphAssignment graph (graphId (symbol Span)) = (graphExp literal { (graphLiteralSection nodes (graphNodeId (symbol Amp)) (graphNodeId (symbol Lan)) (graphNodeId (symbol Wat)) edges (graphEdgeSig (graphEdgeId (symbol AmpLan)) : (graphSourceNodeId (symbol Amp)) -> (graphTargetNodeId (symbol Lan))) (graphEdgeSig (graphEdgeId (symbol AmpWat)) : (graphSourceNodeId (symbol Amp)) -> (graphTargetNodeId (symbol Wat)))) }))) (kindDeclaration (instanceAssignment instance (instanceId (symbol i_animalmerge)) = (instanceExp colimit (graphKind (graphRef (symbol Span))) (schemaKind (schemaRef (symbol Animal))) { (instanceColimitSection nodes (instanceColimitNode (instanceRef (symbol Amp)) -> (instanceKind (instanceRef (symbol i_amphibian)))) (instanceColimitNode (instanceRef (symbol Lan)) -> (instanceKind (instanceRef (symbol i_land)))) (instanceColimitNode (instanceRef (symbol Wat)) -> (instanceKind (instanceRef (symbol i_water)))) edges (instanceColimitEdge (schemaArrowId (schemaEntityId (symbol AmpLan))) -> (transformKind (transformRef (symbol t_amphland)))) (instanceColimitEdge (schemaArrowId (schemaEntityId (symbol AmpWat))) -> (transformKind (transformRef (symbol t_amphwater)))) allOptions) })))) <EOF>)