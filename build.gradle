import org.babeloff.ProjectVersion
import org.babeloff.ReleaseVersionTask
import org.babeloff.SnapshotVersionTask

apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'antlr'

apply plugin: 'idea'
apply plugin: 'eclipse'

group = 'net.catdata'

project.ext.versionFile = file('gradle/version.properties')

task loadVersion {
    project.version = ProjectVersion.read(logger, versionFile)
}

task makeReleaseVersion (type: ReleaseVersionTask) {
    release = version.release
    propFile = versionFile
}

task makeSnapshotVersion (type: SnapshotVersionTask) {
    propFile = versionFile
}

task showVersion {
    group = 'versioning'
    description = 'Prints project version.'

    doLast {
        logger.quiet "Version : ${project.version}"
    }
}

task showDependencies {
    doLast {
        configurations.getByName('antlr').each{
            dependency -> println dependency
        }
    }
}

description = "Categorical Data IDE"

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task createDistribution(type: Zip, dependsOn: makeReleaseVersion) {
    from jar

    from(sourceSets*.allSource) { into 'src' }
    from(rootDir) { include versionFile.name }
}

task backupReleaseDistribution(type: Copy) {
    from createDistribution.outputs.files
    into "$buildDir/backup"
}

task release(dependsOn: backupReleaseDistribution) {
    doLast { logger.quiet 'releasing the project...' }
}

configurations {
    all {   }
    antlr { resolutionStrategy { failOnVersionConflict() } }
}

// https://github.com/babeloff/boot-antlr4/blob/master/src/babeloff/boot_antlr4.clj
//
// (deftask build
//   [s show bool "show the arguments"]
//   (comp
//     (antlr/generate
//        :grammar "AqlLexerRules.g4"
//        :package "catdata.aql.grammar")
//     (antlr/generate
//        :grammar "AqlParser.g4"
//        :package "catdata.aql.grammar"
//        :visitor true
//        :listener true)
//     (javac)))

wrapper {
    gradleVersion = '4.10'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}


sourceSets {
    main {
        java {
            srcDirs = ['src', 'build/generated-src/antlr']
        }

        antlr {
            // srcDirs = ['src/main/antlr','src/main/antlr_imports']
        }
    }

    test {
        java {
            srcDirs = ['test']
        }
    }

}

idea {
    module {
        generatedSourceDirs += file("${project.buildDir}/generated-src/antlr/main")
        downloadJavadoc = true
        downloadSources = false
    }
}

generateGrammarSource {
    // generateGrammarSource = "AqlParser"
    maxHeapSize = "64m"
    // includes = ["${project.rootDir}/src/main/antlr4/imports"]
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main")
    source = "${sourceSets.main.antlr}/"

    arguments << '-lib' << 'src/main/antlr_imports/'
    arguments << '-visitor'
    arguments << '-listener'
    arguments << '-long-messages'
    arguments << '-package' << 'catdata.aql.grammar'
}

repositories {
     maven { url "https://nexus.isis.vanderbilt.edu/repository/maven-releases" }
     maven { url "https://nexus.isis.vanderbilt.edu/repository/maven-snapshots" }
     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile group: 'net.sourceforge.collections', name: 'collections-generic', version:'4.01'
    compile group: 'org.apache.commons', name: 'commons-csv', version:'1.5'
    compile group: 'org.apache.commons', name: 'commons-exec', version:'1.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.7'
    compile group: 'com.h2database', name: 'h2', version:'1.4.196'
    compile group: 'org.glassfish', name: 'javax.json', version:'1.1.2'
    compile group: 'jgraph', name: 'jgraph', version:'5.12.3.2'
    compile group: 'org.jparsec', name: 'jparsec', version:'3.0'
    compile group: 'net.sf.jung', name: 'jung-algorithms', version:'2.1.1'
    compile group: 'net.sf.jung', name: 'jung-api', version:'2.1.1'
    compile group: 'net.sf.jung', name: 'jung-graph-impl', version:'2.1.1'
    compile group: 'net.sf.jung', name: 'jung-visualization', version:'2.1.1'
    compile group: 'com.opencsv', name: 'opencsv', version:'4.1'
    compile group: 'com.fifesoft', name: 'autocomplete', version:'2.6.1'
    compile group: 'com.fifesoft', name: 'rstaui', version:'2.6.1'
    compile group: 'com.fifesoft', name: 'rsyntaxtextarea', version:'2.6.1'
    compile group: 'es.nitaur.markdown', name: 'txtmark', version:'0.16'
    compile group: 'org.antlr', name: 'antlr4-runtime', version:'4.7.1'
    antlr group: 'org.antlr', name: 'antlr4', version: '4.7.1'
    testCompile group: 'junit', name: 'junit', version:'4.12'
}
